Multisource Policies ERP Validation Script


Multisource Policy---


UPDATE PWC_E_MULTISRCPOL
	SET ERRORDESC = CONCAT(ERRORDESC,'POLICYNAME is blank','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'Error', '; ')
	FROM PWC_E_MULTISRCPOL	
	WHERE 
		POLICYNAME= '' or POLICYNAME is null

UPDATE PWC_E_MULTISRCPOL
	SET ERRORDESC = CONCAT(ERRORDESC,'BALANCEPERIODDAYS is blank','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'Error', '; ')
	FROM PWC_E_MULTISRCPOL	
	WHERE 
		BALANCEPERIODDAYS= '' or BALANCEPERIODDAYS is null

 UPDATE PWC_E_MULTISRCPOL 
	SET ERRORDESC = CONCAT(ERRORDESC,'POLICYNAME,DATAAREAID has duplicate values','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'Constraint', '; ')
	FROM PWC_E_MULTISRCPOL	
	WHERE 
		POLICYNAME IS NOT NULL AND DATAAREAID IS NOT NULL AND CONCAT(POLICYNAME,DATAAREAID) IN 
		(SELECT CONCAT(POLICYNAME,DATAAREAID) FROM PWC_E_MULTISRCPOL
		GROUP BY POLICYNAME,DATAAREAID HAVING COUNT(*)>1)

UPDATE PWC_E_MULTISRCPOL
	SET ERRORDESC2 = CONCAT(ERRORDESC2,'BALANCEPERIODDAYS is not an integer','; ')
	,ERRORSTATUS2 = CONCAT(ERRORSTATUS2, 'Constraint', '; ')
	FROM PWC_E_MULTISRCPOL
	WHERE
		BALANCEPERIODDAYS LIKE '%[^0-9]%'



Multisource policy entry---


UPDATE PWC_E_MULTISRCPOLENTRY
	SET ERRORDESC = CONCAT(ERRORDESC,'VENDORACCOUNTNUMBER is blank','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'Error', '; ')
	FROM PWC_E_MULTISRCPOLENTRY	
	WHERE 
		VENDORACCOUNTNUMBER= '' or VENDORACCOUNTNUMBER is null


UPDATE PWC_E_MULTISRCPOLENTRY
	SET ERRORDESC = CONCAT(ERRORDESC,'ALLOCATIONPCT is blank','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'Error', '; ')
	FROM PWC_E_MULTISRCPOLENTRY	
	WHERE 
		ALLOCATIONPCT= '' or ALLOCATIONPCT is null

UPDATE PWC_E_MULTISRCPOLENTRY
	SET ERRORDESC = CONCAT(ERRORDESC,'Sum of target allocations of all vendors is not 100','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'Error', '; ')
	FROM PWC_E_MULTISRCPOLENTRY	
	WHERE 
		DATAAREAID IS NOT NULL AND DATAAREAID IN
(SELECT B.DATAAREAID FROM (SELECT DATAAREAID, SUM(TRY_CAST(TARGETALLOCATION AS int)) AS ALLOCATION FROM PWC_MULTISRCPOLENTRY GROUP BY DATAAREAID) B WHERE B.ALLOCATION < 100)


UPDATE PWC_E_MULTISRCPOLENTRY
	SET ERRORDESC = CONCAT(ERRORDESC,'POLICYNAME is blank','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'Error', '; ')
	FROM PWC_E_MULTISRCPOLENTRY	
	WHERE 
		POLICYNAME= '' or POLICYNAME is null

 UPDATE PWC_E_MULTISRCPOLENTRY 
	SET ERRORDESC = CONCAT(ERRORDESC,'VENDORACCOUNTNUMBER,POLICYNAME,DATAAREAID has duplicate values','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'Constraint', '; ')
	FROM PWC_E_MULTISRCPOLENTRY	
	WHERE 
		VENDORACCOUNTNUMBER IS NOT NULL AND POLICYNAME IS NOT NULL AND DATAAREAID IS NOT NULL AND CONCAT(VENDORACCOUNTNUMBER,POLICYNAME,DATAAREAID) IN 
		(SELECT CONCAT(VENDORACCOUNTNUMBER,POLICYNAME,DATAAREAID) FROM PWC_E_MULTISRCPOLENTRY
		GROUP BY VENDORACCOUNTNUMBER,POLICYNAME,DATAAREAID HAVING COUNT(*)>1)

UPDATE PWC_E_MULTISRCPOLENTRY
	SET ERRORDESC = CONCAT(ERRORDESC,'VENDORACCOUNTNUMBER is not in VENDORACCOUNTNUMBER of Vendor master','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'Error', '; ')
	FROM PWC_E_MULTISRCPOLENTRY A
	WHERE
		VENDORACCOUNTNUMBER IS NOT NULL AND VENDORACCOUNTNUMBER NOT IN 
		(SELECT B.VENDORACCOUNTNUMBER FROM PWC_E_VENDOR B WHERE (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND B.VENDORACCOUNTNUMBER IS NOT NULL)

UPDATE PWC_E_MULTISRCPOLENTRY
	SET ERRORDESC = CONCAT(ERRORDESC,'POLICYNAME is not in POLICYNAME of Multisource Policy','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'Error', '; ')
	FROM PWC_E_MULTISRCPOLENTRY A
	WHERE
		POLICYNAME IS NOT NULL AND POLICYNAME NOT IN 
		(SELECT B.POLICYNAME FROM PWC_E_MULTISRCPOL B WHERE (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND B.POLICYNAME IS NOT NULL)

UPDATE PWC_E_MULTISRCPOLENTRY
	SET ERRORDESC2 = CONCAT(ERRORDESC2,'ALLOCATIONPCT is not a real number','; ')
	,ERRORSTATUS2 = CONCAT(ERRORSTATUS2, 'Constraint', '; ')
	FROM PWC_E_MULTISRCPOLENTRY
	WHERE
		ALLOCATIONPCT LIKE '%[^0-9.]%'





Multisource policy assignment---

UPDATE PWC_E_MULTISRCPOLASSIGN
	SET ERRORDESC = CONCAT(ERRORDESC,'POLICYNAME is blank','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'Error', '; ')
	FROM PWC_E_MULTISRCPOLASSIGN
	WHERE 
		POLICYNAME= '' or POLICYNAME is null

UPDATE PWC_E_MULTISRCPOLASSIGN
	SET ERRORDESC = CONCAT(ERRORDESC,'ITEMNUMBER is blank','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'Error', '; ')
	FROM PWC_E_MULTISRCPOLASSIGN
	WHERE 
		ITEMNUMBER= '' or ITEMNUMBER is null

 UPDATE PWC_E_MULTISRCPOLASSIGN 
	SET ERRORDESC = CONCAT(ERRORDESC,'ITEMNUMBER,VALIDFROMDATE,DATAAREAID has duplicate values','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'Constraint', '; ')
	FROM PWC_E_MULTISRCPOLENTRY	
	WHERE 
		ITEMNUMBER IS NOT NULL AND VALIDFROMDATE IS NOT NULL AND DATAAREAID IS NOT NULL AND CONCAT(ITEMNUMBER,VALIDFROMDATE,DATAAREAID) IN 
		(SELECT CONCAT(ITEMNUMBER,VALIDFROMDATE,DATAAREAID) FROM PWC_E_MULTISRCPOLASSIGN
		GROUP BY ITEMNUMBER,VALIDFROMDATE,DATAAREAID HAVING COUNT(*)>1)

UPDATE PWC_E_MULTISRCPOLASSIGN
	SET ERRORDESC = CONCAT(ERRORDESC, 'VALIDFROMDATE HAS WRONG DATE FORMAT','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'ERROR', '; ')
	FROM PWC_E_MULTISRCPOLASSIGN
	WHERE
		VALIDFROMDATE IS NOT NULL AND ISDATE(VALIDFROMDATE) = 0

UPDATE PWC_E_MULTISRCPOLASSIGN
	SET ERRORDESC = CONCAT(ERRORDESC, 'VALIDTODATE HAS WRONG DATE FORMAT','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'ERROR', '; ')
	FROM PWC_E_MULTISRCPOLASSIGN
	WHERE
		VALIDTODATE IS NOT NULL AND ISDATE(VALIDTODATE) = 0

UPDATE PWC_E_MULTISRCPOLASSIGN
	SET ERRORDESC = CONCAT(ERRORDESC,'VALIDTODATE is less than VALIDFROMDATE','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'Error', '; ')
	FROM PWC_E_MULTISRCPOLASSIGN 	
	WHERE 
		VALIDTODATE is not NULL and VALIDFROMDATE is not NULL and (VALIDTODATE < VALIDFROMDATE)

UPDATE PWC_E_MULTISRCPOLASSIGN
	SET ERRORDESC = CONCAT(ERRORDESC,'POLICYNAME is not in POLICYNAME of Multisource Policy','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'Error', '; ')
	FROM PWC_E_MULTISRCPOLASSIGN A
	WHERE
		POLICYNAME IS NOT NULL AND POLICYNAME NOT IN 
		(SELECT B.POLICYNAME FROM PWC_E_MULTISRCPOL B WHERE (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND B.POLICYNAME IS NOT NULL)

UPDATE PWC_E_MULTISRCPOLASSIGN
	SET ERRORDESC = CONCAT(ERRORDESC,'ITEMNUMBER is not in ITEMNUMBER of Item Master','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'Error', '; ')
	FROM PWC_E_MULTISRCPOLASSIGN A
	WHERE
		ITEMNUMBER IS NOT NULL AND ITEMNUMBER NOT IN 
		(SELECT B.ITEMNUMBER FROM PWC_E_ECORESRELEASEDPRODUCTV2STAGING B WHERE (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND B.ITEMNUMBER IS NOT NULL)

UPDATE PWC_E_MULTISRCPOLASSIGN
	SET ERRORDESC = CONCAT(ERRORDESC,'SITEID is not in SITEID of Site Master','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'Error', '; ')
	FROM PWC_E_MULTISRCPOLASSIGN A
	WHERE
		SITEID IS NOT NULL AND SITEID NOT IN 
		(SELECT B.SITEID FROM PWC_E_SITEERP B WHERE (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND B.SITEID IS NOT NULL)

UPDATE PWC_E_MULTISRCPOLASSIGN
	SET ERRORDESC = CONCAT(ERRORDESC,'WAREHOUSEID is not in WAREHOUSEID of Warehouse Master','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'Error', '; ')
	FROM PWC_E_MULTISRCPOLASSIGN A
	WHERE
		WAREHOUSEID IS NOT NULL AND WAREHOUSEID NOT IN 
		(SELECT B.WAREHOUSEID FROM PWC_E_WAREHOUSEERP B WHERE (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND B.WAREHOUSEID IS NOT NULL)

UPDATE PWC_E_MULTISRCPOLASSIGN
	SET ERRORDESC = CONCAT(ERRORDESC,'WAREHOUSEID,SITEID,DATAAREAID is not matching with the Warehouse master data provided','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'Error', '; ')
	FROM PWC_E_MULTISRCPOLASSIGN 
	WHERE
		WAREHOUSEID IS NOT NULL AND
		SITEID IS NOT NULL AND
		DATAAREAID IS NOT NULL AND
		CONCAT(WAREHOUSEID,SITEID,DATAAREAID) NOT IN 
		(SELECT CONCAT(WAREHOUSEID,SITEID,DATAAREAID) FROM PWC_E_WAREHOUSEERP)


UPDATE PWC_E_MULTISRCPOLASSIGN
	SET ERRORDESC = CONCAT(ERRORDESC,'VENDORACCOUNTNUMBER,ITEMNUMBER,DATAAREAID combination not matching with approved vendor list','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'Error', '; ')
	FROM PWC_E_MULTISRCPOLASSIGN E
		WHERE
	ITEMNUMBER IS NOT NULL AND ITEMNUMBER NOT IN
	(SELECT C.ITEMNUMBER FROM (SELECT A.VENDORACCOUNTNUMBER,B.ITEMNUMBER,B.DATAAREAID FROM PWC_E_MULTISRCPOLENTRY A
	JOIN PWC_E_MULTISRCPOLASSIGN B ON A.POLICYNAME = B.POLICYNAME AND A.DATAAREAID = B.DATAAREAID) C
	WHERE CONCAT(C.VENDORACCOUNTNUMBER, C.ITEMNUMBER) NOT IN
	(SELECT CONCAT(D.ITEMNUMBER,D.APPROVEDVENDORACCOUNTNUMBER) FROM PWC_E_PURCHPRODUCTAPPROVEDVENDORSTAGING D WHERE (D.DATAAREAID = C.DATAAREAID OR 	D.DATAAREAID LIKE 'GLOBAL' OR C.DATAAREAID LIKE 'GLOBAL')) AND (E.DATAAREAID = C.DATAAREAID OR E.DATAAREAID LIKE 'GLOBAL' OR C.DATAAREAID LIKE 'GLOBAL'))



Order quantity per vendor---


UPDATE PWC_E_ORDERQUANTVEND
	SET ERRORDESC = CONCAT(ERRORDESC,'VENDORACCOUNTNUMBER is blank','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'Error', '; ')
	FROM PWC_E_ORDERQUANTVEND
	WHERE 
		VENDORACCOUNTNUMBER= '' or VENDORACCOUNTNUMBER is null

UPDATE PWC_E_ORDERQUANTVEND
	SET ERRORDESC = CONCAT(ERRORDESC,'ITEMNUMBER is blank','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'Error', '; ')
	FROM PWC_E_ORDERQUANTVEND
	WHERE 
		ITEMNUMBER= '' or ITEMNUMBER is null

UPDATE PWC_E_ORDERQUANTVEND
	SET ERRORDESC = CONCAT(ERRORDESC,'MINIMUMORDERQUANTITY is blank','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'Error', '; ')
	FROM PWC_E_ORDERQUANTVEND
	WHERE 
		MINIMUMORDERQUANTITY= '' or MINIMUMORDERQUANTITY is null

UPDATE PWC_E_ORDERQUANTVEND 
	SET ERRORDESC = CONCAT(ERRORDESC,'ITEMNUMBER,VENDORACCOUNTNUMBER,DATAAREAID has duplicate values','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'Constraint', '; ')
	FROM PWC_E_ORDERQUANTVEND	
	WHERE 
		ITEMNUMBER IS NOT NULL AND VENDORACCOUNTNUMBER IS NOT NULL AND DATAAREAID IS NOT NULL AND CONCAT(ITEMNUMBER,VENDORACCOUNTNUMBER,DATAAREAID) IN 
		(SELECT CONCAT(ITEMNUMBER,VENDORACCOUNTNUMBER,DATAAREAID) FROM PWC_E_ORDERQUANTVEND
		GROUP BY ITEMNUMBER,VENDORACCOUNTNUMBER,DATAAREAID HAVING COUNT(*)>1)

UPDATE PWC_E_ORDERQUANTVEND
	SET ERRORDESC = CONCAT(ERRORDESC,'VENDORACCOUNTNUMBER is not in VENDORACCOUNTNUMBER of Vendor master','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'Error', '; ')
	FROM PWC_E_ORDERQUANTVEND A
	WHERE
		VENDORACCOUNTNUMBER IS NOT NULL AND VENDORACCOUNTNUMBER NOT IN 
		(SELECT B.VENDORACCOUNTNUMBER FROM PWC_E_VENDOR B WHERE (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND B.VENDORACCOUNTNUMBER IS NOT NULL)

UPDATE PWC_E_ORDERQUANTVEND
	SET ERRORDESC = CONCAT(ERRORDESC,'ITEMNUMBER is not in ITEMNUMBER of Item Master','; ')
	,ERRORSTATUS = CONCAT(ERRORSTATUS, 'Error', '; ')
	FROM PWC_E_ORDERQUANTVEND A
	WHERE
		ITEMNUMBER IS NOT NULL AND ITEMNUMBER NOT IN 
		(SELECT B.ITEMNUMBER FROM PWC_E_ECORESRELEASEDPRODUCTV2STAGING B WHERE (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND B.ITEMNUMBER IS NOT NULL)

UPDATE PWC_E_ORDERQUANTVEND
	SET ERRORDESC2 = CONCAT(ERRORDESC2,'MINIMUMORDERQUANTITY is not a real number','; ')
	,ERRORSTATUS2 = CONCAT(ERRORSTATUS2, 'Constraint', '; ')
	FROM PWC_E_ORDERQUANTVEND
	WHERE
		MINIMUMORDERQUANTITY LIKE '%[^0-9.]%'
