CREATE OR ALTER PROCEDURE PWC_SP_Validate_VendVendorPostalAddressEntity
AS
BEGIN

-- Mandatory field missing:
-- VENDORACCOUNTNUMBER is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorPostalAddressEntity' TABLEID, 
'VENDORACCOUNTNUMBER' ERRORCOLUMN, 
PWCROWID ROWID, 
1 CATEGORY, 
'VENDORACCOUNTNUMBER is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorPostalAddressEntity A
WHERE 
VENDORACCOUNTNUMBER = '' OR VENDORACCOUNTNUMBER IS NULL;

-- Business required fields missing:
-- ADDRESSCITY is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorPostalAddressEntity' TABLEID, 
'ADDRESSCITY' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'ADDRESSCITY is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorPostalAddressEntity A
WHERE 
ADDRESSCITY = '' OR ADDRESSCITY IS NULL;

-- ADDRESSCOUNTRYREGIONID is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorPostalAddressEntity' TABLEID, 
'ADDRESSCOUNTRYREGIONID' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'ADDRESSCOUNTRYREGIONID is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorPostalAddressEntity A
WHERE 
ADDRESSCOUNTRYREGIONID = '' OR ADDRESSCOUNTRYREGIONID IS NULL;

-- ADDRESSDESCRIPTION is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorPostalAddressEntity' TABLEID, 
'ADDRESSDESCRIPTION' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'ADDRESSDESCRIPTION is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorPostalAddressEntity A
WHERE 
ADDRESSDESCRIPTION = '' OR ADDRESSDESCRIPTION IS NULL;

-- ADDRESSSTATEID is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorPostalAddressEntity' TABLEID, 
'ADDRESSSTATEID' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'ADDRESSSTATEID is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorPostalAddressEntity A
WHERE 
ADDRESSSTATEID = '' OR ADDRESSSTATEID IS NULL;

-- ADDRESSSTREET is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorPostalAddressEntity' TABLEID, 
'ADDRESSSTREET' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'ADDRESSSTREET is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorPostalAddressEntity A
WHERE 
ADDRESSSTREET = '' OR ADDRESSSTREET IS NULL;

-- ISPRIMARY is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorPostalAddressEntity' TABLEID, 
'ISPRIMARY' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'ISPRIMARY is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorPostalAddressEntity A
WHERE 
ISPRIMARY = '' OR ISPRIMARY IS NULL;



-- Duplicate occurrence:
-- VENDORACCOUNTNUMBER has duplicate values
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_VendVendorPostalAddressEntity' TABLEID, 
    'VENDORACCOUNTNUMBER' ERRORCOLUMN, 
    PWCROWID ROWID, 
    3 CATEGORY, 
    CASE 
        WHEN LEN(VENDORACCOUNTNUMBER) > 20 THEN 
            'VENDORACCOUNTNUMBER has duplicate values upon truncation'
        ELSE 
            'VENDORACCOUNTNUMBER has duplicate values'
    END ERRORDESC, 
    VENDORACCOUNTNUMBER ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorPostalAddressEntity A
WHERE 
    CONCAT(LEFT(VENDORACCOUNTNUMBER, 20), DATAAREAID) IN (
    SELECT CONCAT(LEFT(VENDORACCOUNTNUMBER, 20), DATAAREAID) 
    FROM PWC_T_VendVendorPostalAddressEntity
    GROUP BY LEFT(VENDORACCOUNTNUMBER, 20), DATAAREAID 
    HAVING COUNT(*) > 1
);






-- Invalid submaster reference
-- VENDORLEGALENTITYID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_VendVendorPostalAddressEntity' TABLEID, 
    CASE 
        WHEN COUNT(B.LEGALENTITYID) = 0 THEN 'VENDORLEGALENTITYID'
        WHEN COUNT(E.CATEGORY) <> 0 THEN 'VENDORLEGALENTITYID,[PWC_T_OMLegalEntity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN COUNT(B.LEGALENTITYID) = 0 THEN 4
        WHEN COUNT(E.CATEGORY) <> 0 THEN 5
    END CATEGORY, 
    CASE 
        WHEN COUNT(B.LEGALENTITYID) = 0 THEN 'VENDORLEGALENTITYID is not present in LEGALENTITYID of PWC_T_OMLegalEntity'
        WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_OMLegalEntity has error(s) in corresponding LEGALENTITYID'
    END ERRORDESC,
    A.VENDORLEGALENTITYID ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorPostalAddressEntity A
LEFT JOIN PWC_T_OMLegalEntity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.VENDORLEGALENTITYID = B.LEGALENTITYID
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_OMLegalEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.VENDORLEGALENTITYID IS NOT NULL AND A.VENDORLEGALENTITYID != ''
GROUP BY TABLEID, A.PWCROWID, A.VENDORLEGALENTITYID, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;

-- VENDORACCOUNTNUMBER validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_VendVendorPostalAddressEntity' TABLEID, 
    CASE 
        WHEN COUNT(B.VENDORACCOUNTNUMBER) = 0 THEN 'VENDORACCOUNTNUMBER'
        WHEN COUNT(E.CATEGORY) <> 0 THEN 'VENDORACCOUNTNUMBER,[PWC_T_VendVendorV2Entity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN COUNT(B.VENDORACCOUNTNUMBER) = 0 THEN 4
        WHEN COUNT(E.CATEGORY) <> 0 THEN 5
    END CATEGORY, 
    CASE 
        WHEN COUNT(B.VENDORACCOUNTNUMBER) = 0 THEN 'VENDORACCOUNTNUMBER is not present in VENDORACCOUNTNUMBER of PWC_T_VendVendorV2Entity'
        WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_VendVendorV2Entity has error(s) in corresponding VENDORACCOUNTNUMBER'
    END ERRORDESC,
    A.VENDORACCOUNTNUMBER ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorPostalAddressEntity A
LEFT JOIN PWC_T_VendVendorV2Entity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.VENDORACCOUNTNUMBER = B.VENDORACCOUNTNUMBER
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_VendVendorV2Entity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.VENDORACCOUNTNUMBER IS NOT NULL AND A.VENDORACCOUNTNUMBER != ''
GROUP BY TABLEID, A.PWCROWID, A.VENDORACCOUNTNUMBER, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;


-- ADDRESSCITY validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_VendVendorPostalAddressEntity' TABLEID, 
    CASE 
        WHEN COUNT(B.NAME) = 0 THEN 'ADDRESSCITY'
        WHEN COUNT(E.CATEGORY) <> 0 THEN 'ADDRESSCITY,[PWC_T_LogisticsAddressCityEntity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN COUNT(B.NAME) = 0 THEN 4
        WHEN COUNT(E.CATEGORY) <> 0 THEN 5
    END CATEGORY, 
    CASE 
        WHEN COUNT(B.NAME) = 0 THEN 'ADDRESSCITY is not present in NAME of PWC_T_LogisticsAddressCityEntity'
        WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_LogisticsAddressCityEntity has error(s) in corresponding NAME'
    END ERRORDESC,
    A.ADDRESSCITY ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorPostalAddressEntity A
LEFT JOIN PWC_T_LogisticsAddressCityEntity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.ADDRESSCITY = B.NAME
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_LogisticsAddressCityEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.ADDRESSCITY IS NOT NULL AND A.ADDRESSCITY != ''
GROUP BY TABLEID, A.PWCROWID, A.ADDRESSCITY, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;

-- ADDRESSCOUNTRYREGIONID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_VendVendorPostalAddressEntity' TABLEID, 
    CASE 
        WHEN COUNT(B.COUNTRYREGION) = 0 THEN 'ADDRESSCOUNTRYREGIONID'
        WHEN COUNT(E.CATEGORY) <> 0 THEN 'ADDRESSCOUNTRYREGIONID,[PWC_T_LogisticsAddressCountryRegionEntity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN COUNT(B.COUNTRYREGION) = 0 THEN 4
        WHEN COUNT(E.CATEGORY) <> 0 THEN 5
    END CATEGORY, 
    CASE 
        WHEN COUNT(B.COUNTRYREGION) = 0 THEN 'ADDRESSCOUNTRYREGIONID is not present in COUNTRYREGION of PWC_T_LogisticsAddressCountryRegionEntity'
        WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_LogisticsAddressCountryRegionEntity has error(s) in corresponding COUNTRYREGION'
    END ERRORDESC,
    A.ADDRESSCOUNTRYREGIONID ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorPostalAddressEntity A
LEFT JOIN PWC_T_LogisticsAddressCountryRegionEntity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.ADDRESSCOUNTRYREGIONID = B.COUNTRYREGION
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_LogisticsAddressCountryRegionEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.ADDRESSCOUNTRYREGIONID IS NOT NULL AND A.ADDRESSCOUNTRYREGIONID != ''
GROUP BY TABLEID, A.PWCROWID, A.ADDRESSCOUNTRYREGIONID, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;

-- ADDRESSSTATEID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_VendVendorPostalAddressEntity' TABLEID, 
    CASE 
        WHEN COUNT(B.STATE) = 0 THEN 'ADDRESSSTATEID'
        WHEN COUNT(E.CATEGORY) <> 0 THEN 'ADDRESSSTATEID,[PWC_T_LogisticsAddressStateEntity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN COUNT(B.STATE) = 0 THEN 4
        WHEN COUNT(E.CATEGORY) <> 0 THEN 5
    END CATEGORY, 
    CASE 
        WHEN COUNT(B.STATE) = 0 THEN 'ADDRESSSTATEID is not present in STATE of PWC_T_LogisticsAddressStateEntity'
        WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_LogisticsAddressStateEntity has error(s) in corresponding STATE'
    END ERRORDESC,
    A.ADDRESSSTATEID ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorPostalAddressEntity A
LEFT JOIN PWC_T_LogisticsAddressStateEntity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.ADDRESSSTATEID = B.STATE
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_LogisticsAddressStateEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.ADDRESSSTATEID IS NOT NULL AND A.ADDRESSSTATEID != ''
GROUP BY TABLEID, A.PWCROWID, A.ADDRESSSTATEID, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;













-- String length exceeded maximum
-- VENDORLEGALENTITYID exceeds max length 4
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorPostalAddressEntity' TABLEID, 
'VENDORLEGALENTITYID' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'VENDORLEGALENTITYID exceeds max length 4' ERRORDESC, 
VENDORLEGALENTITYID ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorPostalAddressEntity A
WHERE LEN(VENDORLEGALENTITYID) > 4;

-- VENDORACCOUNTNUMBER exceeds max length 20
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorPostalAddressEntity' TABLEID, 
'VENDORACCOUNTNUMBER' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'VENDORACCOUNTNUMBER exceeds max length 20' ERRORDESC, 
VENDORACCOUNTNUMBER ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorPostalAddressEntity A
WHERE LEN(VENDORACCOUNTNUMBER) > 20;

-- ADDRESSCITY exceeds max length 60
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorPostalAddressEntity' TABLEID, 
'ADDRESSCITY' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'ADDRESSCITY exceeds max length 60' ERRORDESC, 
ADDRESSCITY ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorPostalAddressEntity A
WHERE LEN(ADDRESSCITY) > 60;

-- ADDRESSCOUNTRYREGIONID exceeds max length 10
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorPostalAddressEntity' TABLEID, 
'ADDRESSCOUNTRYREGIONID' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'ADDRESSCOUNTRYREGIONID exceeds max length 10' ERRORDESC, 
ADDRESSCOUNTRYREGIONID ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorPostalAddressEntity A
WHERE LEN(ADDRESSCOUNTRYREGIONID) > 10;

-- ADDRESSDESCRIPTION exceeds max length 60
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorPostalAddressEntity' TABLEID, 
'ADDRESSDESCRIPTION' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'ADDRESSDESCRIPTION exceeds max length 60' ERRORDESC, 
ADDRESSDESCRIPTION ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorPostalAddressEntity A
WHERE LEN(ADDRESSDESCRIPTION) > 60;

-- ADDRESSSTATEID exceeds max length 10
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorPostalAddressEntity' TABLEID, 
'ADDRESSSTATEID' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'ADDRESSSTATEID exceeds max length 10' ERRORDESC, 
ADDRESSSTATEID ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorPostalAddressEntity A
WHERE LEN(ADDRESSSTATEID) > 10;

-- ADDRESSSTREET exceeds max length 250
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorPostalAddressEntity' TABLEID, 
'ADDRESSSTREET' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'ADDRESSSTREET exceeds max length 250' ERRORDESC, 
ADDRESSSTREET ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorPostalAddressEntity A
WHERE LEN(ADDRESSSTREET) > 250;

-- ADDRESSSTREETNUMBER exceeds max length 20
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorPostalAddressEntity' TABLEID, 
'ADDRESSSTREETNUMBER' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'ADDRESSSTREETNUMBER exceeds max length 20' ERRORDESC, 
ADDRESSSTREETNUMBER ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorPostalAddressEntity A
WHERE LEN(ADDRESSSTREETNUMBER) > 20;

EXEC PWC_SP_CALCULATESUCCESSFULCOUNT @TableName = 'PWC_T_VendVendorPostalAddressEntity'
END
