CREATE OR ALTER PROCEDURE PWC_SP_Validate_PurchPurchaseAgreementHeaderV2Entity
AS
BEGIN

-- Invalid data format:
-- DEFAULTEFFECTIVEDATE HAS WRONG DATE FORMAT
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchPurchaseAgreementHeaderV2Entity' TABLEID, 
    'DEFAULTEFFECTIVEDATE' ERRORCOLUMN, 
    PWCROWID ROWID, 
    2 CATEGORY, 
    'DEFAULTEFFECTIVEDATE has wrong date format' ERRORDESC, 
    DEFAULTEFFECTIVEDATE ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity A
WHERE 
    DEFAULTEFFECTIVEDATE IS NOT NULL AND ISDATE(DEFAULTEFFECTIVEDATE) = 0;

-- DEFAULTEXPIRATIONDATE HAS WRONG DATE FORMAT
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchPurchaseAgreementHeaderV2Entity' TABLEID, 
    'DEFAULTEXPIRATIONDATE' ERRORCOLUMN, 
    PWCROWID ROWID, 
    2 CATEGORY, 
    'DEFAULTEXPIRATIONDATE has wrong date format' ERRORDESC, 
    DEFAULTEXPIRATIONDATE ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity A
WHERE 
    DEFAULTEXPIRATIONDATE IS NOT NULL AND ISDATE(DEFAULTEXPIRATIONDATE) = 0;




-- Other system checks
-- DEFAULTEFFECTIVEDATE should not be greater than PRICEAPPLICABLETODATE
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_OPNSALEJRNLLINESV2' TABLEID, 
    '(DEFAULTEFFECTIVEDATE, PRICEAPPLICABLETODATE)' ERRORCOLUMN, 
    PWCROWID ROWID, 
    6 CATEGORY, 
    'DEFAULTEFFECTIVEDATE should not be greater than PRICEAPPLICABLETODATE' ERRORDESC, 
    CONCAT('(', DEFAULTEFFECTIVEDATE, ', ', PRICEAPPLICABLETODATE, ')') ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_OPNSALEJRNLLINESV2 A
WHERE 
    DEFAULTEFFECTIVEDATE IS NOT NULL AND
    PRICEAPPLICABLETODATE IS NOT NULL AND
    TRY_CAST(DEFAULTEFFECTIVEDATE AS DATE) > TRY_CAST(PRICEAPPLICABLETODATE AS DATE);




-- Mandatory field missing
-- AGREEMENTVENDORACCOUNTNUMBER is blank
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchPurchaseAgreementHeaderV2Entity' TABLEID, 
    'AGREEMENTVENDORACCOUNTNUMBER' ERRORCOLUMN, 
    PWCROWID ROWID, 
    1 CATEGORY, 
    'AGREEMENTVENDORACCOUNTNUMBER is blank' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity A
WHERE 
    AGREEMENTVENDORACCOUNTNUMBER = '' OR AGREEMENTVENDORACCOUNTNUMBER IS NULL;

-- PURCHASEAGREEMENTID is blank
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchPurchaseAgreementHeaderV2Entity' TABLEID, 
    'PURCHASEAGREEMENTID' ERRORCOLUMN, 
    PWCROWID ROWID, 
    1 CATEGORY, 
    'PURCHASEAGREEMENTID is blank' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity A
WHERE 
    PURCHASEAGREEMENTID = '' OR PURCHASEAGREEMENTID IS NULL;






-- Business required fields missing
-- PURCHASEAGREEMENTCLASSIFICATIONNAME is blank
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchPurchaseAgreementHeaderV2Entity' TABLEID, 
    'PURCHASEAGREEMENTCLASSIFICATIONNAME' ERRORCOLUMN, 
    PWCROWID ROWID, 
    8 CATEGORY, 
    'PURCHASEAGREEMENTCLASSIFICATIONNAME is blank' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity A
WHERE 
    PURCHASEAGREEMENTCLASSIFICATIONNAME = '' OR PURCHASEAGREEMENTCLASSIFICATIONNAME IS NULL;

-- BUYINGLEGALENTITYID is blank
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchPurchaseAgreementHeaderV2Entity' TABLEID, 
    'BUYINGLEGALENTITYID' ERRORCOLUMN, 
    PWCROWID ROWID, 
    8 CATEGORY, 
    'BUYINGLEGALENTITYID is blank' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity A
WHERE 
    BUYINGLEGALENTITYID = '' OR BUYINGLEGALENTITYID IS NULL;

-- AGREEMENTSTATUS is blank
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchPurchaseAgreementHeaderV2Entity' TABLEID, 
    'AGREEMENTSTATUS' ERRORCOLUMN, 
    PWCROWID ROWID, 
    8 CATEGORY, 
    'AGREEMENTSTATUS is blank' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity A
WHERE 
    AGREEMENTSTATUS = '' OR AGREEMENTSTATUS IS NULL;

-- CURRENCYCODE is blank
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchPurchaseAgreementHeaderV2Entity' TABLEID, 
    'CURRENCYCODE' ERRORCOLUMN, 
    PWCROWID ROWID, 
    8 CATEGORY, 
    'CURRENCYCODE is blank' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity A
WHERE 
    CURRENCYCODE = '' OR CURRENCYCODE IS NULL;

-- DEFAULTEFFECTIVEDATE is blank
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchPurchaseAgreementHeaderV2Entity' TABLEID, 
    'DEFAULTEFFECTIVEDATE' ERRORCOLUMN, 
    PWCROWID ROWID, 
    8 CATEGORY, 
    'DEFAULTEFFECTIVEDATE is blank' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity A
WHERE 
    DEFAULTEFFECTIVEDATE = '' OR DEFAULTEFFECTIVEDATE IS NULL;

-- DEFAULTEXPIRATIONDATE is blank
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchPurchaseAgreementHeaderV2Entity' TABLEID, 
    'DEFAULTEXPIRATIONDATE' ERRORCOLUMN, 
    PWCROWID ROWID, 
    8 CATEGORY, 
    'DEFAULTEXPIRATIONDATE is blank' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity A
WHERE 
    DEFAULTEXPIRATIONDATE = '' OR DEFAULTEXPIRATIONDATE IS NULL;







-- Duplicate occurrence:
-- PURCHASEAGREEMENTID, DATAAREAID has duplicates
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchPurchaseAgreementHeaderV2Entity' TABLEID, 
    'PURCHASEAGREEMENTID' ERRORCOLUMN, 
    PWCROWID ROWID, 
    3 CATEGORY, 
    CASE 
        WHEN LEN(PURCHASEAGREEMENTID) > 60 THEN 
            'PURCHASEAGREEMENTID has duplicate values upon truncation in ' + DATAAREAID
        ELSE 
            'PURCHASEAGREEMENTID has duplicate values in ' + DATAAREAID
    END ERRORDESC, 
    PURCHASEAGREEMENTID ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity A
WHERE 
    CONCAT(LEFT(PURCHASEAGREEMENTID, 60), DATAAREAID) IN (
    SELECT CONCAT(LEFT(PURCHASEAGREEMENTID, 60), DATAAREAID) 
    FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity
    GROUP BY LEFT(PURCHASEAGREEMENTID, 60), DATAAREAID 
    HAVING COUNT(*) > 1
);









-- Invalid Enum values
    -- AGREEMENTSTATUS has invalid enum values
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_PurchPurchaseAgreementHeaderV2Entity' TABLEID, 
        'AGREEMENTSTATUS' ERRORCOLUMN, 
        PWCROWID ROWID, 
        2 CATEGORY, 
        'AGREEMENTSTATUS has invalid enum values' ERRORDESC, 
        AGREEMENTSTATUS ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity A
    WHERE AGREEMENTSTATUS IS NOT NULL AND AGREEMENTSTATUS NOT IN
          (SELECT MEMBERNAME FROM RETAILENUMVALUETABLE WHERE ENUMNAME LIKE 'AgreementState');

    -- DEFAULTCOMMITMENTTYPE has invalid enum values
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_PurchPurchaseAgreementHeaderV2Entity' TABLEID, 
        'DEFAULTCOMMITMENTTYPE' ERRORCOLUMN, 
        PWCROWID ROWID, 
        2 CATEGORY, 
        'DEFAULTCOMMITMENTTYPE has invalid enum values' ERRORDESC, 
        DEFAULTCOMMITMENTTYPE ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity A
    WHERE DEFAULTCOMMITMENTTYPE IS NOT NULL AND DEFAULTCOMMITMENTTYPE NOT IN
          (SELECT MEMBERNAME FROM RETAILENUMVALUETABLE WHERE ENUMNAME LIKE 'CommitmentType');










-- Invalid submaster reference
-- BUYINGLEGALENTITYID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_PurchPurchaseAgreementHeaderV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.LEGALENTITYID) = 0 THEN 'BUYINGLEGALENTITYID'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'BUYINGLEGALENTITYID,[PWC_T_OMLEGALENTITY]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.LEGALENTITYID) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.LEGALENTITYID) = 0 THEN 'BUYINGLEGALENTITYID is not present in LEGALENTITYID of PWC_T_OMLEGALENTITY'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_OMLEGALENTITY has error(s) in corresponding LEGALENTITYID'
        END ERRORDESC,
        A.BUYINGLEGALENTITYID ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity A
    LEFT JOIN PWC_T_OMLEGALENTITY B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL' OR UPPER(A.DATAAREAID) = 'GLOBAL') AND A.BUYINGLEGALENTITYID = B.LEGALENTITYID
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_OMLEGALENTITY' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.BUYINGLEGALENTITYID IS NOT NULL AND A.BUYINGLEGALENTITYID != ''
    GROUP BY A.PWCROWID, A.BUYINGLEGALENTITYID, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- AGREEMENTVENDORACCOUNTNUMBER validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_PurchPurchaseAgreementHeaderV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.VENDORACCOUNTNUMBER) = 0 THEN 'AGREEMENTVENDORACCOUNTNUMBER'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'AGREEMENTVENDORACCOUNTNUMBER,[PWC_T_VENDVENDORV2ENTITY]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.VENDORACCOUNTNUMBER) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.VENDORACCOUNTNUMBER) = 0 THEN 'AGREEMENTVENDORACCOUNTNUMBER is not present in VENDORACCOUNTNUMBER of PWC_T_VENDVENDORV2ENTITY'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_VENDVENDORV2ENTITY has error(s) in corresponding VENDORACCOUNTNUMBER'
        END ERRORDESC,
        A.AGREEMENTVENDORACCOUNTNUMBER ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity A
    LEFT JOIN PWC_T_VENDVENDORV2ENTITY B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL' OR UPPER(A.DATAAREAID) = 'GLOBAL') AND A.AGREEMENTVENDORACCOUNTNUMBER = B.VENDORACCOUNTNUMBER
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_VENDVENDORV2ENTITY' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.AGREEMENTVENDORACCOUNTNUMBER IS NOT NULL AND A.AGREEMENTVENDORACCOUNTNUMBER != ''
    GROUP BY A.PWCROWID, A.AGREEMENTVENDORACCOUNTNUMBER, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- PURCHASEAGREEMENTCLASSIFICATIONNAME validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_PurchPurchaseAgreementHeaderV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.CLASSIFICATIONNAME) = 0 THEN 'PURCHASEAGREEMENTCLASSIFICATIONNAME'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PURCHASEAGREEMENTCLASSIFICATIONNAME,[PWC_T_PurchAgreementClassificationEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.CLASSIFICATIONNAME) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.CLASSIFICATIONNAME) = 0 THEN 'PURCHASEAGREEMENTCLASSIFICATIONNAME is not present in CLASSIFICATIONNAME of PWC_T_PurchAgreementClassificationEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_PurchAgreementClassificationEntity has error(s) in corresponding CLASSIFICATIONNAME'
        END ERRORDESC,
        A.PURCHASEAGREEMENTCLASSIFICATIONNAME ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity A
    LEFT JOIN PWC_T_PurchAgreementClassificationEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL' OR UPPER(A.DATAAREAID) = 'GLOBAL') AND A.PURCHASEAGREEMENTCLASSIFICATIONNAME = B.CLASSIFICATIONNAME
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_PurchAgreementClassificationEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.PURCHASEAGREEMENTCLASSIFICATIONNAME IS NOT NULL AND A.PURCHASEAGREEMENTCLASSIFICATIONNAME != ''
    GROUP BY A.PWCROWID, A.PURCHASEAGREEMENTCLASSIFICATIONNAME, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- CURRENCYCODE validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_PurchPurchaseAgreementHeaderV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.CURRENCYCODE) = 0 THEN 'CURRENCYCODE'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'CURRENCYCODE,[PWC_T_CURRENCYENTITY]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.CURRENCYCODE) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.CURRENCYCODE) = 0 THEN 'CURRENCYCODE is not present in CURRENCYCODE of PWC_T_CURRENCYENTITY'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_CURRENCYENTITY has error(s) in corresponding CURRENCYCODE'
        END ERRORDESC,
        A.CURRENCYCODE ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity A
    LEFT JOIN PWC_T_CURRENCYENTITY B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL' OR UPPER(A.DATAAREAID) = 'GLOBAL') AND A.CURRENCYCODE = B.CURRENCYCODE
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_CURRENCYENTITY' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.CURRENCYCODE IS NOT NULL AND A.CURRENCYCODE != ''
    GROUP BY A.PWCROWID, A.CURRENCYCODE, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- VENDORPAYMENTMETHODNAME validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_PurchPurchaseAgreementHeaderV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.Name) = 0 THEN 'VENDORPAYMENTMETHODNAME'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'VENDORPAYMENTMETHODNAME,[PWC_T_VendorPaymentMethodEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.Name) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.Name) = 0 THEN 'VENDORPAYMENTMETHODNAME is not present in Name of PWC_T_VendorPaymentMethodEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_VendorPaymentMethodEntity has error(s) in corresponding Name'
        END ERRORDESC,
        A.VENDORPAYMENTMETHODNAME ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity A
    LEFT JOIN PWC_T_VendorPaymentMethodEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL' OR UPPER(A.DATAAREAID) = 'GLOBAL') AND A.VENDORPAYMENTMETHODNAME = B.Name
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_VendorPaymentMethodEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.VENDORPAYMENTMETHODNAME IS NOT NULL AND A.VENDORPAYMENTMETHODNAME != ''
    GROUP BY A.PWCROWID, A.VENDORPAYMENTMETHODNAME, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- DELIVERYMODECODE validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_PurchPurchaseAgreementHeaderV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.MODECODE) = 0 THEN 'DELIVERYMODECODE'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'DELIVERYMODECODE,[PWC_T_MODEOFDELIVERY]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.MODECODE) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.MODECODE) = 0 THEN 'DELIVERYMODECODE is not present in MODECODE of PWC_T_DlvDeliveryModeEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_DlvDeliveryModeEntity has error(s) in corresponding MODECODE'
        END ERRORDESC,
        A.DELIVERYMODECODE ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity A
    LEFT JOIN PWC_T_DlvDeliveryModeEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL' OR UPPER(A.DATAAREAID) = 'GLOBAL') AND A.DELIVERYMODECODE = B.MODECODE
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_DlvDeliveryModeEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.DELIVERYMODECODE IS NOT NULL AND A.DELIVERYMODECODE != ''
    GROUP BY A.PWCROWID, A.DELIVERYMODECODE, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- DELIVERYTERMSCODE validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_PurchPurchaseAgreementHeaderV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.TERMSCODE) = 0 THEN 'DELIVERYTERMSCODE'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'DELIVERYTERMSCODE,[PWC_T_DeliveryTermsEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.TERMSCODE) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.TERMSCODE) = 0 THEN 'DELIVERYTERMSCODE is not present in TERMSCODE of PWC_T_DeliveryTermsEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_DeliveryTermsEntity has error(s) in corresponding TERMSCODE'
        END ERRORDESC,
        A.DELIVERYTERMSCODE ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity A
    LEFT JOIN PWC_T_DeliveryTermsEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL' OR UPPER(A.DATAAREAID) = 'GLOBAL') AND A.DELIVERYTERMSCODE = B.TERMSCODE
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_DeliveryTermsEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.DELIVERYTERMSCODE IS NOT NULL AND A.DELIVERYTERMSCODE != ''
    GROUP BY A.PWCROWID, A.DELIVERYTERMSCODE, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- PAYMENTTERMSNAME validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_PurchPurchaseAgreementHeaderV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.Name) = 0 THEN 'PAYMENTTERMSNAME'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PAYMENTTERMSNAME,[PWC_T_PaymentTermEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.Name) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.Name) = 0 THEN 'PAYMENTTERMSNAME is not present in Name of PWC_T_PaymentTermEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_PaymentTermEntity has error(s) in corresponding Name'
        END ERRORDESC,
        A.PAYMENTTERMSNAME ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity A
    LEFT JOIN PWC_T_PaymentTermEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL' OR UPPER(A.DATAAREAID) = 'GLOBAL') AND A.PAYMENTTERMSNAME = B.Name
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_PaymentTermEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.PAYMENTTERMSNAME IS NOT NULL AND A.PAYMENTTERMSNAME != ''
    GROUP BY A.PWCROWID, A.PAYMENTTERMSNAME, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- AGREEMENTVENDORACCOUNTNUMBER and VENDORBANKACCOUNTID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_PurchPurchaseAgreementHeaderV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.VENDORACCOUNTNUMBER) = 0 THEN '(AGREEMENTVENDORACCOUNTNUMBER, VENDORBANKACCOUNTID)'
            WHEN COUNT(E.CATEGORY) <> 0 THEN '(AGREEMENTVENDORACCOUNTNUMBER, VENDORBANKACCOUNTID),[PWC_T_VENDVENDORV2ENTITY]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.VENDORACCOUNTNUMBER) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.VENDORACCOUNTNUMBER) = 0 THEN 'AGREEMENTVENDORACCOUNTNUMBER and VENDORBANKACCOUNTID is not present in VENDORACCOUNTNUMBER, BANKACCOUNTID of PWC_T_VENDVENDORV2ENTITY'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_VENDVENDORV2ENTITY has error(s) in corresponding VENDORACCOUNTNUMBER, BANKACCOUNTID'
        END ERRORDESC,
        CONCAT('(', A.AGREEMENTVENDORACCOUNTNUMBER, ',', A.VENDORBANKACCOUNTID, ')') ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity A
    LEFT JOIN PWC_T_VENDVENDORV2ENTITY B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL' OR UPPER(A.DATAAREAID) = 'GLOBAL') AND A.AGREEMENTVENDORACCOUNTNUMBER = B.VENDORACCOUNTNUMBER AND A.VENDORBANKACCOUNTID = B.BANKACCOUNTID
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_VENDVENDORV2ENTITY' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.AGREEMENTVENDORACCOUNTNUMBER IS NOT NULL AND A.AGREEMENTVENDORACCOUNTNUMBER != '' AND
        A.VENDORBANKACCOUNTID IS NOT NULL AND A.VENDORBANKACCOUNTID != ''
    GROUP BY A.PWCROWID, A.AGREEMENTVENDORACCOUNTNUMBER, A.VENDORBANKACCOUNTID, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- AGREEMENTVENDORACCOUNTNUMBER and CONTACTPERSONID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_PurchPurchaseAgreementHeaderV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.VENDORACCOUNTNUMBER) = 0 THEN '(AGREEMENTVENDORACCOUNTNUMBER, CONTACTPERSONID)'
            WHEN COUNT(E.CATEGORY) <> 0 THEN '(AGREEMENTVENDORACCOUNTNUMBER, CONTACTPERSONID),[PWC_T_VENDVENDORV2ENTITY]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.VENDORACCOUNTNUMBER) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.VENDORACCOUNTNUMBER) = 0 THEN 'AGREEMENTVENDORACCOUNTNUMBER and CONTACTPERSONID is not present in VENDORACCOUNTNUMBER, PRIMARYCONTACTPERSONID of PWC_T_VENDVENDORV2ENTITY'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_VENDVENDORV2ENTITY has error(s) in corresponding VENDORACCOUNTNUMBER, PRIMARYCONTACTPERSONID'
        END ERRORDESC,
        CONCAT('(', A.AGREEMENTVENDORACCOUNTNUMBER, ',', A.CONTACTPERSONID, ')') ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity A
    LEFT JOIN PWC_T_VENDVENDORV2ENTITY B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL' OR UPPER(A.DATAAREAID) = 'GLOBAL') AND A.AGREEMENTVENDORACCOUNTNUMBER = B.VENDORACCOUNTNUMBER AND A.CONTACTPERSONID = B.PRIMARYCONTACTPERSONID
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_VENDVENDORV2ENTITY' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.AGREEMENTVENDORACCOUNTNUMBER IS NOT NULL AND A.AGREEMENTVENDORACCOUNTNUMBER != '' AND
        A.CONTACTPERSONID IS NOT NULL AND A.CONTACTPERSONID != ''
    GROUP BY A.PWCROWID, A.AGREEMENTVENDORACCOUNTNUMBER, A.CONTACTPERSONID, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- PURCHASERESPONSIBLE validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_PurchPurchaseAgreementHeaderV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.PERSONNELNUMBER) = 0 THEN 'PURCHASERESPONSIBLE'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PURCHASERESPONSIBLE,[PWC_T_HcmEmployeeEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.PERSONNELNUMBER) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.PERSONNELNUMBER) = 0 THEN 'PURCHASERESPONSIBLE is not present in PERSONNELNUMBER of PWC_T_HcmEmployeeEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_HcmEmployeeEntity has error(s) in corresponding PERSONNELNUMBER'
        END ERRORDESC,
        A.PURCHASERESPONSIBLE ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity A
    LEFT JOIN PWC_T_HcmEmployeeEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL' OR UPPER(A.DATAAREAID) = 'GLOBAL') AND A.PURCHASERESPONSIBLE = B.PERSONNELNUMBER
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_HcmEmployeeEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.PURCHASERESPONSIBLE IS NOT NULL AND A.PURCHASERESPONSIBLE != ''
    GROUP BY A.PWCROWID, A.PURCHASERESPONSIBLE, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;













-- String length check
-- PURCHASEAGREEMENTID exceeds max length 20
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchPurchaseAgreementHeaderV2Entity' TABLEID, 
    'PURCHASEAGREEMENTID' ERRORCOLUMN, 
    PWCROWID ROWID, 
    7 CATEGORY, 
    'PURCHASEAGREEMENTID exceeds max length 20' ERRORDESC, 
    PURCHASEAGREEMENTID ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity A
WHERE LEN(PURCHASEAGREEMENTID) > 20;

-- PURCHASEAGREEMENTCLASSIFICATIONNAME exceeds max length 60
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchPurchaseAgreementHeaderV2Entity' TABLEID, 
    'PURCHASEAGREEMENTCLASSIFICATIONNAME' ERRORCOLUMN, 
    PWCROWID ROWID, 
    7 CATEGORY, 
    'PURCHASEAGREEMENTCLASSIFICATIONNAME exceeds max length 60' ERRORDESC, 
    PURCHASEAGREEMENTCLASSIFICATIONNAME ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchPurchaseAgreementHeaderV2Entity A
WHERE LEN(PURCHASEAGREEMENTCLASSIFICATIONNAME) > 60;

EXEC PWC_SP_CALCULATESUCCESSFULCOUNT @TableName = 'PWC_T_PurchPurchaseAgreementHeaderV2Entity'
END
