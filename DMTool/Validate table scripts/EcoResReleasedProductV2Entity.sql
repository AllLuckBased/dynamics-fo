CREATE OR ALTER PROCEDURE PWC_SP_Validate_EcoResReleasedProductV2Entity
AS
BEGIN

-- Mandatory field missing:
-- ITEMNUMBER is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
'ITEMNUMBER' ERRORCOLUMN, 
PWCROWID ROWID, 
1 CATEGORY, 
'ITEMNUMBER is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResReleasedProductV2Entity A
WHERE 
ITEMNUMBER = '' OR ITEMNUMBER IS NULL;

-- PRODUCTNUMBER is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
'PRODUCTNUMBER' ERRORCOLUMN, 
PWCROWID ROWID, 
1 CATEGORY, 
'PRODUCTNUMBER is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResReleasedProductV2Entity A
WHERE 
PRODUCTNUMBER = '' OR PRODUCTNUMBER IS NULL;

-- Business required fields missing:
-- SALESUNITSYMBOL is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
'SALESUNITSYMBOL' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'SALESUNITSYMBOL is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResReleasedProductV2Entity A
WHERE 
SALESUNITSYMBOL = '' OR SALESUNITSYMBOL IS NULL;

-- PURCHASEPRICE is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
'PURCHASEPRICE' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'PURCHASEPRICE is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResReleasedProductV2Entity A
WHERE 
PURCHASEPRICE = '' OR PURCHASEPRICE IS NULL;

-- PURCHASEUNITSYMBOL is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
'PURCHASEUNITSYMBOL' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'PURCHASEUNITSYMBOL is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResReleasedProductV2Entity A
WHERE 
PURCHASEUNITSYMBOL = '' OR PURCHASEUNITSYMBOL IS NULL;

-- ITEMMODELGROUPID is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
'ITEMMODELGROUPID' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'ITEMMODELGROUPID is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResReleasedProductV2Entity A
WHERE 
ITEMMODELGROUPID = '' OR ITEMMODELGROUPID IS NULL;

-- PRODUCTGROUPID is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
'PRODUCTGROUPID' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'PRODUCTGROUPID is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResReleasedProductV2Entity A
WHERE 
PRODUCTGROUPID = '' OR PRODUCTGROUPID IS NULL;

-- PRODUCTLIFECYCLESTATEID is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
'PRODUCTLIFECYCLESTATEID' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'PRODUCTLIFECYCLESTATEID is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResReleasedProductV2Entity A
WHERE 
PRODUCTLIFECYCLESTATEID = '' OR PRODUCTLIFECYCLESTATEID IS NULL;

-- STORAGEDIMENSIONGROUPNAME is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
'STORAGEDIMENSIONGROUPNAME' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'STORAGEDIMENSIONGROUPNAME is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResReleasedProductV2Entity A
WHERE 
STORAGEDIMENSIONGROUPNAME = '' OR STORAGEDIMENSIONGROUPNAME IS NULL;

-- TRACKINGDIMENSIONGROUPNAME is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
'TRACKINGDIMENSIONGROUPNAME' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'TRACKINGDIMENSIONGROUPNAME is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResReleasedProductV2Entity A
WHERE 
TRACKINGDIMENSIONGROUPNAME = '' OR TRACKINGDIMENSIONGROUPNAME IS NULL;

-- INVENTORYUNITSYMBOL is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
'INVENTORYUNITSYMBOL' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'INVENTORYUNITSYMBOL is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResReleasedProductV2Entity A
WHERE 
INVENTORYUNITSYMBOL = '' OR INVENTORYUNITSYMBOL IS NULL;

-- PRODUCTTYPE is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
'PRODUCTTYPE' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'PRODUCTTYPE is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResReleasedProductV2Entity A
WHERE 
PRODUCTTYPE = '' OR PRODUCTTYPE IS NULL;

-- SALESPRICE is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
'SALESPRICE' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'SALESPRICE is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResReleasedProductV2Entity A
WHERE 
SALESPRICE = '' OR SALESPRICE IS NULL;

-- SALESSALESTAXITEMGROUPCODE is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
'SALESSALESTAXITEMGROUPCODE' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'SALESSALESTAXITEMGROUPCODE is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResReleasedProductV2Entity A
WHERE 
SALESSALESTAXITEMGROUPCODE = '' OR SALESSALESTAXITEMGROUPCODE IS NULL;






-- Duplicate occurrence:
-- ITEMNUMBER has duplicate values
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
    'ITEMNUMBER' ERRORCOLUMN, 
    PWCROWID ROWID, 
    3 CATEGORY, 
    CASE 
        WHEN LEN(ITEMNUMBER) > 10 THEN 
            'ITEMNUMBER has duplicate values upon truncation'
        ELSE 
            'ITEMNUMBER has duplicate values'
    END ERRORDESC, 
    ITEMNUMBER ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResReleasedProductV2Entity A
WHERE 
    CONCAT(LEFT(ITEMNUMBER, 10), DATAAREAID) IN (
    SELECT CONCAT(LEFT(ITEMNUMBER, 10), DATAAREAID) 
    FROM PWC_T_EcoResReleasedProductV2Entity
    GROUP BY LEFT(ITEMNUMBER, 10), DATAAREAID 
    HAVING COUNT(*) > 1
);







-- Invalid Enum Values
-- APPROVEDVENDORCHECKMETHOD has invalid enum values
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
'APPROVEDVENDORCHECKMETHOD' ERRORCOLUMN, 
PWCROWID ROWID, 
2 CATEGORY, 
'APPROVEDVENDORCHECKMETHOD has invalid enum values' ERRORDESC, 
APPROVEDVENDORCHECKMETHOD ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResReleasedProductV2Entity A
WHERE 
APPROVEDVENDORCHECKMETHOD IS NOT NULL 
AND APPROVEDVENDORCHECKMETHOD NOT IN (
SELECT MEMBERNAME 
FROM RETAILENUMVALUETABLE 
WHERE ENUMNAME LIKE 'PdsVendorCheckItem'
);

-- DEFAULTORDERTYPE has invalid enum values
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
'DEFAULTORDERTYPE' ERRORCOLUMN, 
PWCROWID ROWID, 
2 CATEGORY, 
'DEFAULTORDERTYPE has invalid enum values' ERRORDESC, 
DEFAULTORDERTYPE ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResReleasedProductV2Entity A
WHERE 
DEFAULTORDERTYPE IS NOT NULL 
AND DEFAULTORDERTYPE NOT IN (
SELECT MEMBERNAME 
FROM RETAILENUMVALUETABLE 
WHERE ENUMNAME LIKE 'ReqPOType'
);

-- PRODUCTIONTYPE has invalid enum values
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
'PRODUCTIONTYPE' ERRORCOLUMN, 
PWCROWID ROWID, 
2 CATEGORY, 
'PRODUCTIONTYPE has invalid enum values' ERRORDESC, 
PRODUCTIONTYPE ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResReleasedProductV2Entity A
WHERE 
PRODUCTIONTYPE IS NOT NULL 
AND PRODUCTIONTYPE NOT IN (
SELECT MEMBERNAME 
FROM RETAILENUMVALUETABLE 
WHERE ENUMNAME LIKE 'PmfProductType'
);

-- PRODUCTTYPE has invalid enum values
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
'PRODUCTTYPE' ERRORCOLUMN, 
PWCROWID ROWID, 
2 CATEGORY, 
'PRODUCTTYPE has invalid enum values' ERRORDESC, 
PRODUCTTYPE ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResReleasedProductV2Entity A
WHERE 
PRODUCTTYPE IS NOT NULL 
AND PRODUCTTYPE NOT IN (
SELECT MEMBERNAME 
FROM RETAILENUMVALUETABLE 
WHERE ENUMNAME LIKE 'EcoResProductType'
);

-- PRODUCTSUBTYPE has invalid enum values
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
'PRODUCTSUBTYPE' ERRORCOLUMN, 
PWCROWID ROWID, 
2 CATEGORY, 
'PRODUCTSUBTYPE has invalid enum values' ERRORDESC, 
PRODUCTSUBTYPE ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResReleasedProductV2Entity A
WHERE 
PRODUCTSUBTYPE IS NOT NULL 
AND PRODUCTSUBTYPE NOT IN (
SELECT MEMBERNAME 
FROM RETAILENUMVALUETABLE 
WHERE ENUMNAME LIKE 'EcoResProductSubtype'
);





-- Invalid submaster reference
-- BOMUNITSYMBOL validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.UnitSymbol) = 0 THEN 'BOMUNITSYMBOL'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'BOMUNITSYMBOL,[PWC_T_UnitOfMeasureEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.UnitSymbol) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.UnitSymbol) = 0 THEN 'BOMUNITSYMBOL is not present in UnitSymbol of PWC_T_UnitOfMeasureEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_UnitOfMeasureEntity has error(s) in corresponding UnitSymbol'
        END ERRORDESC,
        A.BOMUNITSYMBOL ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_EcoResReleasedProductV2Entity A
    LEFT JOIN PWC_T_UnitOfMeasureEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') 
        AND A.BOMUNITSYMBOL = B.UnitSymbol
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_UnitOfMeasureEntity' 
        AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
    WHERE A.BOMUNITSYMBOL IS NOT NULL AND A.BOMUNITSYMBOL != ''
    GROUP BY A.PWCROWID, A.BOMUNITSYMBOL, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- INVENTORYUNITSYMBOL validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.UnitSymbol) = 0 THEN 'INVENTORYUNITSYMBOL'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'INVENTORYUNITSYMBOL,[PWC_T_UnitOfMeasureEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.UnitSymbol) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.UnitSymbol) = 0 THEN 'INVENTORYUNITSYMBOL is not present in UnitSymbol of PWC_T_UnitOfMeasureEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_UnitOfMeasureEntity has error(s) in corresponding UnitSymbol'
        END ERRORDESC,
        A.INVENTORYUNITSYMBOL ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_EcoResReleasedProductV2Entity A
    LEFT JOIN PWC_T_UnitOfMeasureEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') 
        AND A.INVENTORYUNITSYMBOL = B.UnitSymbol
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_UnitOfMeasureEntity' 
        AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
    WHERE A.INVENTORYUNITSYMBOL IS NOT NULL AND A.INVENTORYUNITSYMBOL != ''
    GROUP BY A.PWCROWID, A.INVENTORYUNITSYMBOL, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- ITEMMODELGROUPID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.POLICYID) = 0 THEN 'ITEMMODELGROUPID'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'ITEMMODELGROUPID,[PWC_T_InventCostFlowAssumptionPolicyEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.POLICYID) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.POLICYID) = 0 THEN 'ITEMMODELGROUPID is not present in POLICYID of PWC_T_InventCostFlowAssumptionPolicyEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_InventCostFlowAssumptionPolicyEntity has error(s) in corresponding POLICYID'
        END ERRORDESC,
        A.ITEMMODELGROUPID ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_EcoResReleasedProductV2Entity A
    LEFT JOIN PWC_T_InventCostFlowAssumptionPolicyEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') 
        AND A.ITEMMODELGROUPID = B.POLICYID
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_InventCostFlowAssumptionPolicyEntity' 
        AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
    WHERE A.ITEMMODELGROUPID IS NOT NULL AND A.ITEMMODELGROUPID != ''
    GROUP BY A.PWCROWID, A.ITEMMODELGROUPID, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- PRODUCTGROUPID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.GROUPID) = 0 THEN 'PRODUCTGROUPID'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PRODUCTGROUPID,[PWC_T_InventProductGroupEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.GROUPID) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.GROUPID) = 0 THEN 'PRODUCTGROUPID is not present in GROUPID of PWC_T_InventProductGroupEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_InventProductGroupEntity has error(s) in corresponding GROUPID'
        END ERRORDESC,
        A.PRODUCTGROUPID ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_EcoResReleasedProductV2Entity A
    LEFT JOIN PWC_T_InventProductGroupEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') 
        AND A.PRODUCTGROUPID = B.GROUPID
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_InventProductGroupEntity' 
        AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
    WHERE A.PRODUCTGROUPID IS NOT NULL AND A.PRODUCTGROUPID != ''
    GROUP BY A.PWCROWID, A.PRODUCTGROUPID, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;


-- PRODUCTLIFECYCLESTATEID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.LIFECYCLESTATEID) = 0 THEN 'PRODUCTLIFECYCLESTATEID'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PRODUCTLIFECYCLESTATEID,[PWC_T_EcoResProductLifecycleStateEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.LIFECYCLESTATEID) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.LIFECYCLESTATEID) = 0 THEN 'PRODUCTLIFECYCLESTATEID is not present in LIFECYCLESTATEID of PWC_T_EcoResProductLifecycleStateEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_EcoResProductLifecycleStateEntity has error(s) in corresponding LIFECYCLESTATEID'
        END ERRORDESC,
        A.PRODUCTLIFECYCLESTATEID ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_EcoResReleasedProductV2Entity A
    LEFT JOIN PWC_T_EcoResProductLifecycleStateEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') 
        AND A.PRODUCTLIFECYCLESTATEID = B.LIFECYCLESTATEID
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_EcoResProductLifecycleStateEntity' 
        AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
    WHERE A.PRODUCTLIFECYCLESTATEID IS NOT NULL AND A.PRODUCTLIFECYCLESTATEID != ''
    GROUP BY A.PWCROWID, A.PRODUCTLIFECYCLESTATEID, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- PRODUCTNUMBER validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.PRODUCTNUMBER) = 0 THEN 'PRODUCTNUMBER'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PRODUCTNUMBER,[PWC_T_EcoResProductV2Entity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.PRODUCTNUMBER) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.PRODUCTNUMBER) = 0 THEN 'PRODUCTNUMBER is not present in PRODUCTNUMBER of PWC_T_EcoResProductV2Entity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_EcoResProductV2Entity has error(s) in corresponding PRODUCTNUMBER'
        END ERRORDESC,
        A.PRODUCTNUMBER ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_EcoResReleasedProductV2Entity A
    LEFT JOIN PWC_T_EcoResProductV2Entity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') 
        AND A.PRODUCTNUMBER = B.PRODUCTNUMBER
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_EcoResProductV2Entity' 
        AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
    WHERE A.PRODUCTNUMBER IS NOT NULL AND A.PRODUCTNUMBER != ''
    GROUP BY A.PWCROWID, A.PRODUCTNUMBER, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- PURCHASEUNITSYMBOL validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.UnitSymbol) = 0 THEN 'PURCHASEUNITSYMBOL'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PURCHASEUNITSYMBOL,[PWC_T_UnitOfMeasureEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.UnitSymbol) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.UnitSymbol) = 0 THEN 'PURCHASEUNITSYMBOL is not present in UnitSymbol of PWC_T_UnitOfMeasureEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_UnitOfMeasureEntity has error(s) in corresponding UnitSymbol'
        END ERRORDESC,
        A.PURCHASEUNITSYMBOL ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_EcoResReleasedProductV2Entity A
    LEFT JOIN PWC_T_UnitOfMeasureEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') 
        AND A.PURCHASEUNITSYMBOL = B.UnitSymbol
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_UnitOfMeasureEntity' 
        AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
    WHERE A.PURCHASEUNITSYMBOL IS NOT NULL AND A.PURCHASEUNITSYMBOL != ''
    GROUP BY A.PWCROWID, A.PURCHASEUNITSYMBOL, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- SALESSALESTAXITEMGROUPCODE validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.TAXITEMGROUP) = 0 THEN 'SALESSALESTAXITEMGROUPCODE'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'SALESSALESTAXITEMGROUPCODE,[PWC_T_TaxItemGroupHeadingEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.TAXITEMGROUP) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.TAXITEMGROUP) = 0 THEN 'SALESSALESTAXITEMGROUPCODE is not present in TAXITEMGROUP of PWC_T_TaxItemGroupHeadingEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_TaxItemGroupHeadingEntity has error(s) in corresponding TAXITEMGROUP'
        END ERRORDESC,
        A.SALESSALESTAXITEMGROUPCODE ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_EcoResReleasedProductV2Entity A
    LEFT JOIN PWC_T_TaxItemGroupHeadingEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') 
        AND A.SALESSALESTAXITEMGROUPCODE = B.TAXITEMGROUP
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_TaxItemGroupHeadingEntity' 
        AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
    WHERE A.SALESSALESTAXITEMGROUPCODE IS NOT NULL AND A.SALESSALESTAXITEMGROUPCODE != ''
    GROUP BY A.PWCROWID, A.SALESSALESTAXITEMGROUPCODE, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;


-- SALESUNITSYMBOL validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.UnitSymbol) = 0 THEN 'SALESUNITSYMBOL'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'SALESUNITSYMBOL,[PWC_T_UnitOfMeasureEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.UnitSymbol) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.UnitSymbol) = 0 THEN 'SALESUNITSYMBOL is not present in UnitSymbol of PWC_T_UnitOfMeasureEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_UnitOfMeasureEntity has error(s) in corresponding UnitSymbol'
        END ERRORDESC,
        A.SALESUNITSYMBOL ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_EcoResReleasedProductV2Entity A
    LEFT JOIN PWC_T_UnitOfMeasureEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') 
        AND A.SALESUNITSYMBOL = B.UnitSymbol
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_UnitOfMeasureEntity' 
        AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
    WHERE A.SALESUNITSYMBOL IS NOT NULL AND A.SALESUNITSYMBOL != ''
    GROUP BY A.PWCROWID, A.SALESUNITSYMBOL, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- STORAGEDIMENSIONGROUPNAME validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.GROUPNAME) = 0 THEN 'STORAGEDIMENSIONGROUPNAME'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'STORAGEDIMENSIONGROUPNAME,[PWC_T_EcoResStorageDimensionGroupEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.GROUPNAME) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.GROUPNAME) = 0 THEN 'STORAGEDIMENSIONGROUPNAME is not present in GROUPNAME of PWC_T_EcoResStorageDimensionGroupEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_EcoResStorageDimensionGroupEntity has error(s) in corresponding GROUPNAME'
        END ERRORDESC,
        A.STORAGEDIMENSIONGROUPNAME ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_EcoResReleasedProductV2Entity A
    LEFT JOIN PWC_T_EcoResStorageDimensionGroupEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') 
        AND A.STORAGEDIMENSIONGROUPNAME = B.GROUPNAME
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_EcoResStorageDimensionGroupEntity' 
        AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
    WHERE A.STORAGEDIMENSIONGROUPNAME IS NOT NULL AND A.STORAGEDIMENSIONGROUPNAME != ''
    GROUP BY A.PWCROWID, A.STORAGEDIMENSIONGROUPNAME, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- TRACKINGDIMENSIONGROUPNAME validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.GROUPNAME) = 0 THEN 'TRACKINGDIMENSIONGROUPNAME'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'TRACKINGDIMENSIONGROUPNAME,[PWC_T_EcoResTrackingDimensionGroupEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.GROUPNAME) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.GROUPNAME) = 0 THEN 'TRACKINGDIMENSIONGROUPNAME is not present in GROUPNAME of PWC_T_EcoResTrackingDimensionGroupEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_EcoResTrackingDimensionGroupEntity has error(s) in corresponding GROUPNAME'
        END ERRORDESC,
        A.TRACKINGDIMENSIONGROUPNAME ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_EcoResReleasedProductV2Entity A
    LEFT JOIN PWC_T_EcoResTrackingDimensionGroupEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') 
        AND A.TRACKINGDIMENSIONGROUPNAME = B.GROUPNAME
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_EcoResTrackingDimensionGroupEntity' 
        AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
    WHERE A.TRACKINGDIMENSIONGROUPNAME IS NOT NULL AND A.TRACKINGDIMENSIONGROUPNAME != ''
    GROUP BY A.PWCROWID, A.TRACKINGDIMENSIONGROUPNAME, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;










-- String length exceeded maximum
-- ITEMNUMBER exceeds max length 20
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
'ITEMNUMBER' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'ITEMNUMBER exceeds max length 20' ERRORDESC, 
ITEMNUMBER ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResReleasedProductV2Entity A
WHERE LEN(ITEMNUMBER) > 20;

-- BATCHNUMBERGROUPCODE exceeds max length 10
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
'BATCHNUMBERGROUPCODE' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'BATCHNUMBERGROUPCODE exceeds max length 10' ERRORDESC, 
BATCHNUMBERGROUPCODE ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResReleasedProductV2Entity A
WHERE LEN(BATCHNUMBERGROUPCODE) > 10;

-- SEARCHNAME exceeds max length 20
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResReleasedProductV2Entity' TABLEID, 
'SEARCHNAME' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'SEARCHNAME exceeds max length 20' ERRORDESC, 
SEARCHNAME ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResReleasedProductV2Entity A
WHERE LEN(SEARCHNAME) > 20;

EXEC PWC_SP_CALCULATESUCCESSFULCOUNT @TableName = 'PWC_T_EcoResReleasedProductV2Entity'
END
