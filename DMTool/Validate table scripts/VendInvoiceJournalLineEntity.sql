CREATE OR ALTER PROCEDURE PWC_SP_Validate_VendInvoiceJournalLineEntity
AS
BEGIN

-- Invalid data format
-- DUEDATE HAS WRONG DATE FORMAT
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'DUEDATE' ERRORCOLUMN, 
PWCROWID ROWID, 
2 CATEGORY, 
'DUEDATE has wrong date format' ERRORDESC, 
DUEDATE ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE 
DUEDATE IS NOT NULL AND ISDATE(DUEDATE) = 0;

-- DATE HAS WRONG DATE FORMAT
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'DATE' ERRORCOLUMN, 
PWCROWID ROWID, 
2 CATEGORY, 
'DATE has wrong date format' ERRORDESC, 
DATE ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE 
DATE IS NOT NULL AND ISDATE(DATE) = 0;

-- INVOICEDATE HAS WRONG DATE FORMAT
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'INVOICEDATE' ERRORCOLUMN, 
PWCROWID ROWID, 
2 CATEGORY, 
'INVOICEDATE has wrong date format' ERRORDESC, 
INVOICEDATE ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE 
INVOICEDATE IS NOT NULL AND ISDATE(INVOICEDATE) = 0;




-- Other System checks
-- Both CREDIT and DEBIT cannot be blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'(CREDIT,DEBIT)' ERRORCOLUMN, 
PWCROWID ROWID, 
6 CATEGORY, 
'Both CREDIT and DEBIT cannot be blank' ERRORDESC, 
CONCAT('(',CREDIT,', ',DEBIT,')') ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE 
(CREDIT = '' OR CREDIT IS NULL) AND (DEBIT = '' OR DEBIT IS NULL);

-- Both CREDIT and DEBIT cannot be filled
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'(CREDIT,DEBIT)' ERRORCOLUMN, 
PWCROWID ROWID, 
6 CATEGORY, 
'Both CREDIT and DEBIT cannot be filled' ERRORDESC, 
CONCAT('(',CREDIT,', ',DEBIT,')') ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE 
CREDIT IS NOT NULL AND DEBIT IS NOT NULL;





-- Mandatory field missing
-- JOURNALBATCHNUMBER is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'JOURNALBATCHNUMBER' ERRORCOLUMN, 
PWCROWID ROWID, 
1 CATEGORY, 
'JOURNALBATCHNUMBER is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE 
JOURNALBATCHNUMBER = '' OR JOURNALBATCHNUMBER IS NULL;

-- CURRENCY is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'CURRENCY' ERRORCOLUMN, 
PWCROWID ROWID, 
1 CATEGORY, 
'CURRENCY is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE 
CURRENCY = '' OR CURRENCY IS NULL;





-- Business required fields missing
-- ACCOUNTDISPLAYVALUE is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'ACCOUNTDISPLAYVALUE' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'ACCOUNTDISPLAYVALUE is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE 
ACCOUNTDISPLAYVALUE = '' OR ACCOUNTDISPLAYVALUE IS NULL;

INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'OFFSETACCOUNTDISPLAYVALUE' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'OFFSETACCOUNTDISPLAYVALUE is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE 
OFFSETACCOUNTDISPLAYVALUE = '' OR OFFSETACCOUNTDISPLAYVALUE IS NULL;

INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'DUEDATE' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'DUEDATE is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE 
DUEDATE = '' OR DUEDATE IS NULL;

INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'INVOICE' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'INVOICE is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE 
INVOICE = '' OR INVOICE IS NULL;

INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'LINENUMBER' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'LINENUMBER is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE 
LINENUMBER = '' OR LINENUMBER IS NULL;

INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'SALESTAXGROUP' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'SALESTAXGROUP is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE 
SALESTAXGROUP = '' OR SALESTAXGROUP IS NULL;

INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'VOUCHER' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'VOUCHER is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE 
VOUCHER = '' OR VOUCHER IS NULL;

INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'METHODOFPAYMENT' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'METHODOFPAYMENT is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE 
METHODOFPAYMENT = '' OR METHODOFPAYMENT IS NULL;

INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'CUSTVENDBANKACCOUNTID' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'CUSTVENDBANKACCOUNTID is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE 
CUSTVENDBANKACCOUNTID = '' OR CUSTVENDBANKACCOUNTID IS NULL;

INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'TERMSOFPAYMENT' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'TERMSOFPAYMENT is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE 
TERMSOFPAYMENT = '' OR TERMSOFPAYMENT IS NULL;

INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'DATE' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'DATE is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE 
DATE = '' OR DATE IS NULL;

INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'DESCRIPTION' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'DESCRIPTION is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE 
DESCRIPTION = '' OR DESCRIPTION IS NULL;






-- Duplicate occurrence:
-- LINENUMBER, JOURNALBATCHNUMBER, DATAAREAID has duplicates
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
    '(LINENUMBER, JOURNALBATCHNUMBER, DATAAREAID)' ERRORCOLUMN, 
    PWCROWID ROWID, 
    3 CATEGORY, 
    CASE 
        WHEN LEN(JOURNALBATCHNUMBER) > 20 THEN 
            'LINENUMBER, JOURNALBATCHNUMBER has duplicate values upon truncation in ' + DATAAREAID
        ELSE 
            'LINENUMBER, JOURNALBATCHNUMBER has duplicate values in ' + DATAAREAID
    END ERRORDESC, 
    CONCAT('(', LINENUMBER, ', ', JOURNALBATCHNUMBER, ')') ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE 
    CONCAT(LINENUMBER, LEFT(JOURNALBATCHNUMBER, 20), DATAAREAID) IN (
    SELECT CONCAT(LINENUMBER, LEFT(JOURNALBATCHNUMBER, 20), DATAAREAID) 
    FROM PWC_T_VendInvoiceJournalLineEntity
    GROUP BY LINENUMBER, LEFT(JOURNALBATCHNUMBER, 20), DATAAREAID 
    HAVING COUNT(*) > 1
);






-- COMPANY validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
        CASE 
            WHEN COUNT(B.LEGALENTITYID) = 0 THEN 'COMPANY'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'COMPANY,[PWC_T_LEGALENTITY]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.LEGALENTITYID) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.LEGALENTITYID) = 0 THEN 'COMPANY is not present in LEGALENTITYID of PWC_T_LEGALENTITY'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_LEGALENTITY has error(s) in corresponding LEGALENTITYID'
        END ERRORDESC,
        A.COMPANY ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendInvoiceJournalLineEntity A
    LEFT JOIN PWC_T_LEGALENTITY B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(A.DATAAREAID) = 'GLOBAL' OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.COMPANY = B.LEGALENTITYID
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_LEGALENTITY' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.COMPANY IS NOT NULL AND A.COMPANY != ''
    GROUP BY A.PWCROWID, A.COMPANY, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- CURRENCYCODE validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
        CASE 
            WHEN COUNT(B.CURRENCYCODE) = 0 THEN 'CURRENCYCODE'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'CURRENCYCODE,[PWC_T_CurrencyEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.CURRENCYCODE) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.CURRENCYCODE) = 0 THEN 'CURRENCYCODE is not present in CURRENCYCODE of PWC_T_CurrencyEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_CurrencyEntity has error(s) in corresponding CURRENCYCODE'
        END ERRORDESC,
        A.CURRENCYCODE ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendInvoiceJournalLineEntity A
    LEFT JOIN PWC_T_CurrencyEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(A.DATAAREAID) = 'GLOBAL' OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.CURRENCYCODE = B.CURRENCYCODE
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_CurrencyEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.CURRENCYCODE IS NOT NULL AND A.CURRENCYCODE != ''
    GROUP BY A.PWCROWID, A.CURRENCYCODE, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- JOURNALBATCHNUMBER validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
        CASE 
            WHEN COUNT(B.JOURNALBATCHNUMBER) = 0 THEN 'JOURNALBATCHNUMBER'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'JOURNALBATCHNUMBER,[PWC_T_VendInvoiceJournalHeaderEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.JOURNALBATCHNUMBER) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.JOURNALBATCHNUMBER) = 0 THEN 'JOURNALBATCHNUMBER is not present in JOURNALBATCHNUMBER of PWC_T_VendInvoiceJournalHeaderEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_VendInvoiceJournalHeaderEntity has error(s) in corresponding JOURNALBATCHNUMBER'
        END ERRORDESC,
        A.JOURNALBATCHNUMBER ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendInvoiceJournalLineEntity A
    LEFT JOIN PWC_T_VendInvoiceJournalHeaderEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(A.DATAAREAID) = 'GLOBAL' OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.JOURNALBATCHNUMBER = B.JOURNALBATCHNUMBER
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_VendInvoiceJournalHeaderEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.JOURNALBATCHNUMBER IS NOT NULL AND A.JOURNALBATCHNUMBER != ''
    GROUP BY A.PWCROWID, A.JOURNALBATCHNUMBER, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- OFFSETCOMPANY validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
        CASE 
            WHEN COUNT(B.LEGALENTITYID) = 0 THEN 'OFFSETCOMPANY'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'OFFSETCOMPANY,[PWC_T_OMLegalEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.LEGALENTITYID) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.LEGALENTITYID) = 0 THEN 'OFFSETCOMPANY is not present in LEGALENTITYID of PWC_T_OMLegalEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_OMLegalEntity has error(s) in corresponding LEGALENTITYID'
        END ERRORDESC,
        A.OFFSETCOMPANY ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendInvoiceJournalLineEntity A
    LEFT JOIN PWC_T_OMLegalEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(A.DATAAREAID) = 'GLOBAL' OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.OFFSETCOMPANY = B.LEGALENTITYID
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_OMLegalEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.OFFSETCOMPANY IS NOT NULL AND A.OFFSETCOMPANY != ''
    GROUP BY A.PWCROWID, A.OFFSETCOMPANY, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- TERMSOFPAYMENT validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
        CASE 
            WHEN COUNT(B.NAME) = 0 THEN 'TERMSOFPAYMENT'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'TERMSOFPAYMENT,[PWC_T_PaymentTermEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.NAME) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.NAME) = 0 THEN 'TERMSOFPAYMENT is not present in NAME of PWC_T_PaymentTermEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_PaymentTermEntity has error(s) in corresponding NAME'
        END ERRORDESC,
        A.TERMSOFPAYMENT ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendInvoiceJournalLineEntity A
    LEFT JOIN PWC_T_PaymentTermEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(A.DATAAREAID) = 'GLOBAL' OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.TERMSOFPAYMENT = B.NAME
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_PaymentTermEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.TERMSOFPAYMENT IS NOT NULL AND A.TERMSOFPAYMENT != ''
    GROUP BY A.PWCROWID, A.TERMSOFPAYMENT, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- SALESTAXGROUP validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
        CASE 
            WHEN COUNT(B.TAXGROUPCODE) = 0 THEN 'SALESTAXGROUP'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'SALESTAXGROUP,[PWC_T_TaxGroupEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.TAXGROUPCODE) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.TAXGROUPCODE) = 0 THEN 'SALESTAXGROUP is not present in TAXGROUPCODE of PWC_T_TaxGroupEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_TaxGroupEntity has error(s) in corresponding TAXGROUPCODE'
        END ERRORDESC,
        A.SALESTAXGROUP ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendInvoiceJournalLineEntity A
    LEFT JOIN PWC_T_TaxGroupEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(A.DATAAREAID) = 'GLOBAL' OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.SALESTAXGROUP = B.TAXGROUPCODE
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_TaxGroupEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.SALESTAXGROUP IS NOT NULL AND A.SALESTAXGROUP != ''
    GROUP BY A.PWCROWID, A.SALESTAXGROUP, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- TAXEXEMPTNUMBER validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
        CASE 
            WHEN COUNT(B.VATNum) = 0 THEN 'TAXEXEMPTNUMBER'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'TAXEXEMPTNUMBER,[PWC_T_TaxVATNumTableEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.VATNum) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.VATNum) = 0 THEN 'TAXEXEMPTNUMBER is not present in VATNum of PWC_T_TaxVATNumTableEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_TaxVATNumTableEntity has error(s) in corresponding VATNum'
        END ERRORDESC,
        A.TAXEXEMPTNUMBER ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendInvoiceJournalLineEntity A
    LEFT JOIN PWC_T_TaxVATNumTableEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(A.DATAAREAID) = 'GLOBAL' OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.TAXEXEMPTNUMBER = B.VATNum
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_TaxVATNumTableEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.TAXEXEMPTNUMBER IS NOT NULL AND A.TAXEXEMPTNUMBER != ''
    GROUP BY A.PWCROWID, A.TAXEXEMPTNUMBER, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- METHODOFPAYMENT validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
        CASE 
            WHEN COUNT(B.Name) = 0 THEN 'METHODOFPAYMENT'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'METHODOFPAYMENT,[PWC_T_VendorPaymentMethodEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.Name) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.Name) = 0 THEN 'METHODOFPAYMENT is not present in Name of PWC_T_VendorPaymentMethodEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_VendorPaymentMethodEntity has error(s) in corresponding Name'
        END ERRORDESC,
        A.METHODOFPAYMENT ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendInvoiceJournalLineEntity A
    LEFT JOIN PWC_T_VendorPaymentMethodEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(A.DATAAREAID) = 'GLOBAL' OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.METHODOFPAYMENT = B.Name
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_VendorPaymentMethodEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.METHODOFPAYMENT IS NOT NULL AND A.METHODOFPAYMENT != ''
    GROUP BY A.PWCROWID, A.METHODOFPAYMENT, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;










-- String length exceeded maximum
-- CASHDISCOUNT exceeds max length 10
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'CASHDISCOUNT' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'CASHDISCOUNT exceeds max length 10' ERRORDESC, 
CASHDISCOUNT ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE LEN(CASHDISCOUNT) > 10;

-- INVOICE exceeds max length 20
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'INVOICE' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'INVOICE exceeds max length 20' ERRORDESC, 
INVOICE ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE LEN(INVOICE) > 20;

-- OFFSETTRANSACTIONTEXT exceeds max length 512
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'OFFSETTRANSACTIONTEXT' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'OFFSETTRANSACTIONTEXT exceeds max length 512' ERRORDESC, 
OFFSETTRANSACTIONTEXT ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE LEN(OFFSETTRANSACTIONTEXT) > 512;

-- DESCRIPTION exceeds max length 512
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'DESCRIPTION' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'DESCRIPTION exceeds max length 512' ERRORDESC, 
DESCRIPTION ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE LEN(DESCRIPTION) > 512;

-- VOUCHER exceeds max length 20
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'VOUCHER' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'VOUCHER exceeds max length 20' ERRORDESC, 
VOUCHER ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE LEN(VOUCHER) > 20;

-- PAYMID exceeds max length 200
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'PAYMID' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'PAYMID exceeds max length 200' ERRORDESC, 
PAYMID ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE LEN(PAYMID) > 200;

-- FINTAGDISPLAYVALUE exceeds max length 1000
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'FINTAGDISPLAYVALUE' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'FINTAGDISPLAYVALUE exceeds max length 1000' ERRORDESC, 
FINTAGDISPLAYVALUE ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE LEN(FINTAGDISPLAYVALUE) > 1000;

-- OFFSETFINTAGDISPLAYVALUE exceeds max length 1000
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendInvoiceJournalLineEntity' TABLEID, 
'OFFSETFINTAGDISPLAYVALUE' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'OFFSETFINTAGDISPLAYVALUE exceeds max length 1000' ERRORDESC, 
OFFSETFINTAGDISPLAYVALUE ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendInvoiceJournalLineEntity A
WHERE LEN(OFFSETFINTAGDISPLAYVALUE) > 1000;

EXEC PWC_SP_CALCULATESUCCESSFULCOUNT @TableName = 'PWC_T_VendInvoiceJournalLineEntity'
END
