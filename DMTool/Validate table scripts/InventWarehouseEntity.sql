CREATE OR ALTER PROCEDURE PWC_SP_Validate_InventWarehouseEntity
AS
BEGIN

-- Other system checks
   -- AREADVANCEDWAREHOUSEMANAGEMENTPROCESSESENABLED cannot be YES for Quarantine and Transit Type Warehouses
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_InventWarehouseEntity' TABLEID, 
        'AREADVANCEDWAREHOUSEMANAGEMENTPROCESSESENABLED' ERRORCOLUMN, 
        PWCROWID ROWID, 
        6 CATEGORY, 
        'AREADVANCEDWAREHOUSEMANAGEMENTPROCESSESENABLED cannot be YES for Quarantine and Transit Type Warehouses' ERRORDESC, 
        AREADVANCEDWAREHOUSEMANAGEMENTPROCESSESENABLED ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_InventWarehouseEntity A
    WHERE 
        AREADVANCEDWAREHOUSEMANAGEMENTPROCESSESENABLED IS NOT NULL 
        AND AREADVANCEDWAREHOUSEMANAGEMENTPROCESSESENABLED LIKE '%Y%' 
        AND (WAREHOUSETYPE LIKE 'QUA%' OR WAREHOUSETYPE LIKE 'TRANS%');

    -- GOODSINTRANSITWAREHOUSEID should be blank if WAREHOUSETYPE is not Default
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_InventWarehouseEntity' TABLEID, 
        'GOODSINTRANSITWAREHOUSEID' ERRORCOLUMN, 
        PWCROWID ROWID, 
        6 CATEGORY, 
        'GOODSINTRANSITWAREHOUSEID should be blank if WAREHOUSETYPE is not Default' ERRORDESC, 
        GOODSINTRANSITWAREHOUSEID ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_InventWarehouseEntity A
    WHERE 
        GOODSINTRANSITWAREHOUSEID IS NOT NULL AND (WAREHOUSETYPE IS NOT NULL AND WAREHOUSETYPE NOT LIKE '%STAND%');

    -- QUARANTINEWAREHOUSEID should be blank if WAREHOUSETYPE is not Default
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_InventWarehouseEntity' TABLEID, 
        'QUARANTINEWAREHOUSEID' ERRORCOLUMN, 
        PWCROWID ROWID, 
        6 CATEGORY, 
        'QUARANTINEWAREHOUSEID should be blank if WAREHOUSETYPE is not Default' ERRORDESC, 
        QUARANTINEWAREHOUSEID ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_InventWarehouseEntity A
    WHERE 
        QUARANTINEWAREHOUSEID IS NOT NULL AND (WAREHOUSETYPE IS NOT NULL AND WAREHOUSETYPE NOT LIKE '%STAND%');


-- Mandatory fields missing
    -- WAREHOUSEID is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_InventWarehouseEntity' TABLEID, 
        'WAREHOUSEID' ERRORCOLUMN, 
        PWCROWID ROWID, 
        1 CATEGORY, 
        'WAREHOUSEID is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_InventWarehouseEntity A
    WHERE 
        WAREHOUSEID = '' OR WAREHOUSEID IS NULL;

    -- OPERATIONALSITEID is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_InventWarehouseEntity' TABLEID, 
        'OPERATIONALSITEID' ERRORCOLUMN, 
        PWCROWID ROWID, 
        1 CATEGORY, 
        'OPERATIONALSITEID is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_InventWarehouseEntity A
    WHERE 
        OPERATIONALSITEID = '' OR OPERATIONALSITEID IS NULL;



-- Business reqd fields missing
    -- WAREHOUSETYPE is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_InventWarehouseEntity' TABLEID, 
        'WAREHOUSETYPE' ERRORCOLUMN, 
        PWCROWID ROWID, 
        8 CATEGORY, 
        'WAREHOUSETYPE is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_InventWarehouseEntity A
    WHERE 
        WAREHOUSETYPE = '' OR WAREHOUSETYPE IS NULL;

    -- WAREHOUSENAME is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_InventWarehouseEntity' TABLEID, 
        'WAREHOUSENAME' ERRORCOLUMN, 
        PWCROWID ROWID, 
        8 CATEGORY, 
        'WAREHOUSENAME is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_InventWarehouseEntity A
    WHERE 
        WAREHOUSENAME = '' OR WAREHOUSENAME IS NULL;

    -- ISFINANCIALNEGATIVERETAILSTOREINVENTORYALLOWED is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_InventWarehouseEntity' TABLEID, 
        'ISFINANCIALNEGATIVERETAILSTOREINVENTORYALLOWED' ERRORCOLUMN, 
        PWCROWID ROWID, 
        8 CATEGORY, 
        'ISFINANCIALNEGATIVERETAILSTOREINVENTORYALLOWED is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_InventWarehouseEntity A
    WHERE 
        ISFINANCIALNEGATIVERETAILSTOREINVENTORYALLOWED = '' OR ISFINANCIALNEGATIVERETAILSTOREINVENTORYALLOWED IS NULL;

    -- ISPHYSICALNEGATIVERETAILSTOREINVENTORYALLOWED is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_InventWarehouseEntity' TABLEID, 
        'ISPHYSICALNEGATIVERETAILSTOREINVENTORYALLOWED' ERRORCOLUMN, 
        PWCROWID ROWID, 
        8 CATEGORY, 
        'ISPHYSICALNEGATIVERETAILSTOREINVENTORYALLOWED is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_InventWarehouseEntity A
    WHERE 
        ISPHYSICALNEGATIVERETAILSTOREINVENTORYALLOWED = '' OR ISPHYSICALNEGATIVERETAILSTOREINVENTORYALLOWED IS NULL;

    -- PRIMARYADDRESSCITY is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_InventWarehouseEntity' TABLEID, 
        'PRIMARYADDRESSCITY' ERRORCOLUMN, 
        PWCROWID ROWID, 
        8 CATEGORY, 
        'PRIMARYADDRESSCITY is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_InventWarehouseEntity A
    WHERE 
        PRIMARYADDRESSCITY = '' OR PRIMARYADDRESSCITY IS NULL;

    -- PRIMARYADDRESSCOUNTRYREGIONID is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_InventWarehouseEntity' TABLEID, 
        'PRIMARYADDRESSCOUNTRYREGIONID' ERRORCOLUMN, 
        PWCROWID ROWID, 
        8 CATEGORY, 
        'PRIMARYADDRESSCOUNTRYREGIONID is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_InventWarehouseEntity A
    WHERE 
        PRIMARYADDRESSCOUNTRYREGIONID = '' OR PRIMARYADDRESSCOUNTRYREGIONID IS NULL;

    -- PRIMARYADDRESSSTATEID is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_InventWarehouseEntity' TABLEID, 
        'PRIMARYADDRESSSTATEID' ERRORCOLUMN, 
        PWCROWID ROWID, 
        8 CATEGORY, 
        'PRIMARYADDRESSSTATEID is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_InventWarehouseEntity A
    WHERE 
        PRIMARYADDRESSSTATEID = '' OR PRIMARYADDRESSSTATEID IS NULL;

    -- PRIMARYADDRESSSTREET is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_InventWarehouseEntity' TABLEID, 
        'PRIMARYADDRESSSTREET' ERRORCOLUMN, 
        PWCROWID ROWID, 
        8 CATEGORY, 
        'PRIMARYADDRESSSTREET is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_InventWarehouseEntity A
    WHERE 
        PRIMARYADDRESSSTREET = '' OR PRIMARYADDRESSSTREET IS NULL;

    -- ISPRIMARYADDRESSASSIGNED is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_InventWarehouseEntity' TABLEID, 
        'ISPRIMARYADDRESSASSIGNED' ERRORCOLUMN, 
        PWCROWID ROWID, 
        8 CATEGORY, 
        'ISPRIMARYADDRESSASSIGNED is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_InventWarehouseEntity A
    WHERE 
        ISPRIMARYADDRESSASSIGNED = '' OR ISPRIMARYADDRESSASSIGNED IS NULL;

    -- PRIMARYADDRESSLOCATIONROLES is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_InventWarehouseEntity' TABLEID, 
        'PRIMARYADDRESSLOCATIONROLES' ERRORCOLUMN, 
        PWCROWID ROWID, 
        8 CATEGORY, 
        'PRIMARYADDRESSLOCATIONROLES is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_InventWarehouseEntity A
    WHERE 
        PRIMARYADDRESSLOCATIONROLES = '' OR PRIMARYADDRESSLOCATIONROLES IS NULL;

    -- PRIMARYADDRESSDESCRIPTION is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_InventWarehouseEntity' TABLEID, 
        'PRIMARYADDRESSDESCRIPTION' ERRORCOLUMN, 
        PWCROWID ROWID, 
        8 CATEGORY, 
        'PRIMARYADDRESSDESCRIPTION is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_InventWarehouseEntity A
    WHERE 
        PRIMARYADDRESSDESCRIPTION = '' OR PRIMARYADDRESSDESCRIPTION IS NULL;



-- Duplicate Occurence
    -- WAREHOUSEID, DATAAREAID has duplicate values
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_InventWarehouseEntity' TABLEID, 
        'WAREHOUSEID' ERRORCOLUMN, 
        PWCROWID ROWID, 
        3 CATEGORY, 
        CASE 
            WHEN LEN(WAREHOUSEID) > 10 THEN 
                'WAREHOUSEID has duplicate values upon truncation in ' + DATAAREAID
            ELSE 
                'WAREHOUSEID has duplicate values in ' + DATAAREAID
        END ERRORDESC, 
        WAREHOUSEID ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_InventWarehouseEntity A
    WHERE 
			CONCAT(LEFT(WAREHOUSEID, 10), DATAAREAID) IN (
            SELECT CONCAT(LEFT(WAREHOUSEID, 10), DATAAREAID) 
            FROM PWC_T_InventWarehouseEntity
            GROUP BY LEFT(WAREHOUSEID, 10), DATAAREAID 
            HAVING COUNT(*) > 1
        );



-- Invalid Enum values
    -- WAREHOUSETYPE has invalid enum values
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_InventWarehouseEntity' TABLEID, 
        'WAREHOUSETYPE' ERRORCOLUMN, 
        PWCROWID ROWID, 
        2 CATEGORY, 
        'WAREHOUSETYPE has invalid enum values' ERRORDESC, 
        WAREHOUSETYPE ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_InventWarehouseEntity A
    WHERE 
        WAREHOUSETYPE IS NOT NULL 
        AND WAREHOUSETYPE NOT IN (
            SELECT MEMBERNAME 
            FROM RETAILENUMVALUETABLE 
            WHERE ENUMNAME LIKE 'InventLocationType'
        );


-- Invalid submaster reference
	-- PRIMARYADDRESSCOUNTRYREGIONID, PRIMARYADDRESSCITY, PRIMARYADDRESSSTATEID validation
	INSERT INTO PWCERRORTABLE
	SELECT * FROM (
		SELECT 
			'PWC_T_InventWarehouseEntity' TABLEID, 
			CASE 
				WHEN COUNT(B.COUNTRYREGIONID) = 0 THEN '(PRIMARYADDRESSCOUNTRYREGIONID, PRIMARYADDRESSCITY, PRIMARYADDRESSSTATEID)'
				WHEN COUNT(E.CATEGORY) <> 0 THEN '(PRIMARYADDRESSCOUNTRYREGIONID, PRIMARYADDRESSCITY, PRIMARYADDRESSSTATEID),[PWC_T_LogisticsAddressCityEntity]'
			END ERRORCOLUMN, 
			A.PWCROWID ROWID, 
			CASE 
				WHEN COUNT(B.COUNTRYREGIONID) = 0 THEN 4
				WHEN COUNT(E.CATEGORY) <> 0 THEN 5
			END CATEGORY, 
			CASE 
				WHEN COUNT(B.COUNTRYREGIONID) = 0 THEN 'PRIMARYADDRESSCOUNTRYREGIONID, PRIMARYADDRESSCITY, PRIMARYADDRESSSTATEID is not present in COUNTRYREGIONID, NAME, STATEID of PWC_T_LogisticsAddressCityEntity'
				WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_LogisticsAddressCityEntity has error(s) in corresponding COUNTRYREGIONID, NAME, STATEID'
			END ERRORDESC,
			CONCAT('(', A.PRIMARYADDRESSCOUNTRYREGIONID, ', ', A.PRIMARYADDRESSCITY, ', ', A.PRIMARYADDRESSSTATEID, ')') ERRORVALUE,
			A.DATAAREAID DATAAREAID
		FROM PWC_T_InventWarehouseEntity A
		LEFT JOIN PWC_T_LogisticsAddressCityEntity B
			ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') 
			AND CONCAT(A.PRIMARYADDRESSCOUNTRYREGIONID, A.PRIMARYADDRESSCITY, A.PRIMARYADDRESSSTATEID) = CONCAT(B.COUNTRYREGIONID, B.NAME, B.STATEID)
		LEFT JOIN PWCERRORTABLE E
			ON E.TABLEID = 'PWC_T_LogisticsAddressCityEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
				AND B.PWCROWID = E.ROWID
		WHERE 
			A.PRIMARYADDRESSCOUNTRYREGIONID IS NOT NULL AND A.PRIMARYADDRESSCITY IS NOT NULL AND A.PRIMARYADDRESSSTATEID IS NOT NULL
		GROUP BY A.PWCROWID, A.PRIMARYADDRESSCOUNTRYREGIONID, A.PRIMARYADDRESSCITY, A.PRIMARYADDRESSSTATEID, A.DATAAREAID
	) a
	WHERE CATEGORY IS NOT NULL;


	-- QUARANTINEWAREHOUSEID validation
	INSERT INTO PWCERRORTABLE
	SELECT * FROM (
		SELECT 
			'PWC_T_InventWarehouseEntity' TABLEID, 
			CASE 
				WHEN COUNT(B.WAREHOUSEID) = 0 THEN 'QUARANTINEWAREHOUSEID'
				WHEN COUNT(E.CATEGORY) <> 0 THEN 'QUARANTINEWAREHOUSEID,[PWC_T_InventWarehouseEntity]'
			END ERRORCOLUMN, 
			A.PWCROWID ROWID, 
			CASE 
				WHEN COUNT(B.WAREHOUSEID) = 0 THEN 4
				WHEN COUNT(E.CATEGORY) <> 0 THEN 5
			END CATEGORY, 
			CASE 
				WHEN COUNT(B.WAREHOUSEID) = 0 THEN 'QUARANTINEWAREHOUSEID is not present in WAREHOUSEID of PWC_T_InventWarehouseEntity'
				WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_InventWarehouseEntity has error(s) in corresponding WAREHOUSEID'
			END ERRORDESC,
			A.QUARANTINEWAREHOUSEID ERRORVALUE,
			A.DATAAREAID DATAAREAID
		FROM PWC_T_InventWarehouseEntity A
		LEFT JOIN PWC_T_InventWarehouseEntity B
			ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.QUARANTINEWAREHOUSEID = B.WAREHOUSEID AND B.WAREHOUSETYPE LIKE 'Q%'
		LEFT JOIN PWCERRORTABLE E
			ON E.TABLEID = 'PWC_T_InventWarehouseEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
				AND B.PWCROWID = E.ROWID
		WHERE 
			A.QUARANTINEWAREHOUSEID IS NOT NULL AND A.QUARANTINEWAREHOUSEID != ''
		GROUP BY A.PWCROWID, A.QUARANTINEWAREHOUSEID, A.DATAAREAID
	) a
	WHERE CATEGORY IS NOT NULL;


	-- OPERATIONALSITEID validation
	INSERT INTO PWCERRORTABLE
	SELECT * FROM (
		SELECT 
			'PWC_T_InventWarehouseEntity' TABLEID, 
			CASE 
				WHEN COUNT(B.SITEID) = 0 THEN 'OPERATIONALSITEID'
				WHEN COUNT(E.CATEGORY) <> 0 THEN 'OPERATIONALSITEID,[PWC_T_InventOperationalSiteV2Entity]'
			END ERRORCOLUMN, 
			A.PWCROWID ROWID, 
			CASE 
				WHEN COUNT(B.SITEID) = 0 THEN 4
				WHEN COUNT(E.CATEGORY) <> 0 THEN 5
			END CATEGORY, 
			CASE 
				WHEN COUNT(B.SITEID) = 0 THEN 'OPERATIONALSITEID is not present in SITEID of PWC_T_InventOperationalSiteV2Entity'
				WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_InventOperationalSiteV2Entity has error(s) in corresponding SITEID'
			END ERRORDESC,
			A.OPERATIONALSITEID ERRORVALUE,
			A.DATAAREAID DATAAREAID
		FROM PWC_T_InventWarehouseEntity A
		LEFT JOIN PWC_T_InventOperationalSiteV2Entity B
			ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.OPERATIONALSITEID = B.SITEID
		LEFT JOIN PWCERRORTABLE E
			ON E.TABLEID = 'PWC_T_InventOperationalSiteV2Entity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
				AND B.PWCROWID = E.ROWID
		WHERE 
			A.OPERATIONALSITEID IS NOT NULL AND A.OPERATIONALSITEID != ''
		GROUP BY A.PWCROWID, A.OPERATIONALSITEID, A.DATAAREAID
	) a
	WHERE CATEGORY IS NOT NULL;

	-- PRIMARYADDRESSCITY validation
	INSERT INTO PWCERRORTABLE
	SELECT * FROM (
		SELECT 
			'PWC_T_InventWarehouseEntity' TABLEID, 
			CASE 
				WHEN COUNT(B.NAME) = 0 THEN 'PRIMARYADDRESSCITY'
				WHEN COUNT(E.CATEGORY) <> 0 THEN 'PRIMARYADDRESSCITY,[PWC_T_LogisticsAddressCityEntity]'
			END ERRORCOLUMN, 
			A.PWCROWID ROWID, 
			CASE 
				WHEN COUNT(B.NAME) = 0 THEN 4
				WHEN COUNT(E.CATEGORY) <> 0 THEN 5
			END CATEGORY, 
			CASE 
				WHEN COUNT(B.NAME) = 0 THEN 'PRIMARYADDRESSCITY is not present in NAME of PWC_T_LogisticsAddressCityEntity'
				WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_LogisticsAddressCityEntity has error(s) in corresponding NAME'
			END ERRORDESC,
			A.PRIMARYADDRESSCITY ERRORVALUE,
			A.DATAAREAID DATAAREAID
		FROM PWC_T_InventWarehouseEntity A
		LEFT JOIN PWC_T_LogisticsAddressCityEntity B
			ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.PRIMARYADDRESSCITY = B.NAME
		LEFT JOIN PWCERRORTABLE E
			ON E.TABLEID = 'PWC_T_LogisticsAddressCityEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
				AND B.PWCROWID = E.ROWID
		WHERE 
			A.PRIMARYADDRESSCITY IS NOT NULL AND A.PRIMARYADDRESSCITY != ''
		GROUP BY A.PWCROWID, A.PRIMARYADDRESSCITY, A.DATAAREAID
	) a
	WHERE CATEGORY IS NOT NULL;

	-- PRIMARYADDRESSCOUNTRYREGIONID validation
	INSERT INTO PWCERRORTABLE
	SELECT * FROM (
		SELECT 
			'PWC_T_InventWarehouseEntity' TABLEID, 
			CASE 
				WHEN COUNT(B.COUNTRYREGION) = 0 THEN 'PRIMARYADDRESSCOUNTRYREGIONID'
				WHEN COUNT(E.CATEGORY) <> 0 THEN 'PRIMARYADDRESSCOUNTRYREGIONID,[PWC_T_LogisticsAddressCountryRegionEntity]'
			END ERRORCOLUMN, 
			A.PWCROWID ROWID, 
			CASE 
				WHEN COUNT(B.COUNTRYREGION) = 0 THEN 4
				WHEN COUNT(E.CATEGORY) <> 0 THEN 5
			END CATEGORY, 
			CASE 
				WHEN COUNT(B.COUNTRYREGION) = 0 THEN 'PRIMARYADDRESSCOUNTRYREGIONID is not present in COUNTRYREGION of PWC_T_LogisticsAddressCountryRegionEntity'
				WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_LogisticsAddressCountryRegionEntity has error(s) in corresponding COUNTRYREGION'
			END ERRORDESC,
			A.PRIMARYADDRESSCOUNTRYREGIONID ERRORVALUE,
			A.DATAAREAID DATAAREAID
		FROM PWC_T_InventWarehouseEntity A
		LEFT JOIN PWC_T_LogisticsAddressCountryRegionEntity B
			ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.PRIMARYADDRESSCOUNTRYREGIONID = B.COUNTRYREGION
		LEFT JOIN PWCERRORTABLE E
			ON E.TABLEID = 'PWC_T_LogisticsAddressCountryRegionEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
				AND B.PWCROWID = E.ROWID
		WHERE 
			A.PRIMARYADDRESSCOUNTRYREGIONID IS NOT NULL AND A.PRIMARYADDRESSCOUNTRYREGIONID != ''
		GROUP BY A.PWCROWID, A.PRIMARYADDRESSCOUNTRYREGIONID, A.DATAAREAID
	) a
	WHERE CATEGORY IS NOT NULL;

	-- PRIMARYADDRESSSTATEID validation
	INSERT INTO PWCERRORTABLE
	SELECT * FROM (
		SELECT 
			'PWC_T_InventWarehouseEntity' TABLEID, 
			CASE 
				WHEN COUNT(B.STATE) = 0 THEN 'PRIMARYADDRESSSTATEID'
				WHEN COUNT(E.CATEGORY) <> 0 THEN 'PRIMARYADDRESSSTATEID,[PWC_T_LogisticsAddressStateEntity]'
			END ERRORCOLUMN, 
			A.PWCROWID ROWID, 
			CASE 
				WHEN COUNT(B.STATE) = 0 THEN 4
				WHEN COUNT(E.CATEGORY) <> 0 THEN 5
			END CATEGORY, 
			CASE 
				WHEN COUNT(B.STATE) = 0 THEN 'PRIMARYADDRESSSTATEID is not present in STATE of PWC_T_LogisticsAddressStateEntity'
				WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_LogisticsAddressStateEntity has error(s) in corresponding STATE'
			END ERRORDESC,
			A.PRIMARYADDRESSSTATEID ERRORVALUE,
			A.DATAAREAID DATAAREAID
		FROM PWC_T_InventWarehouseEntity A
		LEFT JOIN PWC_T_LogisticsAddressStateEntity B
			ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.PRIMARYADDRESSSTATEID = B.STATE
		LEFT JOIN PWCERRORTABLE E
			ON E.TABLEID = 'PWC_T_LogisticsAddressStateEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
				AND B.PWCROWID = E.ROWID
		WHERE 
			A.PRIMARYADDRESSSTATEID IS NOT NULL AND A.PRIMARYADDRESSSTATEID != ''
		GROUP BY A.PWCROWID, A.PRIMARYADDRESSSTATEID, A.DATAAREAID
	) a
	WHERE CATEGORY IS NOT NULL;

	-- GOODSINTRANSITWAREHOUSEID validations
	INSERT INTO PWCERRORTABLE
	SELECT * FROM (
		SELECT 
			'PWC_T_InventWarehouseEntity' TABLEID, 
			CASE 
				WHEN COUNT(B.WAREHOUSEID) = 0 THEN 'GOODSINTRANSITWAREHOUSEID'
				WHEN COUNT(E.CATEGORY) <> 0 THEN 'GOODSINTRANSITWAREHOUSEID,[PWC_T_InventWarehouseEntity]'
			END ERRORCOLUMN,
			A.PWCROWID ROWID, 
			CASE 
				WHEN COUNT(B.WAREHOUSEID) = 0 THEN 4
				WHEN COUNT(E.CATEGORY) <> 0 THEN 5
			END CATEGORY, 
			CASE 
				WHEN COUNT(B.WAREHOUSEID) = 0 THEN 'GOODSINTRANSITWAREHOUSEID is not present in WAREHOUSEID of PWC_T_InventWarehouseEntity'
				WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_InventWarehouseEntity has error(s) in corresponding WAREHOUSEID'
			END ERRORDESC, 
			A.GOODSINTRANSITWAREHOUSEID ERRORVALUE,
			A.DATAAREAID DATAAREAID
		FROM PWC_T_InventWarehouseEntity A
		LEFT JOIN PWC_T_InventWarehouseEntity B
			ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.GOODSINTRANSITWAREHOUSEID = B.WAREHOUSEID AND B.WAREHOUSETYPE LIKE 'T%'
		LEFT JOIN PWCERRORTABLE E
			ON E.TABLEID = 'PWC_T_InventWarehouseEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
				AND B.PWCROWID = E.ROWID
		WHERE A.GOODSINTRANSITWAREHOUSEID IS NOT NULL AND A.GOODSINTRANSITWAREHOUSEID != ''
		GROUP BY TABLEID, A.PWCROWID, A.GOODSINTRANSITWAREHOUSEID, A.DATAAREAID
	) a
	WHERE CATEGORY IS NOT NULL;

	-- QUARANTINEWAREHOUSEID,OPERATIONALSITEID validations
	INSERT INTO PWCERRORTABLE
	SELECT * FROM (
		SELECT 
			'PWC_T_InventWarehouseEntity' TABLEID, 
			CASE 
				WHEN COUNT(B.WAREHOUSEID) = 0 THEN '(QUARANTINEWAREHOUSEID,OPERATIONALSITEID)'
				WHEN COUNT(E.CATEGORY) <> 0 THEN '(QUARANTINEWAREHOUSEID,OPERATIONALSITEID),[PWC_T_InventWarehouseEntity]'
			END ERRORCOLUMN,
			A.PWCROWID ROWID, 
			CASE 
				WHEN COUNT(B.WAREHOUSEID) = 0 THEN 4
				WHEN COUNT(E.CATEGORY) <> 0 THEN 5
			END CATEGORY, 
			CASE 
				WHEN COUNT(B.WAREHOUSEID) = 0 THEN 'QUARANTINEWAREHOUSEID, OPERATIONALSITEID is not present in WAREHOUSEID,OPERATIONALSITEID of PWC_T_InventWarehouseEntity'
				WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_InventWarehouseEntity has error(s) in corresponding WAREHOUSEID,OPERATIONALSITEID'
			END ERRORDESC, 
			CONCAT('(',A.QUARANTINEWAREHOUSEID,',',A.OPERATIONALSITEID,')') ERRORVALUE,
			A.DATAAREAID DATAAREAID
		FROM PWC_T_InventWarehouseEntity A
		LEFT JOIN PWC_T_InventWarehouseEntity B
			ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.QUARANTINEWAREHOUSEID = B.WAREHOUSEID AND A.OPERATIONALSITEID = B.OPERATIONALSITEID AND B.WAREHOUSETYPE LIKE 'Q%'
		LEFT JOIN PWCERRORTABLE E
			ON E.TABLEID = 'PWC_T_InventWarehouseEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
				AND B.PWCROWID = E.ROWID
		WHERE A.QUARANTINEWAREHOUSEID IS NOT NULL AND A.QUARANTINEWAREHOUSEID != '' AND
			  A.OPERATIONALSITEID IS NOT NULL AND A.OPERATIONALSITEID != '' 
		GROUP BY TABLEID, A.PWCROWID, A.QUARANTINEWAREHOUSEID, A.OPERATIONALSITEID, A.DATAAREAID
	) a
	WHERE CATEGORY IS NOT NULL;



-- String length exceeded
-- WAREHOUSEID exceeds max length 10
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_InventWarehouseEntity' TABLEID, 
        'WAREHOUSEID' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'WAREHOUSEID exceeds max length 10' ERRORDESC, 
        WAREHOUSEID ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_InventWarehouseEntity A
    WHERE LEN(WAREHOUSEID) > 10;

    -- WAREHOUSENAME exceeds max length 60
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_InventWarehouseEntity' TABLEID, 
        'WAREHOUSENAME' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'WAREHOUSENAME exceeds max length 60' ERRORDESC, 
        WAREHOUSENAME ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_InventWarehouseEntity A
    WHERE LEN(WAREHOUSENAME) > 60;

    -- PRIMARYADDRESSDISTRICTNAME exceeds max length 60
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_InventWarehouseEntity' TABLEID, 
        'PRIMARYADDRESSDISTRICTNAME' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'PRIMARYADDRESSDISTRICTNAME exceeds max length 60' ERRORDESC, 
        PRIMARYADDRESSDISTRICTNAME ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_InventWarehouseEntity A
    WHERE LEN(PRIMARYADDRESSDISTRICTNAME) > 60;

    -- PRIMARYADDRESSSTREET exceeds max length 250
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_InventWarehouseEntity' TABLEID, 
        'PRIMARYADDRESSSTREET' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'PRIMARYADDRESSSTREET exceeds max length 250' ERRORDESC, 
        PRIMARYADDRESSSTREET ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_InventWarehouseEntity A
    WHERE LEN(PRIMARYADDRESSSTREET) > 250;

    -- PRIMARYADDRESSLOCATIONROLES exceeds max length 1000
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_InventWarehouseEntity' TABLEID, 
        'PRIMARYADDRESSLOCATIONROLES' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'PRIMARYADDRESSLOCATIONROLES exceeds max length 1000' ERRORDESC, 
        PRIMARYADDRESSLOCATIONROLES ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_InventWarehouseEntity A
    WHERE LEN(PRIMARYADDRESSLOCATIONROLES) > 1000;

    -- PRIMARYADDRESSDESCRIPTION exceeds max length 60
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_InventWarehouseEntity' TABLEID, 
        'PRIMARYADDRESSDESCRIPTION' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'PRIMARYADDRESSDESCRIPTION exceeds max length 60' ERRORDESC, 
        PRIMARYADDRESSDESCRIPTION ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_InventWarehouseEntity A
    WHERE LEN(PRIMARYADDRESSDESCRIPTION) > 60;

    -- DEFAULTCONTAINERTYPEID exceeds max length 20
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_InventWarehouseEntity' TABLEID, 
        'DEFAULTCONTAINERTYPEID' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'DEFAULTCONTAINERTYPEID exceeds max length 20' ERRORDESC, 
        DEFAULTCONTAINERTYPEID ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_InventWarehouseEntity A
    WHERE LEN(DEFAULTCONTAINERTYPEID) > 20;

	EXEC PWC_SP_CALCULATESUCCESSFULCOUNT @TableName = 'PWC_T_InventWarehouseEntity'
END

