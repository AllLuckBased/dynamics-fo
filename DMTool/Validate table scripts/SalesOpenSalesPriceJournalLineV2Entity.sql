CREATE OR ALTER PROCEDURE PWC_SP_Validate_SalesOpenSalesPriceJournalLineV2Entity
AS
BEGIN

-- Invalid data format:
-- SALESLEADTIMEDAYS is not an integer
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    'SALESLEADTIMEDAYS' ERRORCOLUMN, 
    PWCROWID ROWID, 
    2 CATEGORY, 
    'SALESLEADTIMEDAYS is not an integer' ERRORDESC, 
    SALESLEADTIMEDAYS ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    SALESLEADTIMEDAYS LIKE '%[^0-9]%' AND SALESLEADTIMEDAYS IS NOT NULL;

-- SALESPRICEQUANTITY is not a real number
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    'SALESPRICEQUANTITY' ERRORCOLUMN, 
    PWCROWID ROWID, 
    2 CATEGORY, 
    'SALESPRICEQUANTITY is not a real number' ERRORDESC, 
    SALESPRICEQUANTITY ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    SALESPRICEQUANTITY LIKE '%[^0-9.]%' AND SALESPRICEQUANTITY IS NOT NULL;

-- SALESPRICEQUANTITY is negative
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    'SALESPRICEQUANTITY' ERRORCOLUMN, 
    PWCROWID ROWID, 
    1 CATEGORY, 
    'SALESPRICEQUANTITY is negative' ERRORDESC, 
    SALESPRICEQUANTITY ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    TRY_CAST(SALESPRICEQUANTITY AS float) IS NOT NULL AND
    TRY_CAST(SALESPRICEQUANTITY AS float) < 0.0;

-- PRICE is not a real number
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    'PRICE' ERRORCOLUMN, 
    PWCROWID ROWID, 
    2 CATEGORY, 
    'PRICE is not a real number' ERRORDESC, 
    PRICE ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    PRICE IS NOT NULL AND PRICE LIKE '%[^0-9.]%';

-- PRICE is negative
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    'PRICE' ERRORCOLUMN, 
    PWCROWID ROWID, 
    1 CATEGORY, 
    'PRICE is negative' ERRORDESC, 
    PRICE ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    TRY_CAST(PRICE AS float) IS NOT NULL AND
    TRY_CAST(PRICE AS float) < 0.0;

-- FROMQUANTITY is not a real number
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    'FROMQUANTITY' ERRORCOLUMN, 
    PWCROWID ROWID, 
    2 CATEGORY, 
    'FROMQUANTITY is not a real number' ERRORDESC, 
    FROMQUANTITY ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    FROMQUANTITY IS NOT NULL AND FROMQUANTITY LIKE '%[^0-9.]%';

-- FROMQUANTITY is negative
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    'FROMQUANTITY' ERRORCOLUMN, 
    PWCROWID ROWID, 
    1 CATEGORY, 
    'FROMQUANTITY is negative' ERRORDESC, 
    FROMQUANTITY ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    TRY_CAST(FROMQUANTITY AS float) IS NOT NULL AND
    TRY_CAST(FROMQUANTITY AS float) < 0.0;

-- TOQUANTITY is not a real number
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    'TOQUANTITY' ERRORCOLUMN, 
    PWCROWID ROWID, 
    2 CATEGORY, 
    'TOQUANTITY is not a real number' ERRORDESC, 
    TOQUANTITY ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    TOQUANTITY LIKE '%[^0-9.]%' AND TOQUANTITY IS NOT NULL;

-- TOQUANTITY is negative
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    'TOQUANTITY' ERRORCOLUMN, 
    PWCROWID ROWID, 
    1 CATEGORY, 
    'TOQUANTITY is negative' ERRORDESC, 
    TOQUANTITY ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    TRY_CAST(TOQUANTITY AS float) IS NOT NULL AND
    TRY_CAST(TOQUANTITY AS float) < 0.0;

-- AGREEMENT is negative
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    'AGREEMENT' ERRORCOLUMN, 
    PWCROWID ROWID, 
    1 CATEGORY, 
    'AGREEMENT is negative' ERRORDESC, 
    AGREEMENT ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    TRY_CAST(AGREEMENT AS float) IS NOT NULL AND
    TRY_CAST(AGREEMENT AS float) < 0.0;

-- AGREEMENT is not a real number
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    'AGREEMENT' ERRORCOLUMN, 
    PWCROWID ROWID, 
    2 CATEGORY, 
    'AGREEMENT is not a real number' ERRORDESC, 
    AGREEMENT ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    AGREEMENT LIKE '%[^0-9.]%' AND AGREEMENT IS NOT NULL;

-- PRICEAPPLICABLEFROMDATE HAS WRONG DATE FORMAT
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    'PRICEAPPLICABLEFROMDATE' ERRORCOLUMN, 
    PWCROWID ROWID, 
    2 CATEGORY, 
    'PRICEAPPLICABLEFROMDATE has wrong date format' ERRORDESC, 
    PRICEAPPLICABLEFROMDATE ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    PRICEAPPLICABLEFROMDATE IS NOT NULL AND ISDATE(PRICEAPPLICABLEFROMDATE) = 0;

-- PRICEAPPLICABLETODATE HAS WRONG DATE FORMAT
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    'PRICEAPPLICABLETODATE' ERRORCOLUMN, 
    PWCROWID ROWID, 
    2 CATEGORY, 
    'PRICEAPPLICABLETODATE has wrong date format' ERRORDESC, 
    PRICEAPPLICABLETODATE ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    PRICEAPPLICABLETODATE IS NOT NULL AND ISDATE(PRICEAPPLICABLETODATE) = 0;





-- Other system checks
-- FROMQUANTITY should not be greater than TOQUANTITY
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    '(FROMQUANTITY, TOQUANTITY)' ERRORCOLUMN, 
    PWCROWID ROWID, 
    6 CATEGORY, 
    'FROMQUANTITY should not be greater than TOQUANTITY' ERRORDESC, 
    CONCAT('(', FROMQUANTITY, ', ', TOQUANTITY, ')') ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    TRY_CAST(FROMQUANTITY AS float) IS NOT NULL AND
    TRY_CAST(TOQUANTITY AS float) IS NOT NULL AND
    TRY_CAST(TOQUANTITY AS float) < TRY_CAST(FROMQUANTITY AS float);

-- PRICEAPPLICABLEFROMDATE should not be greater than PRICEAPPLICABLETODATE
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    '(PRICEAPPLICABLEFROMDATE, PRICEAPPLICABLETODATE)' ERRORCOLUMN, 
    PWCROWID ROWID, 
    6 CATEGORY, 
    'PRICEAPPLICABLEFROMDATE should not be greater than PRICEAPPLICABLETODATE' ERRORDESC, 
    CONCAT('(', PRICEAPPLICABLEFROMDATE, ', ', PRICEAPPLICABLETODATE, ')') ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    PRICEAPPLICABLEFROMDATE IS NOT NULL AND
    PRICEAPPLICABLETODATE IS NOT NULL AND
    PRICEAPPLICABLEFROMDATE > PRICEAPPLICABLETODATE;





-- Mandatory functional checks
-- PRICE should neither be NULL or 0
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    'PRICE' ERRORCOLUMN, 
    PWCROWID ROWID, 
    10 CATEGORY, 
    'PRICE should neither be NULL or 0' ERRORDESC, 
    PRICE ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    PRICE = '' OR PRICE IS NULL OR PRICE LIKE '0%' OR PRICE LIKE '0.%';

-- AGREEMENT should neither be NULL or 0
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    'AGREEMENT' ERRORCOLUMN, 
    PWCROWID ROWID, 
    10 CATEGORY, 
    'AGREEMENT should neither be NULL or 0' ERRORDESC, 
    AGREEMENT ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    AGREEMENT = '' OR AGREEMENT IS NULL OR AGREEMENT LIKE '0%' OR AGREEMENT LIKE '0.%';





-- Mandatory field missing checks
-- ITEMNUMBER is blank when ITEMCODE is Table
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    'ITEMNUMBER' ERRORCOLUMN, 
    PWCROWID ROWID, 
    1 CATEGORY, 
    'ITEMNUMBER is blank when ITEMCODE is Table' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    (ITEMNUMBER = '' OR ITEMNUMBER IS NULL) AND ITEMCODE LIKE 'T%';

-- TRADEAGREEMENTJOURNALNUMBER is blank
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    'TRADEAGREEMENTJOURNALNUMBER' ERRORCOLUMN, 
    PWCROWID ROWID, 
    1 CATEGORY, 
    'TRADEAGREEMENTJOURNALNUMBER is blank' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    TRADEAGREEMENTJOURNALNUMBER = '' OR TRADEAGREEMENTJOURNALNUMBER IS NULL;

-- LINENUMBER is blank
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    'LINENUMBER' ERRORCOLUMN, 
    PWCROWID ROWID, 
    1 CATEGORY, 
    'LINENUMBER is blank' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    LINENUMBER = '' OR LINENUMBER IS NULL;

-- CUSTOMERACCOUNTNUMBER is blank when ACCOUNTCODE is Table
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    'CUSTOMERACCOUNTNUMBER' ERRORCOLUMN, 
    PWCROWID ROWID, 
    1 CATEGORY, 
    'CUSTOMERACCOUNTNUMBER is blank when ACCOUNTCODE is Table' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    (CUSTOMERACCOUNTNUMBER = '' OR CUSTOMERACCOUNTNUMBER IS NULL) AND ACCOUNTCODE LIKE 'T%';

-- PRICECUSTOMERGROUPCODE is blank when ACCOUNTCODE is GroupID
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    'PRICECUSTOMERGROUPCODE' ERRORCOLUMN, 
    PWCROWID ROWID, 
    1 CATEGORY, 
    'PRICECUSTOMERGROUPCODE is blank when ACCOUNTCODE is GroupID' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    (PRICECUSTOMERGROUPCODE = '' OR PRICECUSTOMERGROUPCODE IS NULL) AND ACCOUNTCODE LIKE 'G%';







-- Business reqd fields missing
-- QUANTITYUNITSYMBOL is blank
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    'QUANTITYUNITSYMBOL' ERRORCOLUMN, 
    PWCROWID ROWID, 
    1 CATEGORY, 
    'QUANTITYUNITSYMBOL is blank' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    QUANTITYUNITSYMBOL = '' OR QUANTITYUNITSYMBOL IS NULL;

-- PRICECURRENCYCODE is blank
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    'PRICECURRENCYCODE' ERRORCOLUMN, 
    PWCROWID ROWID, 
    1 CATEGORY, 
    'PRICECURRENCYCODE is blank' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    PRICECURRENCYCODE = '' OR PRICECURRENCYCODE IS NULL;

-- ACCOUNTCODE is blank
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    'ACCOUNTCODE' ERRORCOLUMN, 
    PWCROWID ROWID, 
    1 CATEGORY, 
    'ACCOUNTCODE is blank' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    ACCOUNTCODE = '' OR ACCOUNTCODE IS NULL;

-- ITEMCODE is blank
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    'ITEMCODE' ERRORCOLUMN, 
    PWCROWID ROWID, 
    1 CATEGORY, 
    'ITEMCODE is blank' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    ITEMCODE = '' OR ITEMCODE IS NULL;






-- Duplicate occurrence:
-- TRADEAGREEMENTJOURNALNUMBER, LINENUMBER, DATAAREAID has duplicates
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    '(TRADEAGREEMENTJOURNALNUMBER, LINENUMBER, DATAAREAID)' ERRORCOLUMN, 
    PWCROWID ROWID, 
    3 CATEGORY, 
    CASE 
        WHEN LEN(TRADEAGREEMENTJOURNALNUMBER) > 20 THEN 
            'TRADEAGREEMENTJOURNALNUMBER, LINENUMBER has duplicate values upon truncation in ' + DATAAREAID
        ELSE 
            'TRADEAGREEMENTJOURNALNUMBER, LINENUMBER has duplicate values in ' + DATAAREAID
    END ERRORDESC, 
    CONCAT('(', TRADEAGREEMENTJOURNALNUMBER, ', ', LINENUMBER, ')') ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    CONCAT(LEFT(TRADEAGREEMENTJOURNALNUMBER, 20), LINENUMBER, DATAAREAID) IN (
    SELECT CONCAT(LEFT(TRADEAGREEMENTJOURNALNUMBER, 20), LINENUMBER, DATAAREAID) 
    FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity
    GROUP BY LEFT(TRADEAGREEMENTJOURNALNUMBER, 20), LINENUMBER, DATAAREAID 
    HAVING COUNT(*) > 1
);








-- Invalid Enum values
-- ACCOUNTCODE enum has invalid enum values
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    'ACCOUNTCODE' ERRORCOLUMN, 
    PWCROWID ROWID, 
    2 CATEGORY, 
    'ACCOUNTCODE enum has invalid enum values' ERRORDESC, 
    ACCOUNTCODE ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    ACCOUNTCODE IS NOT NULL AND ACCOUNTCODE NOT IN (
        SELECT MEMBERNAME 
        FROM RETAILENUMVALUETABLE 
        WHERE ENUMNAME LIKE 'AssetLeasePostingAccountCode'
    ) AND ACCOUNTCODE IS NOT NULL AND ACCOUNTCODE NOT LIKE 'GROUP%';

-- ITEMCODE enum has invalid enum values
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
    'ITEMCODE' ERRORCOLUMN, 
    PWCROWID ROWID, 
    2 CATEGORY, 
    'ITEMCODE enum has invalid enum values' ERRORDESC, 
    ITEMCODE ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
WHERE 
    ITEMCODE IS NOT NULL AND ITEMCODE NOT IN (
        SELECT MEMBERNAME 
        FROM RETAILENUMVALUETABLE 
        WHERE ENUMNAME LIKE 'PriceDiscProductCodeType'
    );





-- Invalid submaster reference
-- ITEMNUMBER validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.ITEMNUMBER) = 0 THEN 'ITEMNUMBER'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'ITEMNUMBER,[PWC_T_EcoResReleasedProductV2Entity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.ITEMNUMBER) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.ITEMNUMBER) = 0 THEN 'ITEMNUMBER is not present in ITEMNUMBER of PWC_T_EcoResReleasedProductV2Entity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_EcoResReleasedProductV2Entity has error(s) in corresponding ITEMNUMBER'
        END ERRORDESC,
        A.ITEMNUMBER ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
    LEFT JOIN PWC_T_EcoResReleasedProductV2Entity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(A.DATAAREAID) = 'GLOBAL' OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.ITEMNUMBER = B.ITEMNUMBER
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_EcoResReleasedProductV2Entity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.ITEMNUMBER IS NOT NULL AND A.ITEMNUMBER != ''
    GROUP BY A.PWCROWID, A.ITEMNUMBER, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- PRICESITEID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.SITEID) = 0 THEN 'PRICESITEID'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PRICESITEID,[PWC_T_InventOperationalSiteV2Entity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.SITEID) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.SITEID) = 0 THEN 'PRICESITEID is not present in SITEID of PWC_T_InventOperationalSiteV2Entity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_InventOperationalSiteV2Entity has error(s) in corresponding SITEID'
        END ERRORDESC,
        A.PRICESITEID ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
    LEFT JOIN PWC_T_InventOperationalSiteV2Entity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(A.DATAAREAID) = 'GLOBAL' OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.PRICESITEID = B.SITEID
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_InventOperationalSiteV2Entity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.PRICESITEID IS NOT NULL AND A.PRICESITEID != ''
    GROUP BY A.PWCROWID, A.PRICESITEID, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- PRICEWAREHOUSEID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.WAREHOUSEID) = 0 THEN 'PRICEWAREHOUSEID'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PRICEWAREHOUSEID,[PWC_T_InventWarehouseEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.WAREHOUSEID) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.WAREHOUSEID) = 0 THEN 'PRICEWAREHOUSEID is not present in WAREHOUSEID of PWC_T_InventWarehouseEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_InventWarehouseEntity has error(s) in corresponding WAREHOUSEID'
        END ERRORDESC,
        A.PRICEWAREHOUSEID ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
    LEFT JOIN PWC_T_InventWarehouseEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(A.DATAAREAID) = 'GLOBAL' OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.PRICEWAREHOUSEID = B.WAREHOUSEID
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_InventWarehouseEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.PRICEWAREHOUSEID IS NOT NULL AND A.PRICEWAREHOUSEID != ''
    GROUP BY A.PWCROWID, A.PRICEWAREHOUSEID, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- QUANTITYUNITSYMBOL validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.UnitSymbol) = 0 THEN 'QUANTITYUNITSYMBOL'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'QUANTITYUNITSYMBOL,[PWC_T_UnitOfMeasureEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.UnitSymbol) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.UnitSymbol) = 0 THEN 'QUANTITYUNITSYMBOL is not present in UnitSymbol of PWC_T_UnitOfMeasureEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_UnitOfMeasureEntity has error(s) in corresponding UnitSymbol'
        END ERRORDESC,
        A.QUANTITYUNITSYMBOL ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
    LEFT JOIN PWC_T_UnitOfMeasureEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(A.DATAAREAID) = 'GLOBAL' OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.QUANTITYUNITSYMBOL = B.UnitSymbol
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_UnitOfMeasureEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.QUANTITYUNITSYMBOL IS NOT NULL AND A.QUANTITYUNITSYMBOL != ''
    GROUP BY A.PWCROWID, A.QUANTITYUNITSYMBOL, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- PRICECURRENCYCODE validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.CURRENCYCODE) = 0 THEN 'PRICECURRENCYCODE'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PRICECURRENCYCODE,[PWC_T_CurrencyEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.CURRENCYCODE) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.CURRENCYCODE) = 0 THEN 'PRICECURRENCYCODE is not present in CURRENCYCODE of PWC_T_CurrencyEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_CurrencyEntity has error(s) in corresponding CURRENCYCODE'
        END ERRORDESC,
        A.PRICECURRENCYCODE ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
    LEFT JOIN PWC_T_CurrencyEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(A.DATAAREAID) = 'GLOBAL' OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.PRICECURRENCYCODE = B.CURRENCYCODE
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_CurrencyEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.PRICECURRENCYCODE IS NOT NULL AND A.PRICECURRENCYCODE != ''
    GROUP BY A.PWCROWID, A.PRICECURRENCYCODE, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- CUSTOMERACCOUNTNUMBER validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.CUSTOMERACCOUNT) = 0 THEN 'CUSTOMERACCOUNTNUMBER'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'CUSTOMERACCOUNTNUMBER,[PWC_T_CustCustomerV3Entity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.CUSTOMERACCOUNT) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.CUSTOMERACCOUNT) = 0 THEN 'CUSTOMERACCOUNTNUMBER is not present in CUSTOMERACCOUNT of PWC_T_CustCustomerV3Entity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_CustCustomerV3Entity has error(s) in corresponding CUSTOMERACCOUNT'
        END ERRORDESC,
        A.CUSTOMERACCOUNTNUMBER ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
    LEFT JOIN PWC_T_CustCustomerV3Entity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(A.DATAAREAID) = 'GLOBAL' OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.CUSTOMERACCOUNTNUMBER = B.CUSTOMERACCOUNT
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_CustCustomerV3Entity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.CUSTOMERACCOUNTNUMBER IS NOT NULL AND A.CUSTOMERACCOUNTNUMBER != ''
    GROUP BY A.PWCROWID, A.CUSTOMERACCOUNTNUMBER, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- TRADEAGREEMENTJOURNALNUMBER validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.JOURNALNUMBER) = 0 THEN 'TRADEAGREEMENTJOURNALNUMBER'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'TRADEAGREEMENTJOURNALNUMBER,[PWC_T_TradeOpenTradeAgreementJournalHeaderV2Entity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.JOURNALNUMBER) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.JOURNALNUMBER) = 0 THEN 'TRADEAGREEMENTJOURNALNUMBER is not present in JOURNALNUMBER of PWC_T_TradeOpenTradeAgreementJournalHeaderV2Entity where DEFAULTTRADEAGREEMENTTYPE is like PriceSales'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_TradeOpenTradeAgreementJournalHeaderV2Entity has error(s) in corresponding JOURNALNUMBER'
        END ERRORDESC,
        A.TRADEAGREEMENTJOURNALNUMBER ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
    LEFT JOIN PWC_T_TradeOpenTradeAgreementJournalHeaderV2Entity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(A.DATAAREAID) = 'GLOBAL' OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.TRADEAGREEMENTJOURNALNUMBER = B.JOURNALNUMBER AND B.DEFAULTTRADEAGREEMENTTYPE LIKE '%SAL%'
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_TradeOpenTradeAgreementJournalHeaderV2Entity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.TRADEAGREEMENTJOURNALNUMBER IS NOT NULL AND A.TRADEAGREEMENTJOURNALNUMBER != ''
    GROUP BY A.PWCROWID, A.TRADEAGREEMENTJOURNALNUMBER, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- QUANTITYUNITSYMBOL, ITEMNUMBER validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.SALESUNITSYMBOL) = 0 THEN '(QUANTITYUNITSYMBOL, ITEMNUMBER)'
            WHEN COUNT(E.CATEGORY) <> 0 THEN '(QUANTITYUNITSYMBOL, ITEMNUMBER),[PWC_T_EcoResReleasedProductV2Entity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.SALESUNITSYMBOL) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.SALESUNITSYMBOL) = 0 THEN 'QUANTITYUNITSYMBOL, ITEMNUMBER is not present in SALESUNITSYMBOL, ITEMNUMBER of PWC_T_EcoResReleasedProductV2Entity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_EcoResReleasedProductV2Entity has error(s) in corresponding SALESUNITSYMBOL, ITEMNUMBER'
        END ERRORDESC,
        CONCAT('(', A.QUANTITYUNITSYMBOL, ',', A.ITEMNUMBER, ')') ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
    LEFT JOIN PWC_T_EcoResReleasedProductV2Entity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(A.DATAAREAID) = 'GLOBAL' OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.QUANTITYUNITSYMBOL = B.SALESUNITSYMBOL AND A.ITEMNUMBER = B.ITEMNUMBER
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_EcoResReleasedProductV2Entity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.QUANTITYUNITSYMBOL IS NOT NULL AND A.QUANTITYUNITSYMBOL != '' AND
        A.ITEMNUMBER IS NOT NULL AND A.ITEMNUMBER != ''
    GROUP BY A.PWCROWID, A.QUANTITYUNITSYMBOL, A.ITEMNUMBER, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- PRICEWAREHOUSEID, PRICESITEID, DATAAREAID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_SalesOpenSalesPriceJournalLineV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.WAREHOUSEID) = 0 THEN '(PRICEWAREHOUSEID, PRICESITEID, DATAAREAID)'
            WHEN COUNT(E.CATEGORY) <> 0 THEN '(PRICEWAREHOUSEID, PRICESITEID, DATAAREAID),[PWC_T_InventWarehouseEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.WAREHOUSEID) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.WAREHOUSEID) = 0 THEN 'PRICEWAREHOUSEID, PRICESITEID, DATAAREAID is not present in WAREHOUSEID, OPERATIONALSITEID, DATAAREAID of PWC_T_InventWarehouseEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_InventWarehouseEntity has error(s) in corresponding WAREHOUSEID, OPERATIONALSITEID, DATAAREAID'
        END ERRORDESC,
        CONCAT('(', A.PRICEWAREHOUSEID, ',', A.PRICESITEID, ',', A.DATAAREAID, ')') ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_SalesOpenSalesPriceJournalLineV2Entity A
    LEFT JOIN PWC_T_InventWarehouseEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(A.DATAAREAID) = 'GLOBAL' OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.PRICEWAREHOUSEID = B.WAREHOUSEID AND A.PRICESITEID = B.OPERATIONALSITEID AND A.DATAAREAID = B.DATAAREAID
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_InventWarehouseEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.PRICEWAREHOUSEID IS NOT NULL AND A.PRICEWAREHOUSEID != '' AND
        A.PRICESITEID IS NOT NULL AND A.PRICESITEID != '' AND
        A.DATAAREAID IS NOT NULL AND A.DATAAREAID != ''
    GROUP BY A.PWCROWID, A.PRICEWAREHOUSEID, A.PRICESITEID, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;





EXEC PWC_SP_CALCULATESUCCESSFULCOUNT @TableName = 'PWC_T_SalesOpenSalesPriceJournalLineV2Entity'
END
