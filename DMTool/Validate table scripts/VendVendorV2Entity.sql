CREATE OR ALTER PROCEDURE PWC_SP_Validate_VendVendorV2Entity
AS
BEGIN


-- Mandatory fields missing
    -- VENDORACCOUNTNUMBER is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'VENDORACCOUNTNUMBER' ERRORCOLUMN, 
        PWCROWID ROWID, 
        1 CATEGORY, 
        'VENDORACCOUNTNUMBER is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE VENDORACCOUNTNUMBER = '' OR VENDORACCOUNTNUMBER IS NULL;

    -- VENDORGROUPID is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'VENDORGROUPID' ERRORCOLUMN, 
        PWCROWID ROWID, 
        1 CATEGORY, 
        'VENDORGROUPID is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE VENDORGROUPID = '' OR VENDORGROUPID IS NULL;

    -- CURRENCYCODE is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'CURRENCYCODE' ERRORCOLUMN, 
        PWCROWID ROWID, 
        1 CATEGORY, 
        'CURRENCYCODE is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE CURRENCYCODE = '' OR CURRENCYCODE IS NULL;

    -- VENDORORGANIZATIONNAME is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'VENDORORGANIZATIONNAME' ERRORCOLUMN, 
        PWCROWID ROWID, 
        1 CATEGORY, 
        'VENDORORGANIZATIONNAME is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE VENDORORGANIZATIONNAME = '' OR VENDORORGANIZATIONNAME IS NULL;

    -- VENDORPARTYTYPE is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'VENDORPARTYTYPE' ERRORCOLUMN, 
        PWCROWID ROWID, 
        1 CATEGORY, 
        'VENDORPARTYTYPE is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE VENDORPARTYTYPE = '' OR VENDORPARTYTYPE IS NULL;




-- Functionally reqd fields missing
    -- ORGANIZATIONABCCODE is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'ORGANIZATIONABCCODE' ERRORCOLUMN, 
        PWCROWID ROWID, 
        8 CATEGORY, 
        'ORGANIZATIONABCCODE is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE ORGANIZATIONABCCODE = '' OR ORGANIZATIONABCCODE IS NULL;

    -- ADDRESSCITY is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'ADDRESSCITY' ERRORCOLUMN, 
        PWCROWID ROWID, 
        8 CATEGORY, 
        'ADDRESSCITY is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE ADDRESSCITY = '' OR ADDRESSCITY IS NULL;

    -- ADDRESSCOUNTRYREGIONID is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'ADDRESSCOUNTRYREGIONID' ERRORCOLUMN, 
        PWCROWID ROWID, 
        8 CATEGORY, 
        'ADDRESSCOUNTRYREGIONID is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE ADDRESSCOUNTRYREGIONID = '' OR ADDRESSCOUNTRYREGIONID IS NULL;




-- Other system checks
    -- CREDITLIMIT is not a real number
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'CREDITLIMIT' ERRORCOLUMN, 
        PWCROWID ROWID, 
        2 CATEGORY, 
        'CREDITLIMIT is not a real number' ERRORDESC, 
        CREDITLIMIT ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE CREDITLIMIT IS NOT NULL AND CREDITLIMIT LIKE '%[^0-9.]%';




    -- AREPRICESINCLUDINGSALESTAX has wrong boolean format
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'AREPRICESINCLUDINGSALESTAX' ERRORCOLUMN, 
        PWCROWID ROWID, 
        2 CATEGORY, 
        'AREPRICESINCLUDINGSALESTAX has wrong boolean format' ERRORDESC, 
        AREPRICESINCLUDINGSALESTAX ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE AREPRICESINCLUDINGSALESTAX IS NOT NULL AND LOWER(AREPRICESINCLUDINGSALESTAX) NOT IN ('yes', 'no');

    -- ISWITHHOLDINGTAXCALCULATED has wrong boolean format
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'ISWITHHOLDINGTAXCALCULATED' ERRORCOLUMN, 
        PWCROWID ROWID, 
        2 CATEGORY, 
        'ISWITHHOLDINGTAXCALCULATED has wrong boolean format' ERRORDESC, 
        ISWITHHOLDINGTAXCALCULATED ERRORVALUE,
		A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE ISWITHHOLDINGTAXCALCULATED IS NOT NULL AND LOWER(ISWITHHOLDINGTAXCALCULATED) NOT IN ('yes', 'no');

    -- ISFOREIGNENTITY has wrong boolean format
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'ISFOREIGNENTITY' ERRORCOLUMN, 
        PWCROWID ROWID, 
        2 CATEGORY, 
        'ISFOREIGNENTITY has wrong boolean format' ERRORDESC, 
        ISFOREIGNENTITY ERRORVALUE,
		A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE ISFOREIGNENTITY IS NOT NULL AND LOWER(ISFOREIGNENTITY) NOT IN ('yes', 'no');










-- Other system checks
    -- VENDORPARTYTYPE is neither ORGANIZATION nor PERSON
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'VENDORPARTYTYPE' ERRORCOLUMN, 
        PWCROWID ROWID, 
        6 CATEGORY, 
        'VENDORPARTYTYPE is neither ORGANIZATION nor PERSON' ERRORDESC, 
        VENDORPARTYTYPE ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE VENDORPARTYTYPE IS NOT NULL AND LOWER(VENDORPARTYTYPE) NOT IN ('organization', 'person');




-- Invalid Enum values
    -- ONHOLDSTATUS has invalid enum values
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'ONHOLDSTATUS' ERRORCOLUMN, 
        PWCROWID ROWID, 
        2 CATEGORY, 
        'ONHOLDSTATUS has invalid enum values' ERRORDESC, 
        ONHOLDSTATUS ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE ONHOLDSTATUS IS NOT NULL AND ONHOLDSTATUS NOT IN
          (SELECT MEMBERNAME FROM RETAILENUMVALUETABLE WHERE ENUMNAME LIKE 'CustVendorBlocked');

    -- ORGANIZATIONABCCODE has invalid enum values
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'ORGANIZATIONABCCODE' ERRORCOLUMN, 
        PWCROWID ROWID, 
        2 CATEGORY, 
        'ORGANIZATIONABCCODE has invalid enum values' ERRORDESC, 
        ORGANIZATIONABCCODE ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE ORGANIZATIONABCCODE IS NOT NULL AND ORGANIZATIONABCCODE NOT IN
          (SELECT MEMBERNAME FROM RETAILENUMVALUETABLE WHERE ENUMNAME LIKE 'ABC');



-- Duplicate occurrence:
-- VENDORACCOUNTNUMBER has duplicate values
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_VendVendorV2Entity' TABLEID, 
    'VENDORACCOUNTNUMBER' ERRORCOLUMN, 
    PWCROWID ROWID, 
    3 CATEGORY, 
    CASE 
        WHEN LEN(VENDORACCOUNTNUMBER) > 20 THEN 
            'VENDORACCOUNTNUMBER has duplicate values upon truncation'
        ELSE 
            'VENDORACCOUNTNUMBER has duplicate values'
    END ERRORDESC, 
    VENDORACCOUNTNUMBER ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorV2Entity A
WHERE 
    CONCAT(LEFT(VENDORACCOUNTNUMBER, 20), DATAAREAID) IN (
    SELECT CONCAT(LEFT(VENDORACCOUNTNUMBER, 20), DATAAREAID) 
    FROM PWC_T_VendVendorV2Entity
    GROUP BY LEFT(VENDORACCOUNTNUMBER, 20), DATAAREAID 
    HAVING COUNT(*) > 1
);





-- ADDRESSCOUNTRYREGIONID, ADDRESSCITY, ADDRESSSTATEID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_VendVendorV2Entity' TABLEID, 
    CASE 
        WHEN STRING_AGG(B.COUNTRYREGIONID, ', ') IS NULL THEN '(ADDRESSCOUNTRYREGIONID, ADDRESSCITY, ADDRESSSTATEID)'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN '(ADDRESSCOUNTRYREGIONID, ADDRESSCITY, ADDRESSSTATEID),[PWC_T_LogisticsAddressCityEntity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN STRING_AGG(B.COUNTRYREGIONID, ', ') IS NULL THEN 4
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 5
    END CATEGORY, 
    CASE 
        WHEN STRING_AGG(B.COUNTRYREGIONID, ', ') IS NULL THEN 'ADDRESSCOUNTRYREGIONID, ADDRESSCITY, ADDRESSSTATEID is not present in COUNTRYREGIONID, NAME, STATEID of PWC_T_LogisticsAddressCityEntity'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'PWC_T_LogisticsAddressCityEntity has error(s) in corresponding COUNTRYREGIONID, NAME, STATEID'
    END ERRORDESC, 
    CONCAT('(', A.ADDRESSCOUNTRYREGIONID, ',', A.ADDRESSCITY, ',', A.ADDRESSSTATEID, ')') ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorV2Entity A
LEFT JOIN PWC_T_LogisticsAddressCityEntity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.ADDRESSCOUNTRYREGIONID = B.COUNTRYREGIONID AND A.ADDRESSCITY = B.NAME AND A.ADDRESSSTATEID = B.STATEID
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_LogisticsAddressCityEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.ADDRESSCOUNTRYREGIONID IS NOT NULL AND A.ADDRESSCOUNTRYREGIONID != '' AND
    A.ADDRESSCITY IS NOT NULL AND A.ADDRESSCITY != '' AND
    A.ADDRESSSTATEID IS NOT NULL AND A.ADDRESSSTATEID != ''
GROUP BY TABLEID, A.PWCROWID, A.ADDRESSCOUNTRYREGIONID, A.ADDRESSCITY, A.ADDRESSSTATEID, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;

-- ADDRESSCITY validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_VendVendorV2Entity' TABLEID, 
    CASE 
        WHEN STRING_AGG(B.NAME, ', ') IS NULL THEN 'ADDRESSCITY'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'ADDRESSCITY,[PWC_T_LogisticsAddressCityEntity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN STRING_AGG(B.NAME, ', ') IS NULL THEN 4
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 5
    END CATEGORY, 
    CASE 
        WHEN STRING_AGG(B.NAME, ', ') IS NULL THEN 'ADDRESSCITY is not present in NAME of PWC_T_LogisticsAddressCityEntity'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'PWC_T_LogisticsAddressCityEntity has error(s) in corresponding NAME'
    END ERRORDESC, 
    A.ADDRESSCITY ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorV2Entity A
LEFT JOIN PWC_T_LogisticsAddressCityEntity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.ADDRESSCITY = B.NAME
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_LogisticsAddressCityEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.ADDRESSCITY IS NOT NULL AND A.ADDRESSCITY != ''
GROUP BY TABLEID, A.PWCROWID, A.ADDRESSCITY, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;

-- ADDRESSCOUNTRYREGIONID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_VendVendorV2Entity' TABLEID, 
    CASE 
        WHEN STRING_AGG(B.COUNTRYREGION, ', ') IS NULL THEN 'ADDRESSCOUNTRYREGIONID'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'ADDRESSCOUNTRYREGIONID,[PWC_T_LogisticsAddressCountryRegionEntity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN STRING_AGG(B.COUNTRYREGION, ', ') IS NULL THEN 4
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 5
    END CATEGORY, 
    CASE 
        WHEN STRING_AGG(B.COUNTRYREGION, ', ') IS NULL THEN 'ADDRESSCOUNTRYREGIONID is not present in COUNTRYREGION of PWC_T_LogisticsAddressCountryRegionEntity'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'PWC_T_LogisticsAddressCountryRegionEntity has error(s) in corresponding COUNTRYREGION'
    END ERRORDESC, 
    A.ADDRESSCOUNTRYREGIONID ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorV2Entity A
LEFT JOIN PWC_T_LogisticsAddressCountryRegionEntity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.ADDRESSCOUNTRYREGIONID = B.COUNTRYREGION
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_LogisticsAddressCountryRegionEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.ADDRESSCOUNTRYREGIONID IS NOT NULL AND A.ADDRESSCOUNTRYREGIONID != ''
GROUP BY TABLEID, A.PWCROWID, A.ADDRESSCOUNTRYREGIONID, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;

-- ADDRESSSTATEID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_VendVendorV2Entity' TABLEID, 
    CASE 
        WHEN STRING_AGG(B.STATE, ', ') IS NULL THEN 'ADDRESSSTATEID'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'ADDRESSSTATEID,[PWC_T_LogisticsAddressStateEntity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN STRING_AGG(B.STATE, ', ') IS NULL THEN 4
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 5
    END CATEGORY, 
    CASE 
        WHEN STRING_AGG(B.STATE, ', ') IS NULL THEN 'ADDRESSSTATEID is not present in STATE of PWC_T_LogisticsAddressStateEntity'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'PWC_T_LogisticsAddressStateEntity has error(s) in corresponding STATE'
    END ERRORDESC, 
    A.ADDRESSSTATEID ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorV2Entity A
LEFT JOIN PWC_T_LogisticsAddressStateEntity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.ADDRESSSTATEID = B.STATE
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_LogisticsAddressStateEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.ADDRESSSTATEID IS NOT NULL AND A.ADDRESSSTATEID != ''
GROUP BY TABLEID, A.PWCROWID, A.ADDRESSSTATEID, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;

-- CURRENCYCODE validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_VendVendorV2Entity' TABLEID, 
    CASE 
        WHEN STRING_AGG(B.CURRENCYCODE, ', ') IS NULL THEN 'CURRENCYCODE'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'CURRENCYCODE,[PWC_T_CurrencyEntity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN STRING_AGG(B.CURRENCYCODE, ', ') IS NULL THEN 4
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 5
    END CATEGORY, 
    CASE 
        WHEN STRING_AGG(B.CURRENCYCODE, ', ') IS NULL THEN 'CURRENCYCODE is not present in CURRENCYCODE of PWC_T_CurrencyEntity'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'PWC_T_CurrencyEntity has error(s) in corresponding CURRENCYCODE'
    END ERRORDESC, 
    A.CURRENCYCODE ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorV2Entity A
LEFT JOIN PWC_T_CurrencyEntity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.CURRENCYCODE = B.CURRENCYCODE
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_CurrencyEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.CURRENCYCODE IS NOT NULL AND A.CURRENCYCODE != ''
GROUP BY TABLEID, A.PWCROWID, A.CURRENCYCODE, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;

-- DEFAULTDELIVERYMODEID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_VendVendorV2Entity' TABLEID, 
    CASE 
        WHEN STRING_AGG(B.MODECODE, ', ') IS NULL THEN 'DEFAULTDELIVERYMODEID'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'DEFAULTDELIVERYMODEID,[PWC_T_DlvDeliveryModeEntity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN STRING_AGG(B.MODECODE, ', ') IS NULL THEN 4
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 5
    END CATEGORY, 
    CASE 
        WHEN STRING_AGG(B.MODECODE, ', ') IS NULL THEN 'DEFAULTDELIVERYMODEID is not present in MODECODE of PWC_T_DlvDeliveryModeEntity'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'PWC_T_DlvDeliveryModeEntity has error(s) in corresponding MODECODE'
    END ERRORDESC, 
    A.DEFAULTDELIVERYMODEID ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorV2Entity A
LEFT JOIN PWC_T_DlvDeliveryModeEntity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.DEFAULTDELIVERYMODEID = B.MODECODE
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_DlvDeliveryModeEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.DEFAULTDELIVERYMODEID IS NOT NULL AND A.DEFAULTDELIVERYMODEID != ''
GROUP BY TABLEID, A.PWCROWID, A.DEFAULTDELIVERYMODEID, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;

-- DEFAULTDELIVERYTERMSCODE validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_VendVendorV2Entity' TABLEID, 
    CASE 
        WHEN STRING_AGG(B.TermsCode, ', ') IS NULL THEN 'DEFAULTDELIVERYTERMSCODE'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'DEFAULTDELIVERYTERMSCODE,[PWC_T_DeliveryTermsEntity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN STRING_AGG(B.TermsCode, ', ') IS NULL THEN 4
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 5
    END CATEGORY, 
    CASE 
        WHEN STRING_AGG(B.TermsCode, ', ') IS NULL THEN 'DEFAULTDELIVERYTERMSCODE is not present in TermsCode of PWC_T_DeliveryTermsEntity'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'PWC_T_DeliveryTermsEntity has error(s) in corresponding TermsCode'
    END ERRORDESC, 
    A.DEFAULTDELIVERYTERMSCODE ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorV2Entity A
LEFT JOIN PWC_T_DeliveryTermsEntity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.DEFAULTDELIVERYTERMSCODE = B.TermsCode
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_DeliveryTermsEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.DEFAULTDELIVERYTERMSCODE IS NOT NULL AND A.DEFAULTDELIVERYTERMSCODE != ''
GROUP BY TABLEID, A.PWCROWID, A.DEFAULTDELIVERYTERMSCODE, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;

-- DEFAULTOFFSETLEDGERACCOUNTDISPLAYVALUE validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_VendVendorV2Entity' TABLEID, 
    CASE 
        WHEN STRING_AGG(B.MAINACCOUNTID, ', ') IS NULL THEN 'DEFAULTOFFSETLEDGERACCOUNTDISPLAYVALUE'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'DEFAULTOFFSETLEDGERACCOUNTDISPLAYVALUE,[PWC_T_MainAccountEntity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN STRING_AGG(B.MAINACCOUNTID, ', ') IS NULL THEN 4
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 5
    END CATEGORY, 
    CASE 
        WHEN STRING_AGG(B.MAINACCOUNTID, ', ') IS NULL THEN 'DEFAULTOFFSETLEDGERACCOUNTDISPLAYVALUE is not present in MAINACCOUNTID of PWC_T_MainAccountEntity'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'PWC_T_MainAccountEntity has error(s) in corresponding MAINACCOUNTID'
    END ERRORDESC, 
    A.DEFAULTOFFSETLEDGERACCOUNTDISPLAYVALUE ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorV2Entity A
LEFT JOIN PWC_T_MainAccountEntity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.DEFAULTOFFSETLEDGERACCOUNTDISPLAYVALUE = B.MAINACCOUNTID
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_MainAccountEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.DEFAULTOFFSETLEDGERACCOUNTDISPLAYVALUE IS NOT NULL AND A.DEFAULTOFFSETLEDGERACCOUNTDISPLAYVALUE != ''
GROUP BY TABLEID, A.PWCROWID, A.DEFAULTOFFSETLEDGERACCOUNTDISPLAYVALUE, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;

-- DEFAULTPAYMENTTERMSNAME validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_VendVendorV2Entity' TABLEID, 
    CASE 
        WHEN STRING_AGG(B.NAME, ', ') IS NULL THEN 'DEFAULTPAYMENTTERMSNAME'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'DEFAULTPAYMENTTERMSNAME,[PWC_T_PaymentTermEntity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN STRING_AGG(B.NAME, ', ') IS NULL THEN 4
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 5
    END CATEGORY, 
    CASE 
        WHEN STRING_AGG(B.NAME, ', ') IS NULL THEN 'DEFAULTPAYMENTTERMSNAME is not present in NAME of PWC_T_PaymentTermEntity'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'PWC_T_PaymentTermEntity has error(s) in corresponding NAME'
    END ERRORDESC, 
    A.DEFAULTPAYMENTTERMSNAME ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorV2Entity A
LEFT JOIN PWC_T_PaymentTermEntity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.DEFAULTPAYMENTTERMSNAME = B.NAME
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_PaymentTermEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.DEFAULTPAYMENTTERMSNAME IS NOT NULL AND A.DEFAULTPAYMENTTERMSNAME != ''
GROUP BY TABLEID, A.PWCROWID, A.DEFAULTPAYMENTTERMSNAME, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;

-- DEFAULTVENDORPAYMENTMETHODNAME validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_VendVendorV2Entity' TABLEID, 
    CASE 
        WHEN STRING_AGG(B.NAME, ', ') IS NULL THEN 'DEFAULTVENDORPAYMENTMETHODNAME'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'DEFAULTVENDORPAYMENTMETHODNAME,[PWC_T_VendorPaymentMethodEntity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN STRING_AGG(B.NAME, ', ') IS NULL THEN 4
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 5
    END CATEGORY, 
    CASE 
        WHEN STRING_AGG(B.NAME, ', ') IS NULL THEN 'DEFAULTVENDORPAYMENTMETHODNAME is not present in NAME of PWC_T_VendorPaymentMethodEntity'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'PWC_T_VendorPaymentMethodEntity has error(s) in corresponding NAME'
    END ERRORDESC, 
    A.DEFAULTVENDORPAYMENTMETHODNAME ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorV2Entity A
LEFT JOIN PWC_T_VendorPaymentMethodEntity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL' OR A.DATAAREAID = 'GLOBAL') AND A.DEFAULTVENDORPAYMENTMETHODNAME = B.NAME
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_VendorPaymentMethodEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.DEFAULTVENDORPAYMENTMETHODNAME IS NOT NULL AND A.DEFAULTVENDORPAYMENTMETHODNAME != ''
GROUP BY TABLEID, A.PWCROWID, A.DEFAULTVENDORPAYMENTMETHODNAME, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;

-- INVOICEVENDORACCOUNTNUMBER validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_VendVendorV2Entity' TABLEID, 
    CASE 
        WHEN STRING_AGG(B.VENDORACCOUNTNUMBER, ', ') IS NULL THEN 'INVOICEVENDORACCOUNTNUMBER'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'INVOICEVENDORACCOUNTNUMBER,[PWC_T_VendVendorV2Entity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN STRING_AGG(B.VENDORACCOUNTNUMBER, ', ') IS NULL THEN 4
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 5
    END CATEGORY, 
    CASE 
        WHEN STRING_AGG(B.VENDORACCOUNTNUMBER, ', ') IS NULL THEN 'INVOICEVENDORACCOUNTNUMBER is not present in VENDORACCOUNTNUMBER of PWC_T_VendVendorV2Entity'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'PWC_T_VendVendorV2Entity has error(s) in corresponding VENDORACCOUNTNUMBER'
    END ERRORDESC,
    A.INVOICEVENDORACCOUNTNUMBER ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorV2Entity A
LEFT JOIN PWC_T_VendVendorV2Entity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.INVOICEVENDORACCOUNTNUMBER = B.VENDORACCOUNTNUMBER
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_VendVendorV2Entity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.INVOICEVENDORACCOUNTNUMBER IS NOT NULL AND A.INVOICEVENDORACCOUNTNUMBER != ''
GROUP BY TABLEID, A.PWCROWID, A.INVOICEVENDORACCOUNTNUMBER, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;

-- SALESTAXGROUPCODE validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_VendVendorV2Entity' TABLEID, 
    CASE 
        WHEN STRING_AGG(B.TAXGROUPCODE, ', ') IS NULL THEN 'SALESTAXGROUPCODE'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'SALESTAXGROUPCODE,[PWC_T_TaxGroupEntity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN STRING_AGG(B.TAXGROUPCODE, ', ') IS NULL THEN 4
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 5
    END CATEGORY, 
    CASE 
        WHEN STRING_AGG(B.TAXGROUPCODE, ', ') IS NULL THEN 'SALESTAXGROUPCODE is not present in TAXGROUPCODE of PWC_T_TaxGroupEntity'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'PWC_T_TaxGroupEntity has error(s) in corresponding TAXGROUPCODE'
    END ERRORDESC,
    A.SALESTAXGROUPCODE ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorV2Entity A
LEFT JOIN PWC_T_TaxGroupEntity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.SALESTAXGROUPCODE = B.TAXGROUPCODE
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_TaxGroupEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.SALESTAXGROUPCODE IS NOT NULL AND A.SALESTAXGROUPCODE != ''
GROUP BY TABLEID, A.PWCROWID, A.SALESTAXGROUPCODE, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;

-- VENDORGROUPID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_VendVendorV2Entity' TABLEID, 
    CASE 
        WHEN STRING_AGG(B.VENDORGROUPID, ', ') IS NULL THEN 'VENDORGROUPID'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'VENDORGROUPID,[PWC_T_VendVendorGroupEntity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN STRING_AGG(B.VENDORGROUPID, ', ') IS NULL THEN 4
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 5
    END CATEGORY, 
    CASE 
        WHEN STRING_AGG(B.VENDORGROUPID, ', ') IS NULL THEN 'VENDORGROUPID is not present in VENDORGROUPID of PWC_T_VendVendorGroupEntity'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'PWC_T_VendVendorGroupEntity has error(s) in corresponding VENDORGROUPID'
    END ERRORDESC,
    A.VENDORGROUPID ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorV2Entity A
LEFT JOIN PWC_T_VendVendorGroupEntity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.VENDORGROUPID = B.VENDORGROUPID
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_VendVendorGroupEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.VENDORGROUPID IS NOT NULL AND A.VENDORGROUPID != ''
GROUP BY TABLEID, A.PWCROWID, A.VENDORGROUPID, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;

-- BANKACCOUNTID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_VendVendorV2Entity' TABLEID, 
    CASE 
        WHEN STRING_AGG(B.VENDORBANKACCOUNTID, ', ') IS NULL THEN 'BANKACCOUNTID'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'BANKACCOUNTID,[PWC_T_VendVendorBankAccountEntity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN STRING_AGG(B.VENDORBANKACCOUNTID, ', ') IS NULL THEN 4
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 5
    END CATEGORY, 
    CASE 
        WHEN STRING_AGG(B.VENDORBANKACCOUNTID, ', ') IS NULL THEN 'BANKACCOUNTID is not present in VENDORBANKACCOUNTID of PWC_T_VendVendorBankAccountEntity'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'PWC_T_VendVendorBankAccountEntity has error(s) in corresponding VENDORBANKACCOUNTID'
    END ERRORDESC,
    A.BANKACCOUNTID ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorV2Entity A
LEFT JOIN PWC_T_VendVendorBankAccountEntity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL' OR A.DATAAREAID = 'GLOBAL') AND A.BANKACCOUNTID = B.VENDORBANKACCOUNTID
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_VendVendorBankAccountEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.BANKACCOUNTID IS NOT NULL AND A.BANKACCOUNTID != ''
GROUP BY TABLEID, A.PWCROWID, A.BANKACCOUNTID, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;

-- VENDORACCOUNTNUMBER, BANKACCOUNTID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_VendVendorV2Entity' TABLEID, 
    CASE 
        WHEN STRING_AGG(B.VENDORBANKACCOUNTID, ', ') IS NULL THEN '(VENDORACCOUNTNUMBER, BANKACCOUNTID)'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN '(VENDORACCOUNTNUMBER, BANKACCOUNTID),[PWC_T_VendVendorBankAccountEntity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN STRING_AGG(B.VENDORBANKACCOUNTID, ', ') IS NULL THEN 4
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 5
    END CATEGORY, 
    CASE 
        WHEN STRING_AGG(B.VENDORBANKACCOUNTID, ', ') IS NULL THEN 'VENDORACCOUNTNUMBER, BANKACCOUNTID is not present in VENDORBANKACCOUNTID, VENDORACCOUNTNUMBER of PWC_T_VendVendorBankAccountEntity'
        WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'PWC_T_VendVendorBankAccountEntity has error(s) in corresponding VENDORBANKACCOUNTID, VENDORACCOUNTNUMBER'
    END ERRORDESC,
    CONCAT('(', A.VENDORACCOUNTNUMBER, ',', A.BANKACCOUNTID, ')') ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorV2Entity A
LEFT JOIN PWC_T_VendVendorBankAccountEntity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL' OR A.DATAAREAID = 'GLOBAL') AND A.BANKACCOUNTID = B.VENDORBANKACCOUNTID AND A.VENDORACCOUNTNUMBER = B.VENDORACCOUNTNUMBER
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_VendVendorBankAccountEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.BANKACCOUNTID IS NOT NULL AND A.BANKACCOUNTID != '' AND 
    A.VENDORACCOUNTNUMBER IS NOT NULL AND A.VENDORACCOUNTNUMBER != ''
GROUP BY TABLEID, A.PWCROWID, A.BANKACCOUNTID, A.VENDORACCOUNTNUMBER, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;






-- String length exceeded
    -- VENDORACCOUNTNUMBER exceeds max length 20
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'VENDORACCOUNTNUMBER' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'VENDORACCOUNTNUMBER exceeds max length 20' ERRORDESC, 
        VENDORACCOUNTNUMBER ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE LEN(VENDORACCOUNTNUMBER) > 20;

    -- ADDRESSDESCRIPTION exceeds max length 60
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'ADDRESSDESCRIPTION' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'ADDRESSDESCRIPTION exceeds max length 60' ERRORDESC, 
        ADDRESSDESCRIPTION ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE LEN(ADDRESSDESCRIPTION) > 60;

    -- ADDRESSSTREET exceeds max length 250
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'ADDRESSSTREET' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'ADDRESSSTREET exceeds max length 250' ERRORDESC, 
        ADDRESSSTREET ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE LEN(ADDRESSSTREET) > 250;

    -- PAYMENTSPECIFICATIONID exceeds max length 10
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'PAYMENTSPECIFICATIONID' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'PAYMENTSPECIFICATIONID exceeds max length 10' ERRORDESC, 
        PAYMENTSPECIFICATIONID ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE LEN(PAYMENTSPECIFICATIONID) > 10;

    -- PRIMARYEMAILADDRESS exceeds max length 255
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'PRIMARYEMAILADDRESS' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'PRIMARYEMAILADDRESS exceeds max length 255' ERRORDESC, 
        PRIMARYEMAILADDRESS ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE LEN(PRIMARYEMAILADDRESS) > 255;

    -- PRIMARYEMAILADDRESSDESCRIPTION exceeds max length 60
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'PRIMARYEMAILADDRESSDESCRIPTION' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'PRIMARYEMAILADDRESSDESCRIPTION exceeds max length 60' ERRORDESC, 
        PRIMARYEMAILADDRESSDESCRIPTION ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE LEN(PRIMARYEMAILADDRESSDESCRIPTION) > 60;

    -- PRIMARYEMAILADDRESSPURPOSE exceeds max length 100
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'PRIMARYEMAILADDRESSPURPOSE' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'PRIMARYEMAILADDRESSPURPOSE exceeds max length 100' ERRORDESC, 
        PRIMARYEMAILADDRESSPURPOSE ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE LEN(PRIMARYEMAILADDRESSPURPOSE) > 100;

    -- PRIMARYPHONENUMBER exceeds max length 255
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'PRIMARYPHONENUMBER' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'PRIMARYPHONENUMBER exceeds max length 255' ERRORDESC, 
        PRIMARYPHONENUMBER ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE LEN(PRIMARYPHONENUMBER) > 255;

    -- PRIMARYPHONENUMBERDESCRIPTION exceeds max length 60
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'PRIMARYPHONENUMBERDESCRIPTION' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'PRIMARYPHONENUMBERDESCRIPTION exceeds max length 60' ERRORDESC, 
        PRIMARYPHONENUMBERDESCRIPTION ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE LEN(PRIMARYPHONENUMBERDESCRIPTION) > 60;

    -- PRIMARYPHONENUMBEREXTENSION exceeds max length 10
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'PRIMARYPHONENUMBEREXTENSION' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'PRIMARYPHONENUMBEREXTENSION exceeds max length 10' ERRORDESC, 
        PRIMARYPHONENUMBEREXTENSION ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE LEN(PRIMARYPHONENUMBEREXTENSION) > 10;

    -- PRIMARYPHONENUMBERPURPOSE exceeds max length 100
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'PRIMARYPHONENUMBERPURPOSE' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'PRIMARYPHONENUMBERPURPOSE exceeds max length 100' ERRORDESC, 
        PRIMARYPHONENUMBERPURPOSE ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE LEN(PRIMARYPHONENUMBERPURPOSE) > 100;

    -- VENDORKNOWNASNAME exceeds max length 100
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'VENDORKNOWNASNAME' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'VENDORKNOWNASNAME exceeds max length 100' ERRORDESC, 
        VENDORKNOWNASNAME ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE LEN(VENDORKNOWNASNAME) > 100;

    -- VENDORORGANIZATIONNAME exceeds max length 100
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'VENDORORGANIZATIONNAME' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'VENDORORGANIZATIONNAME exceeds max length 100' ERRORDESC, 
        VENDORORGANIZATIONNAME ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE LEN(VENDORORGANIZATIONNAME) > 100;

    -- VENDORPARTYTYPE exceeds max length 13
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'VENDORPARTYTYPE' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'VENDORPARTYTYPE exceeds max length 13' ERRORDESC, 
        VENDORPARTYTYPE ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE LEN(VENDORPARTYTYPE) > 13;

    -- VENDORSEARCHNAME exceeds max length 20
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'VENDORSEARCHNAME' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'VENDORSEARCHNAME exceeds max length 20' ERRORDESC, 
        VENDORSEARCHNAME ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE LEN(VENDORSEARCHNAME) > 20;

    -- PRIMARYCONTACTPERSONID exceeds max length 20
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'PRIMARYCONTACTPERSONID' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'PRIMARYCONTACTPERSONID exceeds max length 20' ERRORDESC, 
        PRIMARYCONTACTPERSONID ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE LEN(PRIMARYCONTACTPERSONID) > 20;

    -- COMPANYCHAINNAME exceeds max length 20
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'COMPANYCHAINNAME' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'COMPANYCHAINNAME exceeds max length 20' ERRORDESC, 
        COMPANYCHAINNAME ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE LEN(COMPANYCHAINNAME) > 20;

    -- MAINCONTACTPERSONNELNUMBER exceeds max length 25
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'MAINCONTACTPERSONNELNUMBER' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'MAINCONTACTPERSONNELNUMBER exceeds max length 25' ERRORDESC, 
        MAINCONTACTPERSONNELNUMBER ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE LEN(MAINCONTACTPERSONNELNUMBER) > 25;

    -- WITHHOLDINGTAXGROUPCODE exceeds max length 10
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_VendVendorV2Entity' TABLEID, 
        'WITHHOLDINGTAXGROUPCODE' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'WITHHOLDINGTAXGROUPCODE exceeds max length 10' ERRORDESC, 
        WITHHOLDINGTAXGROUPCODE ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_VendVendorV2Entity A
    WHERE LEN(WITHHOLDINGTAXGROUPCODE) > 10;

    -- Calculate successful count
    EXEC PWC_SP_CALCULATESUCCESSFULCOUNT @TableName = 'PWC_T_VendVendorV2Entity';
END;

       



















































