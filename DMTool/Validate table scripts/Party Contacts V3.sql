CREATE OR ALTER PROCEDURE PWC_SP_Validate_DirPartyContactV3Entity
AS
BEGIN

-- Invalid data format
    -- ISPRIMARY has wrong BOOLEAN FORMAT
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_DirPartyContactV3Entity' TABLEID, 
        'ISPRIMARY' ERRORCOLUMN, 
        PWCROWID ROWID, 
        2 CATEGORY, 
        'ISPRIMARY has wrong BOOLEAN FORMAT' ERRORDESC, 
        ISPRIMARY ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_DirPartyContactV3Entity A
    WHERE LOWER(ISPRIMARY) NOT IN ('no', 'yes');


-- Mandatory fields missing
    -- PARTYNUMBER is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_DirPartyContactV3Entity' TABLEID, 
        'PARTYNUMBER' ERRORCOLUMN, 
        PWCROWID ROWID, 
        1 CATEGORY, 
        'PARTYNUMBER is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_DirPartyContactV3Entity A
    WHERE PARTYNUMBER = '' OR PARTYNUMBER IS NULL;

    -- TYPE is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_DirPartyContactV3Entity' TABLEID, 
        'TYPE' ERRORCOLUMN, 
        PWCROWID ROWID, 
        1 CATEGORY, 
        'TYPE is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_DirPartyContactV3Entity A
    WHERE TYPE = '' OR TYPE IS NULL;



-- Duplicate occurence
    -- PARTYNUMBER, TYPE, ISPRIMARY, DATAAREAID has duplicate values
	INSERT INTO PWCERRORTABLE
	SELECT 
		'PWC_T_DirPartyContactV3Entity' TABLEID, 
		'(PARTYNUMBER, TYPE, ISPRIMARY)' ERRORCOLUMN, 
		PWCROWID ROWID, 
		3 CATEGORY, 
		CASE 
			WHEN LEN(PARTYNUMBER) > 40 THEN 
				'PARTYNUMBER, TYPE, ISPRIMARY has duplicate values upon truncation'
			ELSE 
				'PARTYNUMBER, TYPE, ISPRIMARY has duplicate values'
		END ERRORDESC, 
		CONCAT('(', PARTYNUMBER, ', ', TYPE, ', ', ISPRIMARY, ')') ERRORVALUE,
		A.DATAAREAID DATAAREAID
	FROM PWC_T_DirPartyContactV3Entity A
	WHERE 
		UPPER(ISPRIMARY) LIKE 'Y%' AND 
		CONCAT(LEFT(PARTYNUMBER, 40), TYPE, ISPRIMARY, DATAAREAID) IN (
		SELECT CONCAT(LEFT(PARTYNUMBER, 40), TYPE, ISPRIMARY, DATAAREAID) 
		FROM PWC_T_DirPartyContactV3Entity
		GROUP BY LEFT(PARTYNUMBER, 40), TYPE, ISPRIMARY, DATAAREAID 
		HAVING COUNT(*) > 1
	);



-- Invalid submaster reference
	-- PARTYNUMBER validation
	INSERT INTO PWCERRORTABLE
	SELECT * FROM (SELECT 
		'PWC_T_DirPartyContactV3Entity' TABLEID, 
		CASE 
			WHEN STRING_AGG(B.CUSTOMERACCOUNT, ', ') IS NULL THEN 'PARTYNUMBER'
			WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'PWC_T_CustCustomerV3Entity'
		END ERRORCOLUMN, 
		A.PWCROWID ROWID, 
		CASE 
			WHEN STRING_AGG(B.CUSTOMERACCOUNT, ', ') IS NULL THEN 4
			WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 5
		END CATEGORY, 
		CASE 
			WHEN STRING_AGG(B.CUSTOMERACCOUNT, ', ') IS NULL THEN 'PARTYNUMBER is not present in CUSTOMERACCOUNT of PWC_T_CustCustomerV3Entity'
			WHEN STRING_AGG(E.CATEGORY, ', ') IS NOT NULL THEN 'PWC_T_CustCustomerV3Entity has error(s) in corresponding CUSTOMERACCOUNT'
		END ERRORDESC,
		A.PARTYNUMBER ERRORVALUE,
		A.DATAAREAID DATAAREAID
	FROM PWC_T_DirPartyContactV3Entity A
	LEFT JOIN PWC_T_CustCustomerV3Entity B
		ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL' OR UPPER(A.DATAAREAID) = 'GLOBAL') AND A.PARTYNUMBER = B.CUSTOMERACCOUNT
	LEFT JOIN PWCERRORTABLE E
		ON E.TABLEID = 'PWC_T_CustCustomerV3Entity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
			AND B.PWCROWID = E.ROWID
	WHERE 
		A.PARTYNUMBER IS NOT NULL AND A.PARTYNUMBER != ''
	GROUP BY A.PWCROWID, A.PARTYNUMBER, A.DATAAREAID) a
	WHERE CATEGORY IS NOT NULL;



-- String length exceeded
    -- DESCRIPTION exceeds max length 60
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_DirPartyContactV3Entity' TABLEID, 
        'DESCRIPTION' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'DESCRIPTION exceeds max length 60' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_DirPartyContactV3Entity A
    WHERE LEN(DESCRIPTION) > 60;

    -- LOCATOR exceeds max length 255
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_DirPartyContactV3Entity' TABLEID, 
        'LOCATOR' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'LOCATOR exceeds max length 255' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_DirPartyContactV3Entity A
    WHERE LEN(LOCATOR) > 255;

    -- Calculate successful count
    EXEC PWC_SP_CALCULATESUCCESSFULCOUNT @TableName = 'PWC_T_DirPartyContactV3Entity';
END;