CREATE OR ALTER PROCEDURE PWC_SP_Validate_PurchOpenPurchasePriceJournalLineV2Entity
AS
BEGIN

-- Invalid data format:
-- PROCUREMENTLEADTIMEDAYS is not an integer
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
    'PROCUREMENTLEADTIMEDAYS' ERRORCOLUMN, 
    PWCROWID ROWID, 
    2 CATEGORY, 
    'PROCUREMENTLEADTIMEDAYS is not an integer' ERRORDESC, 
    PROCUREMENTLEADTIMEDAYS ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
WHERE 
    PROCUREMENTLEADTIMEDAYS LIKE '%[^0-9]%' AND PROCUREMENTLEADTIMEDAYS IS NOT NULL;

-- PURCHASEPRICEQUANTITY is not a real number
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
    'PURCHASEPRICEQUANTITY' ERRORCOLUMN, 
    PWCROWID ROWID, 
    2 CATEGORY, 
    'PURCHASEPRICEQUANTITY is not a real number' ERRORDESC, 
    PURCHASEPRICEQUANTITY ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
WHERE 
    PURCHASEPRICEQUANTITY LIKE '%[^0-9.]%' AND PURCHASEPRICEQUANTITY IS NOT NULL;

-- PURCHASEPRICEQUANTITY is negative
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
    'PURCHASEPRICEQUANTITY' ERRORCOLUMN, 
    PWCROWID ROWID, 
    1 CATEGORY, 
    'PURCHASEPRICEQUANTITY is negative' ERRORDESC, 
    PURCHASEPRICEQUANTITY ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
WHERE 
    TRY_CAST(PURCHASEPRICEQUANTITY AS float) IS NOT NULL AND
    TRY_CAST(PURCHASEPRICEQUANTITY AS float) < 0.0;

-- PRICE is not a real number
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
    'PRICE' ERRORCOLUMN, 
    PWCROWID ROWID, 
    2 CATEGORY, 
    'PRICE is not a real number' ERRORDESC, 
    PRICE ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
WHERE 
    PRICE LIKE '%[^0-9.]%' AND PRICE IS NOT NULL;

-- FROMQUANTITY is negative
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
    'FROMQUANTITY' ERRORCOLUMN, 
    PWCROWID ROWID, 
    1 CATEGORY, 
    'FROMQUANTITY is negative' ERRORDESC, 
    FROMQUANTITY ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
WHERE 
    TRY_CAST(FROMQUANTITY AS float) IS NOT NULL AND
    TRY_CAST(FROMQUANTITY AS float) < 0.0;

-- FROMQUANTITY is not a real number
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
    'FROMQUANTITY' ERRORCOLUMN, 
    PWCROWID ROWID, 
    2 CATEGORY, 
    'FROMQUANTITY is not a real number' ERRORDESC, 
    FROMQUANTITY ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
WHERE 
    FROMQUANTITY LIKE '%[^0-9.]%' AND FROMQUANTITY IS NOT NULL;

-- TOQUANTITY is negative
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
    'TOQUANTITY' ERRORCOLUMN, 
    PWCROWID ROWID, 
    1 CATEGORY, 
    'TOQUANTITY is negative' ERRORDESC, 
    TOQUANTITY ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
WHERE 
    TRY_CAST(TOQUANTITY AS float) IS NOT NULL AND
    TRY_CAST(TOQUANTITY AS float) < 0.0;

-- TOQUANTITY is not a real number
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
    'TOQUANTITY' ERRORCOLUMN, 
    PWCROWID ROWID, 
    2 CATEGORY, 
    'TOQUANTITY is not a real number' ERRORDESC, 
    TOQUANTITY ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
WHERE 
    TOQUANTITY LIKE '%[^0-9.]%' AND TOQUANTITY IS NOT NULL;

-- Percent1 is not a real number
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
    'Percent1' ERRORCOLUMN, 
    PWCROWID ROWID, 
    2 CATEGORY, 
    'Percent1 is not a real number' ERRORDESC, 
    Percent1 ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
WHERE 
    Percent1 LIKE '%[^0-9.]%' AND Percent1 IS NOT NULL;

-- Percent2 is not a real number
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
    'Percent2' ERRORCOLUMN, 
    PWCROWID ROWID, 
    2 CATEGORY, 
    'Percent2 is not a real number' ERRORDESC, 
    Percent2 ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
WHERE 
    Percent2 LIKE '%[^0-9.]%' AND Percent2 IS NOT NULL;

-- PRICEAPPLICABLEFROMDATE HAS WRONG DATE FORMAT
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
    'PRICEAPPLICABLEFROMDATE' ERRORCOLUMN, 
    PWCROWID ROWID, 
    2 CATEGORY, 
    'PRICEAPPLICABLEFROMDATE has wrong date format' ERRORDESC, 
    PRICEAPPLICABLEFROMDATE ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
WHERE 
    PRICEAPPLICABLEFROMDATE IS NOT NULL AND ISDATE(PRICEAPPLICABLEFROMDATE) = 0;

-- PRICEAPPLICABLETODATE HAS WRONG DATE FORMAT
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
    'PRICEAPPLICABLETODATE' ERRORCOLUMN, 
    PWCROWID ROWID, 
    2 CATEGORY, 
    'PRICEAPPLICABLETODATE has wrong date format' ERRORDESC, 
    PRICEAPPLICABLETODATE ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
WHERE 
    PRICEAPPLICABLETODATE IS NOT NULL AND ISDATE(PRICEAPPLICABLETODATE) = 0;





-- Other system checks	
-- FROMQUANTITY should not be greater than TOQUANTITY
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
    '(FROMQUANTITY, TOQUANTITY)' ERRORCOLUMN, 
    PWCROWID ROWID, 
    6 CATEGORY, 
    'FROMQUANTITY should not be greater than TOQUANTITY' ERRORDESC, 
    CONCAT('(', FROMQUANTITY, ', ', TOQUANTITY, ')') ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
WHERE 
    TRY_CAST(FROMQUANTITY AS float) IS NOT NULL AND
    TRY_CAST(TOQUANTITY AS float) IS NOT NULL AND
    TRY_CAST(TOQUANTITY AS float) < TRY_CAST(FROMQUANTITY AS float);

-- PRICEAPPLICABLEFROMDATE should not be greater than PRICEAPPLICABLETODATE
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
    '(PRICEAPPLICABLEFROMDATE, PRICEAPPLICABLETODATE)' ERRORCOLUMN, 
    PWCROWID ROWID, 
    6 CATEGORY, 
    'PRICEAPPLICABLEFROMDATE should not be greater than PRICEAPPLICABLETODATE' ERRORDESC, 
    CONCAT('(', PRICEAPPLICABLEFROMDATE, ', ', PRICEAPPLICABLETODATE, ')') ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
WHERE 
    PRICEAPPLICABLEFROMDATE IS NOT NULL AND
    PRICEAPPLICABLETODATE IS NOT NULL AND
    PRICEAPPLICABLEFROMDATE > PRICEAPPLICABLETODATE;

-- Both VENDORACCOUNTNUMBER and PRICEVENDORGROUPCODE cannot be present
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
    '(VENDORACCOUNTNUMBER, PRICEVENDORGROUPCODE)' ERRORCOLUMN, 
    PWCROWID ROWID, 
    6 CATEGORY, 
    'Both VENDORACCOUNTNUMBER and PRICEVENDORGROUPCODE cannot be present' ERRORDESC, 
    CONCAT('(', VENDORACCOUNTNUMBER, ', ', PRICEVENDORGROUPCODE, ')') ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
WHERE 
    PRICEVENDORGROUPCODE IS NOT NULL AND VENDORACCOUNTNUMBER IS NOT NULL;






-- Mandatory fields missing
-- TRADEAGREEMENTJOURNALNUMBER is blank
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
    'TRADEAGREEMENTJOURNALNUMBER' ERRORCOLUMN, 
    PWCROWID ROWID, 
    1 CATEGORY, 
    'TRADEAGREEMENTJOURNALNUMBER is blank' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
WHERE 
    TRADEAGREEMENTJOURNALNUMBER = '' OR TRADEAGREEMENTJOURNALNUMBER IS NULL;

-- ITEMNUMBER is blank when ITEMCODE is Table
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
    'ITEMNUMBER' ERRORCOLUMN, 
    PWCROWID ROWID, 
    1 CATEGORY, 
    'ITEMNUMBER is blank when ITEMCODE is Table' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
WHERE 
    (ITEMNUMBER = '' OR ITEMNUMBER IS NULL) AND ITEMCODE LIKE 'T%';

INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
    'VENDORACCOUNTNUMBER' ERRORCOLUMN, 
    PWCROWID ROWID, 
    1 CATEGORY, 
    'VENDORACCOUNTNUMBER is blank when ACCOUNTCODE is Table' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
WHERE 
    (VENDORACCOUNTNUMBER = '' OR VENDORACCOUNTNUMBER IS NULL) AND ACCOUNTCODE LIKE 'T%';







-- Business reqd fields missing
-- FROMQUANTITY is blank
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
    'FROMQUANTITY' ERRORCOLUMN, 
    PWCROWID ROWID, 
    8 CATEGORY, 
    'FROMQUANTITY is blank' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
WHERE 
    FROMQUANTITY = '' OR FROMQUANTITY IS NULL;

-- QUANTITYUNITSYMBOL is blank
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
    'QUANTITYUNITSYMBOL' ERRORCOLUMN, 
    PWCROWID ROWID, 
    8 CATEGORY, 
    'QUANTITYUNITSYMBOL is blank' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
WHERE 
    QUANTITYUNITSYMBOL = '' OR QUANTITYUNITSYMBOL IS NULL;

-- PRICEAPPLICABLEFROMDATE is blank
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
    'PRICEAPPLICABLEFROMDATE' ERRORCOLUMN, 
    PWCROWID ROWID, 
    8 CATEGORY, 
    'PRICEAPPLICABLEFROMDATE is blank' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
WHERE 
    PRICEAPPLICABLEFROMDATE = '' OR PRICEAPPLICABLEFROMDATE IS NULL;

-- PRICEAPPLICABLETODATE is blank
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
    'PRICEAPPLICABLETODATE' ERRORCOLUMN, 
    PWCROWID ROWID, 
    8 CATEGORY, 
    'PRICEAPPLICABLETODATE is blank' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
WHERE 
    PRICEAPPLICABLETODATE = '' OR PRICEAPPLICABLETODATE IS NULL;

-- PRICECURRENCYCODE is blank
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
    'PRICECURRENCYCODE' ERRORCOLUMN, 
    PWCROWID ROWID, 
    8 CATEGORY, 
    'PRICECURRENCYCODE is blank' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
WHERE 
    PRICECURRENCYCODE = '' OR PRICECURRENCYCODE IS NULL;

-- ITEMCODE is blank
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
    'ITEMCODE' ERRORCOLUMN, 
    PWCROWID ROWID, 
    8 CATEGORY, 
    'ITEMCODE is blank' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
WHERE 
    ITEMCODE = '' OR ITEMCODE IS NULL;

-- ACCOUNTCODE is blank
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
    'ACCOUNTCODE' ERRORCOLUMN, 
    PWCROWID ROWID, 
    8 CATEGORY, 
    'ACCOUNTCODE is blank' ERRORDESC, 
    '' ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
WHERE 
    ACCOUNTCODE = '' OR ACCOUNTCODE IS NULL;








-- Duplicate occurrence:
-- TRADEAGREEMENTJOURNALNUMBER, LINENUMBER, DATAAREAID has duplicates
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
    '(TRADEAGREEMENTJOURNALNUMBER, LINENUMBER, DATAAREAID)' ERRORCOLUMN, 
    PWCROWID ROWID, 
    3 CATEGORY, 
    CASE 
        WHEN LEN(TRADEAGREEMENTJOURNALNUMBER) > 20 THEN 
            'TRADEAGREEMENTJOURNALNUMBER, LINENUMBER has duplicate values upon truncation in ' + DATAAREAID
        ELSE 
            'TRADEAGREEMENTJOURNALNUMBER, LINENUMBER has duplicate values in ' + DATAAREAID
    END ERRORDESC, 
    CONCAT('(', TRADEAGREEMENTJOURNALNUMBER, ', ', LINENUMBER, ')') ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
WHERE 
    CONCAT(LEFT(TRADEAGREEMENTJOURNALNUMBER, 20), LINENUMBER, DATAAREAID) IN (
    SELECT CONCAT(LEFT(TRADEAGREEMENTJOURNALNUMBER, 20), LINENUMBER, DATAAREAID) 
    FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity
    GROUP BY LEFT(TRADEAGREEMENTJOURNALNUMBER, 20), LINENUMBER, DATAAREAID 
    HAVING COUNT(*) > 1
);









-- Invalid Enum Values:
    -- ACCOUNTCODE has invalid enum values
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
        'ACCOUNTCODE' ERRORCOLUMN, 
        PWCROWID ROWID, 
        2 CATEGORY, 
        'ACCOUNTCODE has invalid enum values' ERRORDESC, 
        ACCOUNTCODE ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
    WHERE 
        ACCOUNTCODE IS NOT NULL 
        AND ACCOUNTCODE NOT IN (
            SELECT MEMBERNAME 
            FROM RETAILENUMVALUETABLE 
            WHERE ENUMNAME LIKE 'AssetLeasePostingAccountCode'
        );

    -- ITEMCODE has invalid enum values
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
        'ITEMCODE' ERRORCOLUMN, 
        PWCROWID ROWID, 
        2 CATEGORY, 
        'ITEMCODE has invalid enum values' ERRORDESC, 
        ITEMCODE ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
    WHERE 
        ITEMCODE IS NOT NULL 
        AND ITEMCODE NOT IN (
            SELECT MEMBERNAME 
            FROM RETAILENUMVALUETABLE 
            WHERE ENUMNAME LIKE 'PriceDiscProductCodeType'
        );




-- Invalid submaster reference
-- ITEMNUMBER validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.ITEMNUMBER) = 0 THEN 'ITEMNUMBER'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'ITEMNUMBER,[PWC_T_EcoResReleasedProductV2Entity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.ITEMNUMBER) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.ITEMNUMBER) = 0 THEN 'ITEMNUMBER is not present in ITEMNUMBER of PWC_T_EcoResReleasedProductV2Entity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_EcoResReleasedProductV2Entity has error(s) in corresponding ITEMNUMBER'
        END ERRORDESC,
        A.ITEMNUMBER ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
    LEFT JOIN PWC_T_EcoResReleasedProductV2Entity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(A.DATAAREAID) = 'GLOBAL' OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.ITEMNUMBER = B.ITEMNUMBER
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_EcoResReleasedProductV2Entity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.ITEMNUMBER IS NOT NULL AND A.ITEMNUMBER != ''
    GROUP BY A.PWCROWID, A.ITEMNUMBER, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- PRICESITEID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.SITEID) = 0 THEN 'PRICESITEID'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PRICESITEID,[PWC_T_InventOperationalSiteV2Entity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.SITEID) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.SITEID) = 0 THEN 'PRICESITEID is not present in SITEID of PWC_T_InventOperationalSiteV2Entity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_InventOperationalSiteV2Entity has error(s) in corresponding SITEID'
        END ERRORDESC,
        A.PRICESITEID ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
    LEFT JOIN PWC_T_InventOperationalSiteV2Entity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(A.DATAAREAID) = 'GLOBAL' OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.PRICESITEID = B.SITEID
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_InventOperationalSiteV2Entity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.PRICESITEID IS NOT NULL AND A.PRICESITEID != ''
    GROUP BY A.PWCROWID, A.PRICESITEID, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- PRICEWAREHOUSEID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.WAREHOUSEID) = 0 THEN 'PRICEWAREHOUSEID'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PRICEWAREHOUSEID,[PWC_T_InventWarehouseEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.WAREHOUSEID) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.WAREHOUSEID) = 0 THEN 'PRICEWAREHOUSEID is not present in WAREHOUSEID of PWC_T_InventWarehouseEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_InventWarehouseEntity has error(s) in corresponding WAREHOUSEID'
        END ERRORDESC,
        A.PRICEWAREHOUSEID ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
    LEFT JOIN PWC_T_InventWarehouseEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(A.DATAAREAID) = 'GLOBAL' OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.PRICEWAREHOUSEID = B.WAREHOUSEID
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_InventWarehouseEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.PRICEWAREHOUSEID IS NOT NULL AND A.PRICEWAREHOUSEID != ''
    GROUP BY A.PWCROWID, A.PRICEWAREHOUSEID, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- PRICEWAREHOUSEID, PRICESITEID, DATAAREAID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.WAREHOUSEID) = 0 THEN '(PRICEWAREHOUSEID, PRICESITEID, DATAAREAID)'
            WHEN COUNT(E.CATEGORY) <> 0 THEN '(PRICEWAREHOUSEID, PRICESITEID, DATAAREAID),[PWC_T_InventWarehouseEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.WAREHOUSEID) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.WAREHOUSEID) = 0 THEN 'PRICEWAREHOUSEID, PRICESITEID, DATAAREAID is not present in WAREHOUSEID, OPERATIONALSITEID, DATAAREAID of PWC_T_InventWarehouseEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_InventWarehouseEntity has error(s) in corresponding WAREHOUSEID, OPERATIONALSITEID, DATAAREAID'
        END ERRORDESC,
        CONCAT('(', A.PRICEWAREHOUSEID, ',', A.PRICESITEID, ',', A.DATAAREAID, ')') ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
    LEFT JOIN PWC_T_InventWarehouseEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(A.DATAAREAID) = 'GLOBAL' OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.PRICEWAREHOUSEID = B.WAREHOUSEID AND A.PRICESITEID = B.OPERATIONALSITEID AND A.DATAAREAID = B.DATAAREAID
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_InventWarehouseEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.PRICEWAREHOUSEID IS NOT NULL AND A.PRICEWAREHOUSEID != '' AND
        A.PRICESITEID IS NOT NULL AND A.PRICESITEID != '' AND
        A.DATAAREAID IS NOT NULL AND A.DATAAREAID != ''
    GROUP BY A.PWCROWID, A.PRICEWAREHOUSEID, A.PRICESITEID, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- QUANTITYUNITSYMBOL validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.UnitSymbol) = 0 THEN 'QUANTITYUNITSYMBOL'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'QUANTITYUNITSYMBOL,[PWC_T_UnitOfMeasureEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.UnitSymbol) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.UnitSymbol) = 0 THEN 'QUANTITYUNITSYMBOL is not present in UnitSymbol of PWC_T_UnitOfMeasureEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_UnitOfMeasureEntity has error(s) in corresponding UnitSymbol'
        END ERRORDESC,
        A.QUANTITYUNITSYMBOL ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
    LEFT JOIN PWC_T_UnitOfMeasureEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(A.DATAAREAID) = 'GLOBAL' OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.QUANTITYUNITSYMBOL = B.UnitSymbol
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_UnitOfMeasureEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.QUANTITYUNITSYMBOL IS NOT NULL AND A.QUANTITYUNITSYMBOL != ''
    GROUP BY A.PWCROWID, A.QUANTITYUNITSYMBOL, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- PRICECURRENCYCODE validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.CURRENCYCODE) = 0 THEN 'PRICECURRENCYCODE'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PRICECURRENCYCODE,[PWC_T_CurrencyEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.CURRENCYCODE) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.CURRENCYCODE) = 0 THEN 'PRICECURRENCYCODE is not present in CURRENCYCODE of PWC_T_CurrencyEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_CurrencyEntity has error(s) in corresponding CURRENCYCODE'
        END ERRORDESC,
        A.PRICECURRENCYCODE ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
    LEFT JOIN PWC_T_CurrencyEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(A.DATAAREAID) = 'GLOBAL' OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.PRICECURRENCYCODE = B.CURRENCYCODE
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_CurrencyEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.PRICECURRENCYCODE IS NOT NULL AND A.PRICECURRENCYCODE != ''
    GROUP BY A.PWCROWID, A.PRICECURRENCYCODE, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- VENDORACCOUNTNUMBER validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.VENDORACCOUNTNUMBER) = 0 THEN 'VENDORACCOUNTNUMBER'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'VENDORACCOUNTNUMBER,[PWC_T_VendVendorV2Entity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.VENDORACCOUNTNUMBER) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.VENDORACCOUNTNUMBER) = 0 THEN 'VENDORACCOUNTNUMBER is not present in VENDORACCOUNTNUMBER of PWC_T_VendVendorV2Entity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_VendVendorV2Entity has error(s) in corresponding VENDORACCOUNTNUMBER'
        END ERRORDESC,
        A.VENDORACCOUNTNUMBER ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
    LEFT JOIN PWC_T_VendVendorV2Entity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(A.DATAAREAID) = 'GLOBAL' OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.VENDORACCOUNTNUMBER = B.VENDORACCOUNTNUMBER
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_VendVendorV2Entity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.VENDORACCOUNTNUMBER IS NOT NULL AND A.VENDORACCOUNTNUMBER != ''
    GROUP BY A.PWCROWID, A.VENDORACCOUNTNUMBER, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- TRADEAGREEMENTJOURNALNUMBER validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.JOURNALNUMBER) = 0 THEN 'TRADEAGREEMENTJOURNALNUMBER'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'TRADEAGREEMENTJOURNALNUMBER,[PWC_T_TradeOpenTradeAgreementJournalHeaderV2Entity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.JOURNALNUMBER) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.JOURNALNUMBER) = 0 THEN 'TRADEAGREEMENTJOURNALNUMBER is not present in JOURNALNUMBER of PWC_T_TradeOpenTradeAgreementJournalHeaderV2Entity having DEFAULTTRADEAGREEMENTTYPE as PricePurch'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_TradeOpenTradeAgreementJournalHeaderV2Entity has error(s) in corresponding JOURNALNUMBER'
        END ERRORDESC,
        A.TRADEAGREEMENTJOURNALNUMBER ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
    LEFT JOIN PWC_T_TradeOpenTradeAgreementJournalHeaderV2Entity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(A.DATAAREAID) = 'GLOBAL' OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.TRADEAGREEMENTJOURNALNUMBER = B.JOURNALNUMBER
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_TradeOpenTradeAgreementJournalHeaderV2Entity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.TRADEAGREEMENTJOURNALNUMBER IS NOT NULL AND A.TRADEAGREEMENTJOURNALNUMBER != '' AND 
        A.DEFAULTTRADEAGREEMENTTYPE IS NOT NULL AND A.DEFAULTTRADEAGREEMENTTYPE LIKE '%PUR%' 
    GROUP BY A.PWCROWID, A.TRADEAGREEMENTJOURNALNUMBER, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- QUANTITYUNITSYMBOL, ITEMNUMBER validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.PURCHASEUNITSYMBOL) = 0 THEN '(QUANTITYUNITSYMBOL, ITEMNUMBER)'
            WHEN COUNT(E.CATEGORY) <> 0 THEN '(QUANTITYUNITSYMBOL, ITEMNUMBER),[PWC_T_EcoResReleasedProductV2Entity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.PURCHASEUNITSYMBOL) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.PURCHASEUNITSYMBOL) = 0 THEN 'QUANTITYUNITSYMBOL, ITEMNUMBER is not present in PURCHASEUNITSYMBOL, ITEMNUMBER of PWC_T_EcoResReleasedProductV2Entity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_EcoResReleasedProductV2Entity has error(s) in corresponding PURCHASEUNITSYMBOL, ITEMNUMBER'
        END ERRORDESC,
        CONCAT('(', A.QUANTITYUNITSYMBOL, ',', A.ITEMNUMBER, ')') ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_PurchOpenPurchasePriceJournalLineV2Entity A
    LEFT JOIN PWC_T_EcoResReleasedProductV2Entity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(A.DATAAREAID) = 'GLOBAL' OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.QUANTITYUNITSYMBOL = B.PURCHASEUNITSYMBOL AND A.ITEMNUMBER = B.ITEMNUMBER
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_EcoResReleasedProductV2Entity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
            AND B.PWCROWID = E.ROWID
    WHERE 
        A.QUANTITYUNITSYMBOL IS NOT NULL AND A.QUANTITYUNITSYMBOL != '' AND
        A.ITEMNUMBER IS NOT NULL AND A.ITEMNUMBER != ''
    GROUP BY A.PWCROWID, A.QUANTITYUNITSYMBOL, A.ITEMNUMBER, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;




EXEC PWC_SP_CALCULATESUCCESSFULCOUNT @TableName = 'PWC_T_PurchOpenPurchasePriceJournalLineV2Entity'
END
