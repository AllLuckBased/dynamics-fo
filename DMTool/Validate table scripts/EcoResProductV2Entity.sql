CREATE OR ALTER PROCEDURE PWC_SP_Validate_EcoResProductV2Entity
AS
BEGIN

-- Mandatory field missing:
-- PRODUCTNUMBER is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResProductV2Entity' TABLEID, 
'PRODUCTNUMBER' ERRORCOLUMN, 
PWCROWID ROWID, 
1 CATEGORY, 
'PRODUCTNUMBER is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResProductV2Entity A
WHERE 
PRODUCTNUMBER = '' OR PRODUCTNUMBER IS NULL;

-- PRODUCTTYPE is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResProductV2Entity' TABLEID, 
'PRODUCTTYPE' ERRORCOLUMN, 
PWCROWID ROWID, 
1 CATEGORY, 
'PRODUCTTYPE is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResProductV2Entity A
WHERE 
PRODUCTTYPE = '' OR PRODUCTTYPE IS NULL;

-- Business required fields missing:
-- PRODUCTDESCRIPTION is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResProductV2Entity' TABLEID, 
'PRODUCTDESCRIPTION' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'PRODUCTDESCRIPTION is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResProductV2Entity A
WHERE 
PRODUCTDESCRIPTION = '' OR PRODUCTDESCRIPTION IS NULL;

-- PRODUCTNAME is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResProductV2Entity' TABLEID, 
'PRODUCTNAME' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'PRODUCTNAME is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResProductV2Entity A
WHERE 
PRODUCTNAME = '' OR PRODUCTNAME IS NULL;

-- PRODUCTSEARCHNAME is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResProductV2Entity' TABLEID, 
'PRODUCTSEARCHNAME' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'PRODUCTSEARCHNAME is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResProductV2Entity A
WHERE 
PRODUCTSEARCHNAME = '' OR PRODUCTSEARCHNAME IS NULL;

-- PRODUCTSUBTYPE is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResProductV2Entity' TABLEID, 
'PRODUCTSUBTYPE' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'PRODUCTSUBTYPE is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResProductV2Entity A
WHERE 
PRODUCTSUBTYPE = '' OR PRODUCTSUBTYPE IS NULL;


-- Invalid Enum Values
-- PRODUCTSUBTYPE has invalid enum values
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResProductV2Entity' TABLEID, 
'PRODUCTSUBTYPE' ERRORCOLUMN, 
PWCROWID ROWID, 
2 CATEGORY, 
'PRODUCTSUBTYPE has invalid enum values' ERRORDESC, 
PRODUCTSUBTYPE ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResProductV2Entity A
WHERE 
PRODUCTSUBTYPE IS NOT NULL 
AND PRODUCTSUBTYPE NOT IN (
SELECT MEMBERNAME 
FROM RETAILENUMVALUETABLE 
WHERE ENUMNAME LIKE 'EcoResProductSubtype'
);

-- PRODUCTTYPE has invalid enum values
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResProductV2Entity' TABLEID, 
'PRODUCTTYPE' ERRORCOLUMN, 
PWCROWID ROWID, 
2 CATEGORY, 
'PRODUCTTYPE has invalid enum values' ERRORDESC, 
PRODUCTTYPE ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResProductV2Entity A
WHERE 
PRODUCTTYPE IS NOT NULL 
AND PRODUCTTYPE NOT IN (
SELECT MEMBERNAME 
FROM RETAILENUMVALUETABLE 
WHERE ENUMNAME LIKE 'EcoResProductType'
);




-- Duplicate occurrence:
-- PRODUCTNUMBER has duplicate values
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_EcoResProductV2Entity' TABLEID, 
    'PRODUCTNUMBER' ERRORCOLUMN, 
    PWCROWID ROWID, 
    3 CATEGORY, 
    CASE 
        WHEN LEN(PRODUCTNUMBER) > 20 THEN 
            'PRODUCTNUMBER has duplicate values upon truncation'
        ELSE 
            'PRODUCTNUMBER has duplicate values'
    END ERRORDESC, 
    PRODUCTNUMBER ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResProductV2Entity A
WHERE 
    CONCAT(LEFT(PRODUCTNUMBER, 20), DATAAREAID) IN (
    SELECT CONCAT(LEFT(PRODUCTNUMBER, 20), DATAAREAID) 
    FROM PWC_T_EcoResProductV2Entity
    GROUP BY LEFT(PRODUCTNUMBER, 20), DATAAREAID 
    HAVING COUNT(*) > 1
);




-- Invalid submaster reference
-- STORAGEDIMENSIONGROUPNAME validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_EcoResProductV2Entity' TABLEID, 
    CASE 
        WHEN COUNT(B.GROUPNAME) = 0 THEN 'STORAGEDIMENSIONGROUPNAME'
        WHEN COUNT(E.CATEGORY) <> 0 THEN 'STORAGEDIMENSIONGROUPNAME,[PWC_T_EcoResStorageDimensionGroupEntity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN COUNT(B.GROUPNAME) = 0 THEN 4
        WHEN COUNT(E.CATEGORY) <> 0 THEN 5
    END CATEGORY, 
    CASE 
        WHEN COUNT(B.GROUPNAME) = 0 THEN 'STORAGEDIMENSIONGROUPNAME is not present in GROUPNAME of PWC_T_EcoResStorageDimensionGroupEntity'
        WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_EcoResStorageDimensionGroupEntity has error(s) in corresponding GROUPNAME'
    END ERRORDESC,
    A.STORAGEDIMENSIONGROUPNAME ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResProductV2Entity A
LEFT JOIN PWC_T_EcoResStorageDimensionGroupEntity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.STORAGEDIMENSIONGROUPNAME = B.GROUPNAME
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_EcoResStorageDimensionGroupEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.STORAGEDIMENSIONGROUPNAME IS NOT NULL AND A.STORAGEDIMENSIONGROUPNAME != ''
GROUP BY TABLEID, A.PWCROWID, A.STORAGEDIMENSIONGROUPNAME, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;

-- TRACKINGDIMENSIONGROUPNAME validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_EcoResProductV2Entity' TABLEID, 
    CASE 
        WHEN COUNT(B.GROUPNAME) = 0 THEN 'TRACKINGDIMENSIONGROUPNAME'
        WHEN COUNT(E.CATEGORY) <> 0 THEN 'TRACKINGDIMENSIONGROUPNAME,[PWC_T_EcoResTrackingDimensionGroupEntity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN COUNT(B.GROUPNAME) = 0 THEN 4
        WHEN COUNT(E.CATEGORY) <> 0 THEN 5
    END CATEGORY, 
    CASE 
        WHEN COUNT(B.GROUPNAME) = 0 THEN 'TRACKINGDIMENSIONGROUPNAME is not present in GROUPNAME of PWC_T_EcoResTrackingDimensionGroupEntity'
        WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_EcoResTrackingDimensionGroupEntity has error(s) in corresponding GROUPNAME'
    END ERRORDESC,
    A.TRACKINGDIMENSIONGROUPNAME ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResProductV2Entity A
LEFT JOIN PWC_T_EcoResTrackingDimensionGroupEntity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.TRACKINGDIMENSIONGROUPNAME = B.GROUPNAME
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_EcoResTrackingDimensionGroupEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.TRACKINGDIMENSIONGROUPNAME IS NOT NULL AND A.TRACKINGDIMENSIONGROUPNAME != ''
GROUP BY TABLEID, A.PWCROWID, A.TRACKINGDIMENSIONGROUPNAME, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;






-- String length exceeded maximum
-- PRODUCTNUMBER exceeds max length 20
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResProductV2Entity' TABLEID, 
'PRODUCTNUMBER' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'PRODUCTNUMBER exceeds max length 20' ERRORDESC, 
PRODUCTNUMBER ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResProductV2Entity A
WHERE LEN(PRODUCTNUMBER) > 20;

-- PRODUCTDESCRIPTION exceeds max length 1000
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResProductV2Entity' TABLEID, 
'PRODUCTDESCRIPTION' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'PRODUCTDESCRIPTION exceeds max length 1000' ERRORDESC, 
PRODUCTDESCRIPTION ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResProductV2Entity A
WHERE LEN(PRODUCTDESCRIPTION) > 1000;

-- PRODUCTNAME exceeds max length 60
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResProductV2Entity' TABLEID, 
'PRODUCTNAME' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'PRODUCTNAME exceeds max length 60' ERRORDESC, 
PRODUCTNAME ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResProductV2Entity A
WHERE LEN(PRODUCTNAME) > 60;

-- PRODUCTSEARCHNAME exceeds max length 20
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_EcoResProductV2Entity' TABLEID, 
'PRODUCTSEARCHNAME' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'PRODUCTSEARCHNAME exceeds max length 20' ERRORDESC, 
PRODUCTSEARCHNAME ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_EcoResProductV2Entity A
WHERE LEN(PRODUCTSEARCHNAME) > 20;

EXEC PWC_SP_CALCULATESUCCESSFULCOUNT @TableName = 'PWC_T_EcoResProductV2Entity'
END
