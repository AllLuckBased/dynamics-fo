CREATE OR ALTER PROCEDURE PWC_SP_Validate_AssetFixedAssetV2Entity
AS
BEGIN

-- Mandatory field missing:
-- FIXEDASSETGROUPID is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_AssetFixedAssetV2Entity' TABLEID, 
'FIXEDASSETGROUPID' ERRORCOLUMN, 
PWCROWID ROWID, 
1 CATEGORY, 
'FIXEDASSETGROUPID is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_AssetFixedAssetV2Entity A
WHERE 
FIXEDASSETGROUPID = '' OR FIXEDASSETGROUPID IS NULL;




-- Business required fields missing:
-- FIXEDASSETNUMBER is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_AssetFixedAssetV2Entity' TABLEID, 
'FIXEDASSETNUMBER' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'FIXEDASSETNUMBER is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_AssetFixedAssetV2Entity A
WHERE 
FIXEDASSETNUMBER = '' OR FIXEDASSETNUMBER IS NULL;

-- ASSETLOCATIONID is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_AssetFixedAssetV2Entity' TABLEID, 
'ASSETLOCATIONID' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'ASSETLOCATIONID is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_AssetFixedAssetV2Entity A
WHERE 
ASSETLOCATIONID = '' OR ASSETLOCATIONID IS NULL;

-- MAJORTYPEID is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_AssetFixedAssetV2Entity' TABLEID, 
'MAJORTYPEID' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'MAJORTYPEID is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_AssetFixedAssetV2Entity A
WHERE 
MAJORTYPEID = '' OR MAJORTYPEID IS NULL;

-- QUANTITY is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_AssetFixedAssetV2Entity' TABLEID, 
'QUANTITY' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'QUANTITY is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_AssetFixedAssetV2Entity A
WHERE 
QUANTITY = '' OR QUANTITY IS NULL;

-- TYPE is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_AssetFixedAssetV2Entity' TABLEID, 
'TYPE' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'TYPE is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_AssetFixedAssetV2Entity A
WHERE 
TYPE = '' OR TYPE IS NULL;




-- Invalid Enum Values
-- PROPERTYTYPE has invalid enum values
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_AssetFixedAssetV2Entity' TABLEID, 
'PROPERTYTYPE' ERRORCOLUMN, 
PWCROWID ROWID, 
2 CATEGORY, 
'PROPERTYTYPE has invalid enum values' ERRORDESC, 
PROPERTYTYPE ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_AssetFixedAssetV2Entity A
WHERE 
PROPERTYTYPE IS NOT NULL 
AND PROPERTYTYPE NOT IN (
SELECT MEMBERNAME 
FROM RETAILENUMVALUETABLE 
WHERE ENUMNAME LIKE 'AssetPropertyType'
);

-- TYPE has invalid enum values
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_AssetFixedAssetV2Entity' TABLEID, 
'TYPE' ERRORCOLUMN, 
PWCROWID ROWID, 
2 CATEGORY, 
'TYPE has invalid enum values' ERRORDESC, 
TYPE ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_AssetFixedAssetV2Entity A
WHERE 
TYPE IS NOT NULL 
AND TYPE NOT IN (
SELECT MEMBERNAME 
FROM RETAILENUMVALUETABLE 
WHERE ENUMNAME LIKE 'AssetType'
);



-- Duplicate occurrence:
-- FIXEDASSETNUMBER has duplicate values
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_AssetFixedAssetV2Entity' TABLEID, 
    'FIXEDASSETNUMBER' ERRORCOLUMN, 
    PWCROWID ROWID, 
    3 CATEGORY, 
    CASE 
        WHEN LEN(FIXEDASSETNUMBER) > 20 THEN 
            'FIXEDASSETNUMBER has duplicate values upon truncation'
        ELSE 
            'FIXEDASSETNUMBER has duplicate values'
    END ERRORDESC, 
    FIXEDASSETNUMBER ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_AssetFixedAssetV2Entity A
WHERE 
    CONCAT(LEFT(FIXEDASSETNUMBER, 20), DATAAREAID) IN (
    SELECT CONCAT(LEFT(FIXEDASSETNUMBER, 20), DATAAREAID) 
    FROM PWC_T_AssetFixedAssetV2Entity
    GROUP BY LEFT(FIXEDASSETNUMBER, 20), DATAAREAID 
    HAVING COUNT(*) > 1
);




-- Invalid submaster reference
-- ASSETCONDITIONID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_AssetFixedAssetV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.CONDITIONCODE) = 0 THEN 'ASSETCONDITIONID'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'ASSETCONDITIONID,[PWC_T_AssetConditionEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.CONDITIONCODE) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.CONDITIONCODE) = 0 THEN 'ASSETCONDITIONID is not present in CONDITIONCODE of PWC_T_AssetConditionEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_AssetConditionEntity has error(s) in corresponding CONDITIONCODE'
        END ERRORDESC,
        A.ASSETCONDITIONID ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_AssetFixedAssetV2Entity A
    LEFT JOIN PWC_T_AssetConditionEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') 
        AND A.ASSETCONDITIONID = B.CONDITIONCODE
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_AssetConditionEntity' 
        AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
    WHERE A.ASSETCONDITIONID IS NOT NULL AND A.ASSETCONDITIONID != ''
    GROUP BY A.PWCROWID, A.ASSETCONDITIONID, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- FIXEDASSETGROUPID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_AssetFixedAssetV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.FIXEDASSETGROUPID) = 0 THEN 'FIXEDASSETGROUPID'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'FIXEDASSETGROUPID,[PWC_T_AssetGroupEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.FIXEDASSETGROUPID) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.FIXEDASSETGROUPID) = 0 THEN 'FIXEDASSETGROUPID is not present in FIXEDASSETGROUPID of PWC_T_AssetGroupEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_AssetGroupEntity has error(s) in corresponding FIXEDASSETGROUPID'
        END ERRORDESC,
        A.FIXEDASSETGROUPID ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_AssetFixedAssetV2Entity A
    LEFT JOIN PWC_T_AssetGroupEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') 
        AND A.FIXEDASSETGROUPID = B.FIXEDASSETGROUPID
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_AssetGroupEntity' 
        AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
    WHERE A.FIXEDASSETGROUPID IS NOT NULL AND A.FIXEDASSETGROUPID != ''
    GROUP BY A.PWCROWID, A.FIXEDASSETGROUPID, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- ASSETLOCATIONID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_AssetFixedAssetV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.LOCATIONID) = 0 THEN 'ASSETLOCATIONID'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'ASSETLOCATIONID,[PWC_T_AssetLocationEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.LOCATIONID) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.LOCATIONID) = 0 THEN 'ASSETLOCATIONID is not present in LOCATIONID of PWC_T_AssetLocationEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_AssetLocationEntity has error(s) in corresponding LOCATIONID'
        END ERRORDESC,
        A.ASSETLOCATIONID ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_AssetFixedAssetV2Entity A
    LEFT JOIN PWC_T_AssetLocationEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') 
        AND A.ASSETLOCATIONID = B.LOCATIONID
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_AssetLocationEntity' 
        AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
    WHERE A.ASSETLOCATIONID IS NOT NULL AND A.ASSETLOCATIONID != ''
    GROUP BY A.PWCROWID, A.ASSETLOCATIONID, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- MAJORTYPEID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_AssetFixedAssetV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.MajorTypeId) = 0 THEN 'MAJORTYPEID'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'MAJORTYPEID,[PWC_T_AssetMajorTypeEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.MajorTypeId) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.MajorTypeId) = 0 THEN 'MAJORTYPEID is not present in MajorTypeId of PWC_T_AssetMajorTypeEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_AssetMajorTypeEntity has error(s) in corresponding MajorTypeId'
        END ERRORDESC,
        A.MAJORTYPEID ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_AssetFixedAssetV2Entity A
    LEFT JOIN PWC_T_AssetMajorTypeEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') 
        AND A.MAJORTYPEID = B.MajorTypeId
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_AssetMajorTypeEntity' 
        AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
    WHERE A.MAJORTYPEID IS NOT NULL AND A.MAJORTYPEID != ''
    GROUP BY A.PWCROWID, A.MAJORTYPEID, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- UNITOFMEASURE validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_AssetFixedAssetV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.UnitSymbol) = 0 THEN 'UNITOFMEASURE'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'UNITOFMEASURE,[PWC_T_UnitOfMeasureEntity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.UnitSymbol) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.UnitSymbol) = 0 THEN 'UNITOFMEASURE is not present in UnitSymbol of PWC_T_UnitOfMeasureEntity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_UnitOfMeasureEntity has error(s) in corresponding UnitSymbol'
        END ERRORDESC,
        A.UNITOFMEASURE ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_AssetFixedAssetV2Entity A
    LEFT JOIN PWC_T_UnitOfMeasureEntity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') 
        AND A.UNITOFMEASURE = B.UnitSymbol
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_UnitOfMeasureEntity' 
        AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
    WHERE A.UNITOFMEASURE IS NOT NULL AND A.UNITOFMEASURE != ''
    GROUP BY A.PWCROWID, A.UNITOFMEASURE, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;

-- MAINASSETID validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (
    SELECT 
        'PWC_T_AssetFixedAssetV2Entity' TABLEID, 
        CASE 
            WHEN COUNT(B.FIXEDASSETNUMBER) = 0 THEN 'MAINASSETID'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'MAINASSETID,[PWC_T_AssetFixedAssetV2Entity]'
        END ERRORCOLUMN, 
        A.PWCROWID ROWID, 
        CASE 
            WHEN COUNT(B.FIXEDASSETNUMBER) = 0 THEN 4
            WHEN COUNT(E.CATEGORY) <> 0 THEN 5
        END CATEGORY, 
        CASE 
            WHEN COUNT(B.FIXEDASSETNUMBER) = 0 THEN 'MAINASSETID is not present in FIXEDASSETNUMBER of PWC_T_AssetFixedAssetV2Entity'
            WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_AssetFixedAssetV2Entity has error(s) in corresponding FIXEDASSETNUMBER'
        END ERRORDESC,
        A.MAINASSETID ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_AssetFixedAssetV2Entity A
    LEFT JOIN PWC_T_AssetFixedAssetV2Entity B
        ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') 
        AND A.MAINASSETID = B.FIXEDASSETNUMBER
    LEFT JOIN PWCERRORTABLE E
        ON E.TABLEID = 'PWC_T_AssetFixedAssetV2Entity' 
        AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
    WHERE A.MAINASSETID IS NOT NULL AND A.MAINASSETID != ''
    GROUP BY A.PWCROWID, A.MAINASSETID, A.DATAAREAID
) a
WHERE CATEGORY IS NOT NULL;






-- String length exceeded maximum
-- BARCODE exceeds max length 20
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_AssetFixedAssetV2Entity' TABLEID, 
'BARCODE' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'BARCODE exceeds max length 20' ERRORDESC, 
BARCODE ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_AssetFixedAssetV2Entity A
WHERE LEN(BARCODE) > 20;

-- FIXEDASSETNUMBER exceeds max length 20
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_AssetFixedAssetV2Entity' TABLEID, 
'FIXEDASSETNUMBER' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'FIXEDASSETNUMBER exceeds max length 20' ERRORDESC, 
FIXEDASSETNUMBER ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_AssetFixedAssetV2Entity A
WHERE LEN(FIXEDASSETNUMBER) > 20;

-- MAKE exceeds max length 60
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_AssetFixedAssetV2Entity' TABLEID, 
'MAKE' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'MAKE exceeds max length 60' ERRORDESC, 
MAKE ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_AssetFixedAssetV2Entity A
WHERE LEN(MAKE) > 60;

-- MODEL exceeds max length 60
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_AssetFixedAssetV2Entity' TABLEID, 
'MODEL' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'MODEL exceeds max length 60' ERRORDESC, 
MODEL ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_AssetFixedAssetV2Entity A
WHERE LEN(MODEL) > 60;

-- MODELYEAR exceeds max length 10
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_AssetFixedAssetV2Entity' TABLEID, 
'MODELYEAR' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'MODELYEAR exceeds max length 10' ERRORDESC, 
MODELYEAR ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_AssetFixedAssetV2Entity A
WHERE LEN(MODELYEAR) > 10;

-- SERIALNUMBER exceeds max length 25
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_AssetFixedAssetV2Entity' TABLEID, 
'SERIALNUMBER' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'SERIALNUMBER exceeds max length 25' ERRORDESC, 
SERIALNUMBER ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_AssetFixedAssetV2Entity A
WHERE LEN(SERIALNUMBER) > 25;

EXEC PWC_SP_CALCULATESUCCESSFULCOUNT @TableName = 'PWC_T_AssetFixedAssetV2Entity'
END
