CREATE OR ALTER PROCEDURE PWC_SP_Validate_VendVendorBankAccountEntity
AS
BEGIN

-- Mandatory field missing:
-- BANKACCOUNTNUMBER is blank when IBAN IS NOT blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorBankAccountEntity' TABLEID, 
'BANKACCOUNTNUMBER' ERRORCOLUMN, 
PWCROWID ROWID, 
1 CATEGORY, 
'BANKACCOUNTNUMBER is blank when IBAN IS NOT blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
WHERE 
(BANKACCOUNTNUMBER = '' OR BANKACCOUNTNUMBER IS NULL) AND IBAN IS NOT NULL;

-- BANKNAME is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorBankAccountEntity' TABLEID, 
'BANKNAME' ERRORCOLUMN, 
PWCROWID ROWID, 
1 CATEGORY, 
'BANKNAME is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
WHERE 
BANKNAME = '' OR BANKNAME IS NULL;

-- VENDORACCOUNTNUMBER is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorBankAccountEntity' TABLEID, 
'VENDORACCOUNTNUMBER' ERRORCOLUMN, 
PWCROWID ROWID, 
1 CATEGORY, 
'VENDORACCOUNTNUMBER is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
WHERE 
VENDORACCOUNTNUMBER = '' OR VENDORACCOUNTNUMBER IS NULL;

-- VENDORBANKACCOUNTID is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorBankAccountEntity' TABLEID, 
'VENDORBANKACCOUNTID' ERRORCOLUMN, 
PWCROWID ROWID, 
1 CATEGORY, 
'VENDORBANKACCOUNTID is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
WHERE 
VENDORBANKACCOUNTID = '' OR VENDORBANKACCOUNTID IS NULL;

-- Business required fields missing:
-- ADDRESSCITY is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorBankAccountEntity' TABLEID, 
'ADDRESSCITY' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'ADDRESSCITY is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
WHERE 
ADDRESSCITY = '' OR ADDRESSCITY IS NULL;

-- ADDRESSCOUNTRY is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorBankAccountEntity' TABLEID, 
'ADDRESSCOUNTRY' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'ADDRESSCOUNTRY is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
WHERE 
ADDRESSCOUNTRY = '' OR ADDRESSCOUNTRY IS NULL;

-- CURRENTCURRENCYCODE is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorBankAccountEntity' TABLEID, 
'CURRENTCURRENCYCODE' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'CURRENTCURRENCYCODE is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
WHERE 
CURRENTCURRENCYCODE = '' OR CURRENTCURRENCYCODE IS NULL;

-- ISDEFAULTBANKACCOUNT is blank
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorBankAccountEntity' TABLEID, 
'ISDEFAULTBANKACCOUNT' ERRORCOLUMN, 
PWCROWID ROWID, 
8 CATEGORY, 
'ISDEFAULTBANKACCOUNT is blank' ERRORDESC, 
'' ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
WHERE 
ISDEFAULTBANKACCOUNT = '' OR ISDEFAULTBANKACCOUNT IS NULL;

-- Invalid Enum Values
-- ROUTINGNUMBERTYPE enum has invalid enum values
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorBankAccountEntity' TABLEID, 
'ROUTINGNUMBERTYPE' ERRORCOLUMN, 
PWCROWID ROWID, 
2 CATEGORY, 
'ROUTINGNUMBERTYPE enum has invalid enum values' ERRORDESC, 
ROUTINGNUMBERTYPE ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
WHERE 
ROUTINGNUMBERTYPE IS NOT NULL 
AND ROUTINGNUMBERTYPE NOT IN (
SELECT MEMBERNAME 
FROM RETAILENUMVALUETABLE 
WHERE ENUMNAME LIKE 'BankCodeType'
);

-- BANKACCOUNTTYPE enum has invalid enum values
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorBankAccountEntity' TABLEID, 
'BANKACCOUNTTYPE' ERRORCOLUMN, 
PWCROWID ROWID, 
2 CATEGORY, 
'BANKACCOUNTTYPE enum has invalid enum values' ERRORDESC, 
BANKACCOUNTTYPE ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
WHERE 
BANKACCOUNTTYPE IS NOT NULL 
AND BANKACCOUNTTYPE NOT IN (
SELECT MEMBERNAME 
FROM RETAILENUMVALUETABLE 
WHERE ENUMNAME LIKE 'BankAccountType'
);


-- Duplicate occurrence:
-- VENDORACCOUNTNUMBER, VENDORBANKACCOUNTID has duplicate values
INSERT INTO PWCERRORTABLE
SELECT 
    'PWC_T_VendVendorBankAccountEntity' TABLEID, 
    '(VENDORACCOUNTNUMBER, VENDORBANKACCOUNTID)' ERRORCOLUMN, 
    PWCROWID ROWID, 
    3 CATEGORY, 
    CASE 
        WHEN LEN(VENDORACCOUNTNUMBER) > 20 OR LEN(VENDORBANKACCOUNTID) > 10 THEN 
            'VENDORACCOUNTNUMBER, VENDORBANKACCOUNTID has duplicate values upon truncation'
        ELSE 
            'VENDORACCOUNTNUMBER, VENDORBANKACCOUNTID has duplicate values'
    END ERRORDESC, 
    CONCAT('(', VENDORACCOUNTNUMBER, ', ', VENDORBANKACCOUNTID, ')') ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
WHERE 
    CONCAT(LEFT(VENDORACCOUNTNUMBER, 20), LEFT(VENDORBANKACCOUNTID, 10), DATAAREAID) IN (
    SELECT CONCAT(LEFT(VENDORACCOUNTNUMBER, 20), LEFT(VENDORBANKACCOUNTID, 10), DATAAREAID) 
    FROM PWC_T_VendVendorBankAccountEntity
    GROUP BY LEFT(VENDORACCOUNTNUMBER, 20), LEFT(VENDORBANKACCOUNTID, 10), DATAAREAID 
    HAVING COUNT(*) > 1
);






-- Invalid submaster reference

-- ADDRESSCOUNTRY, ADDRESSCITY, ADDRESSSTATE validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_VendVendorBankAccountEntity' TABLEID, 
    CASE 
        WHEN COUNT(B.COUNTRYREGIONID) = 0 THEN '(ADDRESSCOUNTRY, ADDRESSCITY, ADDRESSSTATE)'
        WHEN COUNT(E.CATEGORY) <> 0 THEN '(ADDRESSCOUNTRY, ADDRESSCITY, ADDRESSSTATE),[PWC_T_LogisticsAddressCityEntity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN COUNT(B.COUNTRYREGIONID) = 0 THEN 4
        WHEN COUNT(E.CATEGORY) <> 0 THEN 5
    END CATEGORY, 
    CASE 
        WHEN COUNT(B.COUNTRYREGIONID) = 0 THEN 'ADDRESSCOUNTRY, ADDRESSCITY, ADDRESSSTATE is not present in COUNTRYREGIONID, NAME, STATEID of PWC_T_LogisticsAddressCityEntity'
        WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_LogisticsAddressCityEntity has error(s) in corresponding COUNTRYREGIONID, NAME, STATEID'
    END ERRORDESC, 
    CONCAT('(', A.ADDRESSCOUNTRY, ',', A.ADDRESSCITY, ',', A.ADDRESSSTATE, ')') ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
LEFT JOIN PWC_T_LogisticsAddressCityEntity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.ADDRESSCOUNTRY = B.COUNTRYREGIONID AND A.ADDRESSCITY = B.NAME AND A.ADDRESSSTATE = B.STATEID
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_LogisticsAddressCityEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.ADDRESSCOUNTRY IS NOT NULL AND A.ADDRESSCOUNTRY != '' AND
    A.ADDRESSCITY IS NOT NULL AND A.ADDRESSCITY != '' AND
    A.ADDRESSSTATE IS NOT NULL AND A.ADDRESSSTATE != ''
GROUP BY TABLEID, A.PWCROWID, A.ADDRESSCOUNTRY, A.ADDRESSCITY, A.ADDRESSSTATE, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;

-- VENDORACCOUNTNUMBER validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_VendVendorBankAccountEntity' TABLEID, 
    CASE 
        WHEN COUNT(B.VENDORACCOUNTNUMBER) = 0 THEN 'VENDORACCOUNTNUMBER'
        WHEN COUNT(E.CATEGORY) <> 0 THEN 'VENDORACCOUNTNUMBER,[PWC_T_VendVendorV2Entity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN COUNT(B.VENDORACCOUNTNUMBER) = 0 THEN 4
        WHEN COUNT(E.CATEGORY) <> 0 THEN 5
    END CATEGORY, 
    CASE 
        WHEN COUNT(B.VENDORACCOUNTNUMBER) = 0 THEN 'VENDORACCOUNTNUMBER is not present in VENDORACCOUNTNUMBER of PWC_T_VendVendorV2Entity'
        WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_VendVendorV2Entity has error(s) in corresponding VENDORACCOUNTNUMBER'
    END ERRORDESC,
    A.VENDORACCOUNTNUMBER ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
LEFT JOIN PWC_T_VendVendorV2Entity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.VENDORACCOUNTNUMBER = B.VENDORACCOUNTNUMBER
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_VendVendorV2Entity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.VENDORACCOUNTNUMBER IS NOT NULL AND A.VENDORACCOUNTNUMBER != ''
GROUP BY TABLEID, A.PWCROWID, A.VENDORACCOUNTNUMBER, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;

-- CURRENTCURRENCYCODE validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_VendVendorBankAccountEntity' TABLEID, 
    CASE 
        WHEN COUNT(B.CURRENCYCODE) = 0 THEN 'CURRENTCURRENCYCODE'
        WHEN COUNT(E.CATEGORY) <> 0 THEN 'CURRENTCURRENCYCODE,[PWC_T_CurrencyEntity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN COUNT(B.CURRENCYCODE) = 0 THEN 4
        WHEN COUNT(E.CATEGORY) <> 0 THEN 5
    END CATEGORY, 
    CASE 
        WHEN COUNT(B.CURRENCYCODE) = 0 THEN 'CURRENTCURRENCYCODE is not present in CURRENCYCODE of PWC_T_CurrencyEntity'
        WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_CurrencyEntity has error(s) in corresponding CURRENCYCODE'
    END ERRORDESC,
    A.CURRENTCURRENCYCODE ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
LEFT JOIN PWC_T_CurrencyEntity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.CURRENTCURRENCYCODE = B.CURRENCYCODE
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_CurrencyEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.CURRENTCURRENCYCODE IS NOT NULL AND A.CURRENTCURRENCYCODE != ''
GROUP BY TABLEID, A.PWCROWID, A.CURRENTCURRENCYCODE, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;


-- ADDRESSCOUNTRY validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_VendVendorBankAccountEntity' TABLEID, 
    CASE 
        WHEN COUNT(B.COUNTRYREGION) = 0 THEN 'ADDRESSCOUNTRY'
        WHEN COUNT(E.CATEGORY) <> 0 THEN 'ADDRESSCOUNTRY,[PWC_T_LogisticsAddressCountryRegionEntity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN COUNT(B.COUNTRYREGION) = 0 THEN 4
        WHEN COUNT(E.CATEGORY) <> 0 THEN 5
    END CATEGORY, 
    CASE 
        WHEN COUNT(B.COUNTRYREGION) = 0 THEN 'ADDRESSCOUNTRY is not present in COUNTRYREGION of PWC_T_LogisticsAddressCountryRegionEntity'
        WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_LogisticsAddressCountryRegionEntity has error(s) in corresponding COUNTRYREGION'
    END ERRORDESC,
    A.ADDRESSCOUNTRY ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
LEFT JOIN PWC_T_LogisticsAddressCountryRegionEntity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.ADDRESSCOUNTRY = B.COUNTRYREGION
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_LogisticsAddressCountryRegionEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.ADDRESSCOUNTRY IS NOT NULL AND A.ADDRESSCOUNTRY != ''
GROUP BY TABLEID, A.PWCROWID, A.ADDRESSCOUNTRY, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;

-- ADDRESSCITY validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_VendVendorBankAccountEntity' TABLEID, 
    CASE 
        WHEN COUNT(B.NAME) = 0 THEN 'ADDRESSCITY'
        WHEN COUNT(E.CATEGORY) <> 0 THEN 'ADDRESSCITY,[PWC_T_LogisticsAddressCityEntity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN COUNT(B.NAME) = 0 THEN 4
        WHEN COUNT(E.CATEGORY) <> 0 THEN 5
    END CATEGORY, 
    CASE 
        WHEN COUNT(B.NAME) = 0 THEN 'ADDRESSCITY is not present in NAME of PWC_T_LogisticsAddressCityEntity'
        WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_LogisticsAddressCityEntity has error(s) in corresponding NAME'
    END ERRORDESC,
    A.ADDRESSCITY ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
LEFT JOIN PWC_T_LogisticsAddressCityEntity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.ADDRESSCITY = B.NAME
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_LogisticsAddressCityEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.ADDRESSCITY IS NOT NULL AND A.ADDRESSCITY != ''
GROUP BY TABLEID, A.PWCROWID, A.ADDRESSCITY, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;

-- ADDRESSSTATE validation
INSERT INTO PWCERRORTABLE
SELECT * FROM (SELECT 
    'PWC_T_VendVendorBankAccountEntity' TABLEID, 
    CASE 
        WHEN COUNT(B.STATE) = 0 THEN 'ADDRESSSTATE'
        WHEN COUNT(E.CATEGORY) <> 0 THEN 'ADDRESSSTATE,[PWC_T_LogisticsAddressStateEntity]'
    END ERRORCOLUMN,
    A.PWCROWID ROWID, 
    CASE 
        WHEN COUNT(B.STATE) = 0 THEN 4
        WHEN COUNT(E.CATEGORY) <> 0 THEN 5
    END CATEGORY, 
    CASE 
        WHEN COUNT(B.STATE) = 0 THEN 'ADDRESSSTATE is not present in STATE of PWC_T_LogisticsAddressStateEntity'
        WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_LogisticsAddressStateEntity has error(s) in corresponding STATE'
    END ERRORDESC,
    A.ADDRESSSTATE ERRORVALUE,
    A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
LEFT JOIN PWC_T_LogisticsAddressStateEntity B
    ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL') AND A.ADDRESSSTATE = B.STATE
LEFT JOIN PWCERRORTABLE E
    ON E.TABLEID = 'PWC_T_LogisticsAddressStateEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
        AND B.PWCROWID = E.ROWID
WHERE 
    A.ADDRESSSTATE IS NOT NULL AND A.ADDRESSSTATE != ''
GROUP BY TABLEID, A.PWCROWID, A.ADDRESSSTATE, A.DATAAREAID) a
WHERE CATEGORY IS NOT NULL;










-- String length exceeded maximum
-- VENDORBANKACCOUNTID exceeds max length 10
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorBankAccountEntity' TABLEID, 
'VENDORBANKACCOUNTID' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'VENDORBANKACCOUNTID exceeds max length 10' ERRORDESC, 
VENDORBANKACCOUNTID ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
WHERE LEN(VENDORBANKACCOUNTID) > 10;

-- ADDRESSDESCRIPTION exceeds max length 60
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorBankAccountEntity' TABLEID, 
'ADDRESSDESCRIPTION' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'ADDRESSDESCRIPTION exceeds max length 60' ERRORDESC, 
ADDRESSDESCRIPTION ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
WHERE LEN(ADDRESSDESCRIPTION) > 60;

-- ADDRESSSTREET exceeds max length 250
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorBankAccountEntity' TABLEID, 
'ADDRESSSTREET' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'ADDRESSSTREET exceeds max length 250' ERRORDESC, 
ADDRESSSTREET ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
WHERE LEN(ADDRESSSTREET) > 250;

-- ADDRESSZIPCODE exceeds max length 10
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorBankAccountEntity' TABLEID, 
'ADDRESSZIPCODE' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'ADDRESSZIPCODE exceeds max length 10' ERRORDESC, 
ADDRESSZIPCODE ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
WHERE LEN(ADDRESSZIPCODE) > 10;

-- BANKACCOUNTNUMBER exceeds max length 48
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorBankAccountEntity' TABLEID, 
'BANKACCOUNTNUMBER' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'BANKACCOUNTNUMBER exceeds max length 48' ERRORDESC, 
BANKACCOUNTNUMBER ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
WHERE LEN(BANKACCOUNTNUMBER) > 48;

-- BANKNAME exceeds max length 60
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorBankAccountEntity' TABLEID, 
'BANKNAME' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'BANKNAME exceeds max length 60' ERRORDESC, 
BANKNAME ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
WHERE LEN(BANKNAME) > 60;

-- ROUTINGNUMBER exceeds max length 12
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorBankAccountEntity' TABLEID, 
'ROUTINGNUMBER' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'ROUTINGNUMBER exceeds max length 12' ERRORDESC, 
ROUTINGNUMBER ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
WHERE LEN(ROUTINGNUMBER) > 12;

-- SWIFTCODE exceeds max length 20
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorBankAccountEntity' TABLEID, 
'SWIFTCODE' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'SWIFTCODE exceeds max length 20' ERRORDESC, 
SWIFTCODE ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
WHERE LEN(SWIFTCODE) > 20;

-- IBAN exceeds max length 48
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorBankAccountEntity' TABLEID, 
'IBAN' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'IBAN exceeds max length 48' ERRORDESC, 
IBAN ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
WHERE LEN(IBAN) > 48;

-- CONTACTNAME exceeds max length 60
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorBankAccountEntity' TABLEID, 
'CONTACTNAME' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'CONTACTNAME exceeds max length 60' ERRORDESC, 
CONTACTNAME ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
WHERE LEN(CONTACTNAME) > 60;

-- CONTACTPHONENUMBER exceeds max length 20
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorBankAccountEntity' TABLEID, 
'CONTACTPHONENUMBER' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'CONTACTPHONENUMBER exceeds max length 20' ERRORDESC, 
CONTACTPHONENUMBER ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
WHERE LEN(CONTACTPHONENUMBER) > 20;

-- CONTACTMOBILEPHONENUMBER exceeds max length 20
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorBankAccountEntity' TABLEID, 
'CONTACTMOBILEPHONENUMBER' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'CONTACTMOBILEPHONENUMBER exceeds max length 20' ERRORDESC, 
CONTACTMOBILEPHONENUMBER ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
WHERE LEN(CONTACTMOBILEPHONENUMBER) > 20;

-- CONTACTPHONENUMBEREXTENSION exceeds max length 10
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorBankAccountEntity' TABLEID, 
'CONTACTPHONENUMBEREXTENSION' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'CONTACTPHONENUMBEREXTENSION exceeds max length 10' ERRORDESC, 
CONTACTPHONENUMBEREXTENSION ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
WHERE LEN(CONTACTPHONENUMBEREXTENSION) > 10;

-- CONTACTTELEXNUMBER exceeds max length 10
INSERT INTO PWCERRORTABLE
SELECT 
'PWC_T_VendVendorBankAccountEntity' TABLEID, 
'CONTACTTELEXNUMBER' ERRORCOLUMN, 
PWCROWID ROWID, 
7 CATEGORY, 
'CONTACTTELEXNUMBER exceeds max length 10' ERRORDESC, 
CONTACTTELEXNUMBER ERRORVALUE,
A.DATAAREAID DATAAREAID
FROM PWC_T_VendVendorBankAccountEntity A
WHERE LEN(CONTACTTELEXNUMBER) > 10;

EXEC PWC_SP_CALCULATESUCCESSFULCOUNT @TableName = 'PWC_T_VendVendorBankAccountEntity'
END
