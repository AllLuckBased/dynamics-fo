CREATE OR ALTER PROCEDURE PWC_SP_Validate_CustomerBankAccountEntity
AS
BEGIN

-- Mandatory fields missing
    -- BANKACCOUNTNUMBER is blank when IBAN IS NOT blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_CustomerBankAccountEntity' TABLEID, 
        'BANKACCOUNTNUMBER' ERRORCOLUMN, 
        PWCROWID ROWID, 
        1 CATEGORY, 
        'BANKACCOUNTNUMBER is blank when IBAN IS NOT blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_CustomerBankAccountEntity A
    WHERE (BANKACCOUNTNUMBER = '' OR BANKACCOUNTNUMBER IS NULL) AND IBAN IS NOT NULL;

    -- CUSTOMERACCOUNTNUMBER is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_CustomerBankAccountEntity' TABLEID, 
        'CUSTOMERACCOUNTNUMBER' ERRORCOLUMN, 
        PWCROWID ROWID, 
        1 CATEGORY, 
        'CUSTOMERACCOUNTNUMBER is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_CustomerBankAccountEntity A
    WHERE CUSTOMERACCOUNTNUMBER = '' OR CUSTOMERACCOUNTNUMBER IS NULL;

    -- BANKACCOUNTID is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_CustomerBankAccountEntity' TABLEID, 
        'BANKACCOUNTID' ERRORCOLUMN, 
        PWCROWID ROWID, 
        1 CATEGORY, 
        'BANKACCOUNTID is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_CustomerBankAccountEntity A
    WHERE BANKACCOUNTID = '' OR BANKACCOUNTID IS NULL;



-- Business reqd fields missing
    -- BANKNAME is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_CustomerBankAccountEntity' TABLEID, 
        'BANKNAME' ERRORCOLUMN, 
        PWCROWID ROWID, 
        8 CATEGORY, 
        'BANKNAME is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_CustomerBankAccountEntity A
    WHERE BANKNAME = '' OR BANKNAME IS NULL;

    -- CURRENCYCODE is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_CustomerBankAccountEntity' TABLEID, 
        'CURRENCYCODE' ERRORCOLUMN, 
        PWCROWID ROWID, 
        8 CATEGORY, 
        'CURRENCYCODE is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_CustomerBankAccountEntity A
    WHERE CURRENCYCODE = '' OR CURRENCYCODE IS NULL;

    -- IBAN is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_CustomerBankAccountEntity' TABLEID, 
        'IBAN' ERRORCOLUMN, 
        PWCROWID ROWID, 
        8 CATEGORY, 
        'IBAN is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_CustomerBankAccountEntity A
    WHERE IBAN = '' OR IBAN IS NULL;

    -- SWIFTCODE is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_CustomerBankAccountEntity' TABLEID, 
        'SWIFTCODE' ERRORCOLUMN, 
        PWCROWID ROWID, 
        8 CATEGORY, 
        'SWIFTCODE is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_CustomerBankAccountEntity A
    WHERE SWIFTCODE = '' OR SWIFTCODE IS NULL;

    -- CONTACTPERSONNAME is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_CustomerBankAccountEntity' TABLEID, 
        'CONTACTPERSONNAME' ERRORCOLUMN, 
        PWCROWID ROWID, 
        8 CATEGORY, 
        'CONTACTPERSONNAME is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_CustomerBankAccountEntity A
    WHERE CONTACTPERSONNAME = '' OR CONTACTPERSONNAME IS NULL;

    -- ISDEFAULTBANKACCOUNT is blank
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_CustomerBankAccountEntity' TABLEID, 
        'ISDEFAULTBANKACCOUNT' ERRORCOLUMN, 
        PWCROWID ROWID, 
        8 CATEGORY, 
        'ISDEFAULTBANKACCOUNT is blank' ERRORDESC, 
        '' ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_CustomerBankAccountEntity A
    WHERE ISDEFAULTBANKACCOUNT = '' OR ISDEFAULTBANKACCOUNT IS NULL;



-- Invalid Enum values
    -- ROUTINGNUMBERTYPE enum has invalid enum values
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_CustomerBankAccountEntity' TABLEID, 
        'ROUTINGNUMBERTYPE' ERRORCOLUMN, 
        PWCROWID ROWID, 
        2 CATEGORY, 
        'ROUTINGNUMBERTYPE enum has invalid enum values' ERRORDESC, 
        ROUTINGNUMBERTYPE ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_CustomerBankAccountEntity A
    WHERE ROUTINGNUMBERTYPE IS NOT NULL AND ROUTINGNUMBERTYPE NOT IN
        (SELECT MEMBERNAME FROM RETAILENUMVALUETABLE WHERE ENUMNAME LIKE 'BankCodeType');



-- Duplicate check
	-- CUSTOMERACCOUNTNUMBER, BANKACCOUNTID has duplicate values
	INSERT INTO PWCERRORTABLE
	SELECT 
		'PWC_T_CustomerBankAccountEntity' TABLEID, 
		'(CUSTOMERACCOUNTNUMBER, BANKACCOUNTID)' ERRORCOLUMN, 
		PWCROWID ROWID, 
		3 CATEGORY, 
		CASE 
			WHEN LEN(CUSTOMERACCOUNTNUMBER) > 20 OR LEN(BANKACCOUNTID) > 10 THEN 
				'CUSTOMERACCOUNTNUMBER, BANKACCOUNTID has duplicate values upon truncation'
			ELSE 
				'CUSTOMERACCOUNTNUMBER, BANKACCOUNTID has duplicate values'
		END ERRORDESC, 
		CONCAT('(', CUSTOMERACCOUNTNUMBER, ', ', BANKACCOUNTID, ')') ERRORVALUE,
		A.DATAAREAID DATAAREAID
	FROM PWC_T_CustomerBankAccountEntity A
	WHERE 
		CONCAT(LEFT(CUSTOMERACCOUNTNUMBER, 20), LEFT(BANKACCOUNTID, 10), DATAAREAID) IN (
		SELECT CONCAT(LEFT(CUSTOMERACCOUNTNUMBER, 20), LEFT(BANKACCOUNTID, 10), DATAAREAID) 
		FROM PWC_T_CustomerBankAccountEntity
		GROUP BY LEFT(CUSTOMERACCOUNTNUMBER, 20), LEFT(BANKACCOUNTID, 10), DATAAREAID 
		HAVING COUNT(*) > 1
	);




-- Invalid submaster reference
	-- CUSTOMERACCOUNTNUMBER validation
	INSERT INTO PWCERRORTABLE
	SELECT * FROM (SELECT 
		'PWC_T_CustomerBankAccountEntity' TABLEID, 
		CASE 
			WHEN COUNT(B.CUSTOMERACCOUNT) = 0 THEN 'CUSTOMERACCOUNTNUMBER'
			WHEN COUNT(E.CATEGORY) <> 0 THEN 'CUSTOMERACCOUNTNUMBER,[PWC_T_CustCustomerV3Entity]'
		END ERRORCOLUMN, 
		A.PWCROWID ROWID, 
		CASE 
			WHEN COUNT(B.CUSTOMERACCOUNT) = 0 THEN 4
			WHEN COUNT(E.CATEGORY) <> 0 THEN 5
		END CATEGORY, 
		CASE 
			WHEN COUNT(B.CUSTOMERACCOUNT) = 0 THEN 'CUSTOMERACCOUNTNUMBER is not present in CUSTOMERACCOUNT of PWC_T_CustCustomerV3Entity'
			WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_CustCustomerV3Entity has error(s) in corresponding CUSTOMERACCOUNT'
		END ERRORDESC,
		A.CUSTOMERACCOUNTNUMBER ERRORVALUE,
		A.DATAAREAID DATAAREAID
	FROM PWC_T_CustomerBankAccountEntity A
	LEFT JOIN PWC_T_CustCustomerV3Entity B
		ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL' OR UPPER(A.DATAAREAID) = 'GLOBAL') AND A.CUSTOMERACCOUNTNUMBER = B.CUSTOMERACCOUNT
	LEFT JOIN PWCERRORTABLE E
		ON E.TABLEID = 'PWC_T_CustCustomerV3Entity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
			AND B.PWCROWID = E.ROWID
	WHERE 
		A.CUSTOMERACCOUNTNUMBER IS NOT NULL AND A.CUSTOMERACCOUNTNUMBER != ''
	GROUP BY A.PWCROWID, A.CUSTOMERACCOUNTNUMBER, A.DATAAREAID) a
	WHERE CATEGORY IS NOT NULL;

	-- CURRENCYCODE validation
	INSERT INTO PWCERRORTABLE
	SELECT * FROM (SELECT 
		'PWC_T_CustomerBankAccountEntity' TABLEID, 
		CASE 
			WHEN COUNT(B.CURRENCYCODE) = 0 THEN 'CURRENCYCODE'
			WHEN COUNT(E.CATEGORY) <> 0 THEN 'CURRENCYCODE,[PWC_T_CurrencyEntity]'
		END ERRORCOLUMN,
		A.PWCROWID ROWID, 
		CASE 
			WHEN COUNT(B.CURRENCYCODE) = 0 THEN 4
			WHEN COUNT(E.CATEGORY) <> 0 THEN 5
		END CATEGORY, 
		CASE 
			WHEN COUNT(B.CURRENCYCODE) = 0 THEN 'CURRENCYCODE is not present in CURRENCYCODE of PWC_T_CurrencyEntity'
			WHEN COUNT(E.CATEGORY) <> 0 THEN 'PWC_T_CurrencyEntity has error(s) in corresponding CURRENCYCODE'
		END ERRORDESC, 
		A.CURRENCYCODE ERRORVALUE,
		A.DATAAREAID DATAAREAID
	FROM PWC_T_CustomerBankAccountEntity A
	LEFT JOIN PWC_T_CurrencyEntity B
		ON (B.DATAAREAID = A.DATAAREAID OR UPPER(B.DATAAREAID) = 'GLOBAL' OR UPPER(A.DATAAREAID) = 'GLOBAL') AND A.CURRENCYCODE = B.CURRENCYCODE
	LEFT JOIN PWCERRORTABLE E
		ON E.TABLEID = 'PWC_T_CurrencyEntity' AND E.CATEGORY IN (SELECT ID FROM PWCCATEGORY WHERE STATUS = 3)
			AND B.PWCROWID = E.ROWID
	WHERE 
		A.CURRENCYCODE IS NOT NULL AND A.CURRENCYCODE != ''
	GROUP BY TABLEID, A.PWCROWID, A.CURRENCYCODE, A.DATAAREAID) a
	WHERE CATEGORY IS NOT NULL;




-- String length exceeded
    -- CUSTOMERACCOUNTNUMBER exceeds max length 20
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_CustomerBankAccountEntity' TABLEID, 
        'CUSTOMERACCOUNTNUMBER' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'CUSTOMERACCOUNTNUMBER exceeds max length 20' ERRORDESC, 
        CUSTOMERACCOUNTNUMBER ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_CustomerBankAccountEntity A
    WHERE LEN(CUSTOMERACCOUNTNUMBER) > 20;

    -- BANKACCOUNTID exceeds max length 10
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_CustomerBankAccountEntity' TABLEID, 
        'BANKACCOUNTID' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'BANKACCOUNTID exceeds max length 10' ERRORDESC, 
        BANKACCOUNTID ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_CustomerBankAccountEntity A
    WHERE LEN(BANKACCOUNTID) > 10;

    -- BANKACCOUNTNUMBER exceeds max length 48
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_CustomerBankAccountEntity' TABLEID, 
        'BANKACCOUNTNUMBER' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'BANKACCOUNTNUMBER exceeds max length 48' ERRORDESC, 
        BANKACCOUNTNUMBER ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_CustomerBankAccountEntity A
    WHERE LEN(BANKACCOUNTNUMBER) > 48;

    -- BANKNAME exceeds max length 60
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_CustomerBankAccountEntity' TABLEID, 
        'BANKNAME' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'BANKNAME exceeds max length 60' ERRORDESC, 
        BANKNAME ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_CustomerBankAccountEntity A
    WHERE LEN(BANKNAME) > 60;


  -- ROUTINGNUMBER exceeds max length 12
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_CustomerBankAccountEntity' TABLEID, 
        'ROUTINGNUMBER' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'ROUTINGNUMBER exceeds max length 12' ERRORDESC, 
        ROUTINGNUMBER ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_CustomerBankAccountEntity A
    WHERE LEN(ROUTINGNUMBER) > 12;

    -- CURRENCYCODE exceeds max length 3
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_CustomerBankAccountEntity' TABLEID, 
        'CURRENCYCODE' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'CURRENCYCODE exceeds max length 3' ERRORDESC, 
        CURRENCYCODE ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_CustomerBankAccountEntity A
    WHERE LEN(CURRENCYCODE) > 3;

    -- IBAN exceeds max length 48
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_CustomerBankAccountEntity' TABLEID, 
        'IBAN' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'IBAN exceeds max length 48' ERRORDESC, 
        IBAN ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_CustomerBankAccountEntity A
    WHERE LEN(IBAN) > 48;

    -- SWIFTCODE exceeds max length 20
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_CustomerBankAccountEntity' TABLEID, 
        'SWIFTCODE' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'SWIFTCODE exceeds max length 20' ERRORDESC, 
        SWIFTCODE ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_CustomerBankAccountEntity A
    WHERE LEN(SWIFTCODE) > 20;

    -- CONTACTPERSONNAME exceeds max length 60
    INSERT INTO PWCERRORTABLE
    SELECT 
        'PWC_T_CustomerBankAccountEntity' TABLEID, 
        'CONTACTPERSONNAME' ERRORCOLUMN, 
        PWCROWID ROWID, 
        7 CATEGORY, 
        'CONTACTPERSONNAME exceeds max length 60' ERRORDESC, 
        CONTACTPERSONNAME ERRORVALUE,
        A.DATAAREAID DATAAREAID
    FROM PWC_T_CustomerBankAccountEntity A
    WHERE LEN(CONTACTPERSONNAME) > 60;

    -- Calculate successful count
    EXEC PWC_SP_CALCULATESUCCESSFULCOUNT @TableName = 'PWC_T_CustomerBankAccountEntity';
END;